<!DOCTYPE html>
<html lang="en">
<head>
    <link rel="stylesheet" href="../../Styles/jqx.apireference.css" type="text/css" />
    <script type="text/javascript" src="../../scripts/jquery-1.11.1.min.js"></script>
    <script type="text/javascript" src="../../scripts/documentation.js"></script>
    <meta name="keywords" content="jQuery, jQuery DataTable, DataTable, DataTables, JavaScript DataTable, HTML DataTable, jQuery mobile Datatable, mobile widgets, Javascript mobile datatable, html datatable" />
    <meta name="description" content="This page represents the help documentation of the jqxDataTable widget." />
    <title>jqxDataTable API Reference</title>
    <script type="text/javascript">
        $(document).ready(function () {
            $(".documentation-option-type-click").click(function (event) {
                $(event.target).parents('tr').next().find(".property-content").toggle();
            });
        });
    </script>
</head>
<body>
     <div id="properties">
        <h2 class="documentation-top-header">
            Properties</h2>
        <table class="documentation-table">
            <tr>
                <th>
                    Name
                </th>
                <th>
                    Type
                </th>
                <th>
                    Default
                </th>
            </tr>
            <tr>
                <td class="documentation-option-type-click">
                    <span id='Span28'>altRows</span>
                </td>
                <td>
                    <span>Boolean</span>
                </td>
                <td>
                   false
                </td>
            </tr>
            <tr>
                <td colspan='3' style='width: 100%'>
                    <div class="documentation-option-description property-content" style="display: none;">
                        <p>
                          Sets or gets whether the jqxDataTable automatically alternates row colors.</p>
                        <h4>
                            Code examples</h4>
                        <p>
                            Set the <code>altRows</code> property.
                        </p>
                        <pre><code>$('#dataTable').jqxDataTable({altRows: true}); </code></pre>
                        <p>
                            Get the <code>altRows</code> property.
                        </p>
                        <pre><code>var altRows = $('#dataTable').jqxDataTable('altRows'); </code></pre>
                         <div style="padding-bottom:5px;">
  <em>Try it:</em> <a target="_blank" href="http://jsfiddle.net/jqwidgets/vFHYr/">altRows is set to true</a></div>
                    </div>
                </td>
            </tr>
           <tr>
                <td class="documentation-option-type-click">
                    <span id='Span38'>autoRowHeight</span>
                </td>
                <td>
                    <span>Boolean</span>
                </td>
                <td>
                   true
                </td>
            </tr>
            <tr>
                <td colspan='3' style='width: 100%'>
                    <div class="documentation-option-description property-content" style="display: none;">
                        <p>
                          Sets or gets whether the jqxDataTable automatically calculates the rows height and wraps the cell text.</p>
                        <h4>
                            Code examples</h4>
                        <p>
                            Set the <code>autoRowHeight</code> property.
                        </p>
                        <pre><code>$('#dataTable').jqxDataTable({autoRowHeight: true}); </code></pre>
                        <p>
                            Get the <code>autoRowHeight</code> property.
                        </p>
                        <pre><code>var autoRowHeight = $('#dataTable').jqxDataTable('autoRowHeight'); </code></pre>
                              <div style="padding-bottom:5px;">
  <em>Try it:</em> <a target="_blank" href="http://jsfiddle.net/jqwidgets/95bVk/">autoRowHeight is set to false</a></div>
                    </div>
                </td>
            </tr>
            <tr>
                <td class="documentation-option-type-click">
                    <span id='Span39'>aggregatesHeight</span>
                </td>
                <td>
                    <span>Number</span>
                </td>
                <td>
                   34
                </td>
            </tr>
            <tr>
                <td colspan='3' style='width: 100%'>
                    <div class="documentation-option-description property-content" style="display: none;">
                        <p>
                          Sets or gets the height of the aggregates bar. Aggregates bar is displayed after setting <code>showAggregates</code> to true.</p>
                        <h4>
                            Code examples</h4>
                        <p>
                            Set the <code>aggregatesHeight</code> property.
                        </p>
                        <pre><code>$('#dataTable').jqxDataTable({aggregatesHeight: 50}); </code></pre>
                        <p>
                            Get the <code>aggregatesHeight</code> property.
                        </p>
                        <pre><code>var aggregatesHeight = $('#dataTable').jqxDataTable('aggregatesHeight'); </code></pre>
                          <div style="padding-bottom:5px;">
  <em>Try it:</em> <a target="_blank" href="http://jsfiddle.net/jqwidgets/vkC3u/">aggregatesHeight is set to 40</a></div>
                    </div>
                </td>
            </tr>
            <tr>
                <td class="documentation-option-type-click">
                    <span id='Span40'>autoShowLoadElement</span>
                </td>
                <td>
                    <span>Boolean</span>
                </td>
                <td>
                   true
                </td>
            </tr>
            <tr>
                <td colspan='3' style='width: 100%'>
                    <div class="documentation-option-description property-content" style="display: none;">
                        <p>
                          Sets or gets whether the loading html element with animated gif is automatically displayed by the widget during the data binding process.</p>
                        <h4>
                            Code examples</h4>
                        <p>
                            Set the <code>autoShowLoadElement</code> property.
                        </p>
                        <pre><code>$('#dataTable').jqxDataTable({autoShowLoadElement: false}); </code></pre>
                        <p>
                            Get the <code>autoShowLoadElement</code> property.
                        </p>
                        <pre><code>var autoShowLoadElement = $('#dataTable').jqxDataTable('autoShowLoadElement'); </code></pre>
                         <div style="padding-bottom:5px;">
  <em>Try it:</em> <a target="_blank" href="http://jsfiddle.net/jqwidgets/YJ8EC/">autoShowLoadElement is set to false</a></div>
                    </div>
                </td>
            </tr>
            <tr>
                <td class="documentation-option-type-click">
                    <span id='Span41'>columnsHeight</span>
                </td>
                <td>
                    <span>Number</span>
                </td>
                <td>
                   30
                </td>
            </tr>
            <tr>
                <td colspan='3' style='width: 100%'>
                    <div class="documentation-option-description property-content" style="display: none;">
                        <p>
                          Sets or gets the height of the columns header.</p>
                        <h4>
                            Code examples</h4>
                        <p>
                            Set the <code>columnsHeight</code> property.
                        </p>
                        <pre><code>$('#dataTable').jqxDataTable({columnsHeight: 40}); </code></pre>
                        <p>
                            Get the <code>columnsHeight</code> property.
                        </p>
                        <pre><code>var columnsHeight = $('#dataTable').jqxDataTable('columnsHeight'); </code></pre>
                                <div style="padding-bottom:5px;">
  <em>Try it:</em> <a target="_blank" href="http://jsfiddle.net/jqwidgets/f99yu/">columnsHeight is set to 20</a></div>
                    </div>
                </td>
            </tr>
           <tr>
                <td class="documentation-option-type-click">
                    <span id='Span42'>columns</span>
                </td>
                <td>
                    <span>Array</span>
                </td>
                <td>
                   []
                </td>
            </tr>
            <tr>
                <td colspan='3' style='width: 100%'>
                    <div class="documentation-option-description property-content" style="display: none;">
                        <p>
                          Sets the jqxDataTable's columns.</p>
                          <br />   
                          List of properties:
<ul>
    <li>text - string property which sets the column header's text.</li>
    <li>dataField - string property which sets the column's bound field. It should be unique and should point to a data field defined in the jqxDataAdapter's dataFields array.</li>
    <li>displayField - string property which sets the column's display field. It should be unique and should point to a data field defined in the jqxDataAdapter's dataFields array.</li>
    <li>sortable - boolean property which determines whether the column is sortable.</li>
    <li>filterable - boolean property which determines whether the column is filterable.</li>
    <li>hidden - boolean property which determines whether the column is visible or hidden.</li>
    <li>columnGroup - string property which determines the name of the column's parent group. It should point to a valid name defined in the <code>columnGroups</code>.</li>
    <li>autoCellHeight - boolean property which determines whether the cell's data wrapping is enabled. This property is set to <code>true</code> by default. When <code>autoRowHeight</code> is enabled and <code>autoCellHeight</code> is set to false, the cell's data will not be wrapped.</li>
    <li>renderer - callback function for custom rendering of the column's header.
   <h4>Code Example</h4>
 <pre style='width: 600px; max-width: 600px; margin: 0px;' class='code'>renderer: function (text, align, height) {<div/>    var checkBox = <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"<span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;div id=<span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'checkbox' style='z-index: 999; margin: 5px; margin-left: 30px; margin-top: 8px; margin-bottom: 3px;'</span>&gt;</span>"</span>;<div/>    checkBox += <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"<span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/div&gt;</span>"</span>;<div/>    return checkBox;<div/>}<div/></pre>
    </li>
    <li>rendered - callback function which is called after the column's header rendering is completed.
   <h4>Code Example</h4>
 <pre style='width: 600px; max-width: 600px; margin: 0px;' class='code'>rendered: function (element, align, height) {<div/>    element.jqxCheckBox();<div/>    element.on(<span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'change'</span>, function (event) {<div/>        if (!updatingSelectionFromDataTable) {<div/>            var args = event.args;<div/>            var rows = $(<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"#dataTable"</span>).jqxDataTable(<span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'getRows'</span>);<div/>            updatingSelection = true;<div/>            if (args.checked) {<div/>                for (var i = 0; i &lt; rows.length; i++) {<div/>                    $(<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"#dataTable"</span>).jqxDataTable(<span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'selectRow'</span>, i);<div/>                }<div/><div/>            }<div/>            else {<div/>                $(<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"#dataTable"</span>).jqxDataTable(<span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'clearSelection'</span>);<div/>            }<div/>            updatingSelection = false;<div/>        }<div/>    });<div/>    return true;<div/>}<div/></pre>
    </li>
    <li>cellsRenderer - callback function which is called when a cell is being rendered. The result of that function should be valid and well-formatted HTML String.
       The cellsRenderer function has 4 parameters passed by jqxDataTable - row's index, column's data field, cell's value, row's data as an Object of Key/Value pairs.
   <h4>Code Example</h4>
 <pre style='width: 600px; max-width: 600px; margin: 0px;' class='code'>{<div/>    text: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'Details', align: 'center', dataField: 'lastname'</span>,<div/>    // row - row's index.<div/>    // column - column's data field.<div/>    // value - cell's value.<div/>    // rowData - rendered row's object.<div/>    cellsRenderer: function (row, column, value, rowData) {<div/>        var container = <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'<span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;div style=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"width: 100%; height: 100%;"</span>&gt;</span>'</span><div/>        var leftcolumn = <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'<span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;div style=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"float: left; width: 50%;"</span>&gt;</span>'</span>;<div/>        var rightcolumn = <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'<span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;div style=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"float: left; width: 50%;"</span>&gt;</span>'</span>;<div/>                      <div/>        var firstname = <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"<span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;div style=<span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'margin: 10px;'</span>&gt;</span><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;b&gt;</span>First Name:<span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/b&gt;</span> " + rowData.firstname + "<span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/div&gt;</span>"</span>;<div/>        var lastname = <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"<span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;div style=<span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'margin: 10px;'</span>&gt;</span><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;b&gt;</span>Last Name:<span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/b&gt;</span> " + rowData.lastname + "<span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/div&gt;</span>"</span>;<div/>        var title = <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"<span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;div style=<span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'margin: 10px;'</span>&gt;</span><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;b&gt;</span>Title:<span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/b&gt;</span> " + rowData.title + "<span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/div&gt;</span>"</span>;<div/>        var address = <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"<span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;div style=<span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'margin: 10px;'</span>&gt;</span><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;b&gt;</span>Address:<span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/b&gt;</span> " + rowData.address + "<span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/div&gt;</span>"</span>;<div/>                            <div/>        leftcolumn += firstname;<div/>        leftcolumn += lastname;<div/>        leftcolumn += title;<div/>        leftcolumn += address;<div/>        leftcolumn += <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"<span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/div&gt;</span>"</span>;<div/><div/>        var postalcode = <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"<span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;div style=<span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'margin: 10px;'</span>&gt;</span><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;b&gt;</span>Postal Code:<span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/b&gt;</span> " + rowData.postalcode + "<span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/div&gt;</span>"</span>;<div/>        var city = <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"<span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;div style=<span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'margin: 10px;'</span>&gt;</span><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;b&gt;</span>City:<span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/b&gt;</span> " + rowData.city + "<span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/div&gt;</span>"</span>;<div/>        var phone = <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"<span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;div style=<span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'margin: 10px;'</span>&gt;</span><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;b&gt;</span>Phone:<span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/b&gt;</span> " + rowData.homephone + "<span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/div&gt;</span>"</span>;<div/>        var hiredate = <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"<span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;div style=<span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'margin: 10px;'</span>&gt;</span><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;b&gt;</span>Hire Date:<span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/b&gt;</span> " + rowData.hiredate + "<span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/div&gt;</span>"</span>;<div/><div/>        rightcolumn += postalcode;<div/>        rightcolumn += city;<div/>        rightcolumn += phone;<div/>        rightcolumn += hiredate;<div/>        rightcolumn += <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"<span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/div&gt;</span>"</span>;<div/>        container += leftcolumn;<div/>        container += rightcolumn;<div/>        container += <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"<span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/div&gt;</span>"</span>;<div/>        return container;<div/>    }<div/>}<div/></pre>
    </li>
    <li>columnType - string property which determines the column's type.<br /> Possible values:
        <ul>
           <li>"template" - sets a custom editor as a default editor for the column. The editor should be created in the <code>createEditor</code> callback function. The editor should be synchronized with the cell's value in the <code>initEditor</code> callback. The editor's value should be retrieved in the <code>getEditorValue</code> callback function.</li>
           <li>"custom" - sets a custom editor as a default editor for a cell. That setting enables you to have different cell editors in the column. The editors should be created in the <code>createEditor</code> callback function which is called for each row when the <code>columnType</code> property is set to "custom". The editors should be synchronized with the cell's value in the <code>initEditor</code> callback. The editor's value should be retrieved in the <code>getEditorValue</code> callback function.</li>
        </ul>
    </li>
    <li>validation - callback function which is called when the jqxDataTable's edited row needs to be validated. The function has 2 parameters - edit cell and the cell's value. The function should return
    true or false, depending on the user's validation logic. It can also return a validation object with 2 fields - "result" - true or false, and "message" - validation string displayed to the users.
   <h4>Code Example</h4>
 <pre style='width: 600px; max-width: 600px; margin: 0px;' class='code'>validation: function (cell, value) {<div/>    var date = new Date(value);<div/>    if (date.getFullYear() &gt; 2014 || date.getFullYear() &lt; 1990) {<div/>        return { message: <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"Shipped Date should be in the 1990 - 2014 interval"</span>, result: false };<div/>    }<div/>    return true;<div/>}<div/></pre>
    </li>
   <li>initEditor - callback function which is called when an editor is opened. It has 5 parameters - row's index, cell's value, the editor element, cell's width and cell's height. The function can be 
   used for adding some custom parameters to the editor.
   <h4>Code Example</h4>
 <pre style='width: 600px; max-width: 600px; margin: 0px;' class='code'>initEditor: function (row, cellValue, editor, cellText, width, height) {<div/>  // your code here<div/>}<div/></pre>
    </li>
   <li>createEditor - callback function which is called just once when the cells editor is created. It has 5 parameters - row's index, cell's value, the editor element, cell's width and cell's height. The function can be 
   used for adding some custom parameters to the editor.
   <h4>Code Example</h4>
 <pre style='width: 600px; max-width: 600px; margin: 0px;' class='code'>createEditor: function (row, cellValue, editor, cellText, width, height) {<div/>  // your code here<div/>}<div/></pre>
    </li>
    <li>getEditorValue - callback function which could be used for overriding the value returned by the editor. It is useful for advanced scenarios with custom editors. It has 3 parameters - row's index, cell's value and the editor element. The result of the function is expected to be the editor's new value.
   <h4>Code Example</h4>
 <pre style='width: 600px; max-width: 600px; margin: 0px;' class='code'>getEditorValue: function (row, cellValue, editor) {<div/>  // your code here<div/>}<div/></pre>
    </li>
    <li>cellsFormat - determines the Format string used for formatting the cell values.<br />
<br />
Possible Number strings:
<br />
"d" - decimal numbers.
<br />
"f" - floating-point numbers.
<br />
"n" - integer numbers.
<br />
"c" - currency numbers.
<br />
"p" - percentage numbers.
<br />
<br />
For adding decimal places to the numbers, add a number after the formatting string.
<br />
For example: "c3" displays a number in this format $25.256 
<br />
Possible built-in Date formats:
<br />
<br />
// short date pattern
d: "M/d/yyyy",
<br />
// long date pattern
D: "dddd, MMMM dd, yyyy",
<br />
// short time pattern
t: "h:mm tt",
<br />
// long time pattern
T: "h:mm:ss tt",
<br />
// long date, short time pattern
f: "dddd, MMMM dd, yyyy h:mm tt",
<br />
// long date, long time pattern
F: "dddd, MMMM dd, yyyy h:mm:ss tt",
<br />
// month/day pattern
M: "MMMM dd",
<br />
// month/year pattern
Y: "yyyy MMMM",
<br />
// S is a sortable format that does not vary by culture
S: "yyyy\u0027-\u0027MM\u0027-\u0027dd\u0027T\u0027HH\u0027:\u0027mm\u0027:\u0027ss"
<br />
<br />  
Possible Date format strings:
<br />
<br />
"d"-the day of the month;<br />
"dd"-the day of the month;
<br />
"ddd"-the abbreviated name of the day of the week;<br />
"dddd"- the full name of the day of the week;<br />
"h"-the hour, using a 12-hour clock from 1 to 12;
<br />
"hh"-the hour, using a 12-hour clock from 01 to 12;
<br />
"H"-the hour, using a 24-hour clock from 0 to 23;<br />
"HH"- the hour, using a 24-hour clock from 00 to 23;
<br />
"m"-the minute, from 0 through 59;<br />
"mm"-the minutes,from 00 though59;<br />
"M"- the month, from 1 through 12;<br />
"MM"- the month, from 01 through 12;<br />
"MMM"-the abbreviated name of the month;<br />
"MMMM"-the full name of the month;<br />
"s"-the second, from 0 through 59;
<br />
"ss"-the second, from 00 through 59;
<br />
"t"- the first character of the AM/PM designator;<br />
"tt"-the AM/PM designator;
<br />
"y"- the year, from 0 to 99;
<br />
"yy"- the year, from 00 to 99;
<br />
"yyy"-the year, with a minimum of three digits;
<br />
"yyyy"-the year as a four-digit number;
<br />
    </li>
    <li>aggregates - array property which determines the column aggregates.<br /><br />
    <h4>Code Examples</h4>
    <pre><code>{ text: 'Price', datafield: 'price', cellsalign: 'right', cellsformat: 'c2', aggregates: ['sum', 'avg'] }</code></pre>
    <br />
    Aggregate functions:  
                                <ul>
                                    <li>'avg' - Average aggregate</li>
                                    <li>'count' - Count aggregate</li>
                                    <li>'min' - Min aggregate</li>
                                    <li>'max' - Max aggregate</li>
                                    <li>'sum' - Sum aggregate</li>
                                    <li>'product' - Product aggregate</li>
                                    <li>'stdev' - Standard deviation on a sample.</li>
                                    <li>'stdevp' - Standard deviation on an entire population.</li>
                                    <li>'varp' - Variance on an entire population.</li>
                                    <li>'var' - Variance on a sample.</li>
                                 </ul>
                                 <br />
                                Custom Aggregate<br />
<pre><code>
aggregates: [{ 'In Stock':
    function (aggregatedValue, currentValue) {
        if (currentValue) {
            return aggregatedValue + 1;
        }

        return aggregatedValue;
    }
}
</code></pre>
<br />
Custom Aggregate which aggregates values from two columns
<br />
<pre><code>
{ text: 'Price', dataField: 'price', cellsAlign: 'right', cellsFormat: 'c2', aggregates: [{ '<b>Total</b>':
            function (aggregatedValue, currentValue, column, record) {
                var total = currentValue * parseInt(record['quantity']);
                return aggregatedValue + total;
            }
        }]                  
 }
</code></pre>
<br />
'In Stock' - the aggregate's display name.
The function has 2 params - the aggregated value and the current value. It should return an aggregated value.
    </li>
    <li>aggregatesRenderer - callback function which could be used for customization of the aggregates rendering. It has 1 parameter - the column's aggregates.              
   <h4>Code Example</h4>
 <pre><code>
{ text: 'Quantity', dataField: 'quantity', width: 85, cellsAlign: 'right', cellsFormat: 'n2', aggregates: ['min', 'max'],
    aggregatesRenderer: function (aggregates) {
        var renderstring = "";
        $.each(aggregates, function (key, value) {
            var name = key == 'min' ? 'Min' : 'Max';
            renderstring += '<div style="position: relative; margin: 4px; overflow: hidden;">' + name + ': ' + value +'</div>';
        });
        return renderstring;
    }
}
</code></pre>
                      </li>
    <li>align - string property which determines the alignment of the column's header. Possible values: 'left', 'center' or 'right'</li>
    <li>cellsAlign - string property which determines the alignment of the column's cells. Possible values: 'left', 'center' or 'right'.</li>
    <li>width - numeric property which determines the column's width.</li>
    <li>minWidth - numeric property which determines the column's minimum width. Default value: 25.</li>
    <li>maxWidth - numeric property which determines the column's maximum width.</li>
    <li>resizable - boolean property which determines whether the column is resizable.</li>
    <li>draggable - boolean property which determines whether the column is draggable.</li>
    <li>editable - boolean property which determines whether the column is editable.</li>
    <li>className - string property which sets a custom CSS class for the column's header</li>
    <li>cellClassName - string or function property which sets a custom CSS class for the column's cells. The value could be a "String" or "Function".
        <br />
        Apply a CSS class to all cells in the column.
        <pre><code>
text: 'Ship Name', datafield: 'ShipName', width: 150, cellclassname: "yellowCell" 
        </code></pre>
        <br />
        Apply a conditional CSS Class depending on the cell's value.
        <pre><code>
text: 'Ship Name', dataField: 'ShipName', width: 150,
cellClassName: function (row, column, value, data) {
    if (value == "Hanari Carnes") {
        return "yellowCell";
    }
}
        </code></pre>
    </li>
    <li>pinned - boolean property which determines whether the column is pinned(frozen).</li>
    </ul>                  
                        <h4>
                            Code examples</h4>
                        <p>
                            Set the <code>columns</code> property.
                        </p>
                        <pre style='width: 600px; max-width: 600px; margin: 0px;' class='code'>$(<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"#table"</span>).jqxDataTable(<div/>{<div/>    altrows: true,<div/>    sortable: true,<div/>    columns: [<div/>        { text: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'First Name', dataField: 'First Name'</span>, width: 100 },<div/>        { text: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'Last Name', dataField: 'Last Name'</span>, width: 100 },<div/>        { text: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'Product', dataField: 'Product'</span>, width: 180 },<div/>        { text: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'Unit Price', dataField: 'Price', width: 90, align: 'right', cellsAlign: 'right', cellsFormat: 'c2'</span> },<div/>        { text: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'Quantity', dataField: 'Quantity', width: 80, align: 'right', cellsAlign: 'right'</span> }<div/>    ]<div/>});<div/></pre>
                           <div style="padding-bottom:5px;">
  <em>Try it:</em> <a target="_blank" href="http://jsfiddle.net/jqwidgets/dE5pk/">columns is set to a custom array</a></div>
                         </div>
                </td>
            </tr>
           <tr>
                <td class="documentation-option-type-click">
                    <span id='Span43'>columnGroups</span>
                </td>
                <td>
                    <span>Array</span>
                </td>
                <td>
                   []
                </td>
            </tr>
            <tr>
                <td colspan='3' style='width: 100%'>
                    <div class="documentation-option-description property-content" style="display: none;">
                        <p>
                          Sets the jqxDataTable's column groups.</p> The columnGroups property enables you to create a jqxDataTable with multi column headers. 
                         List of properties:
                         <ul>
                               <li>parentGroup - string property which determines the parent group's name.</li>
                               <li>name - string property which determines the group's name.</li>
                               <li>align - string property which determines the column header's alignment. Possible values: 'left', 'center' or 'right'.</li>
                        </ul>
                        <h4>
                            Code examples</h4>
                        <p>
                            Set the <code>columnGroups</code> property.
                        </p>
<pre style='width: 600px; max-width: 600px; margin: 0px;' class='code'>// prepare the data<div/>var source =<div/>{<div/>    dataType: <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"xml"</span>,<div/>    dataFields: [<div/>            { name: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'SupplierName', type: 'string'</span> },<div/>            { name: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'Quantity', type: 'number'</span> },<div/>            { name: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'OrderDate', type: 'date'</span> },<div/>            { name: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'OrderAddress', type: 'string'</span> },<div/>            { name: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'Freight', type: 'number'</span> },<div/>            { name: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'Price', type: 'number'</span> },<div/>            { name: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'City', type: 'string'</span> },<div/>            { name: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'ProductName', type: 'string'</span> },<div/>            { name: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'Address', type: 'string'</span> }<div/>    ], <div/>    url: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'../sampledata/orderdetailsextended.xml'</span>,<div/>    root: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'DATA'</span>,<div/>    record: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'ROW'</span><div/>};<div/>var dataAdapter = new $.jqx.dataAdapter(source, {<div/>    loadComplete: function () {<div/><div/>    }<div/>});<div/>// create jqxDataTable.<div/>$(<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"#dataTable"</span>).jqxDataTable(<div/>{<div/>    width: 690,<div/>    height: 400,<div/>    source: dataAdapter,<div/>    pageable: true,<div/>    altRows: true,<div/>    columnsResize: true,<div/>    columns: [<div/>        { text: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'Supplier Name', cellsAlign: 'center', align: 'center', dataField: 'SupplierName'</span>, width: 110 },<div/>        { text: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'Name', columngroup: 'ProductDetails', cellsAlign: 'center', align: 'center', dataField: 'ProductName'</span>, width: 120 },<div/>        { text: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'Quantity', columngroup: 'ProductDetails', dataField: 'Quantity', cellsFormat: 'd', cellsAlign: 'center', align: 'center'</span>, width: 80 },<div/>        { text: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'Freight', columngroup: 'OrderDetails', dataField: 'Freight', cellsFormat: 'd', cellsAlign: 'center', align: 'center'</span>, width: 100 },<div/>        { text: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'Order Date', columngroup: 'OrderDetails', cellsAlign: 'center', align: 'center', cellsFormat: 'd', dataField: 'OrderDate'</span>, width: 100 },<div/>        { text: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'Order Address', columngroup: 'OrderDetails', cellsAlign: 'center', align: 'center', dataField: 'OrderAddress'</span>, width: 100 },<div/>        { text: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'Price', columngroup: 'ProductDetails', dataField: 'Price', cellsFormat: 'c2', align: 'center', cellsAlign: 'center'</span>, width: 70 },<div/>        { text: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'Address', columngroup: 'Location', cellsAlign: 'center', align: 'center', dataField: 'Address'</span>, width: 120 },<div/>        { text: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'City', columngroup: 'Location', cellsAlign: 'center', align: 'center', dataField: 'City'</span>, width: 80 }<div/>    ],<div/>    columnGroups: <div/>    [<div/>        { text: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'Product Details', align: 'center', name: 'ProductDetails'</span> },<div/>        { text: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'Order Details', parentGroup: 'ProductDetails', align: 'center', name: 'OrderDetails'</span> },<div/>        { text: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'Location', align: 'center', name: 'Location'</span> }<div/>    ]<div/>});<div/></pre>        
                        <div style="padding-bottom:5px;">
  <em>Try it:</em> <a target="_blank" href="http://jsfiddle.net/jqwidgets/EcFZy/">columnGroups is set to a custom array</a></div>
                         </div>
                </td>
            </tr>
          <tr>
                <td class="documentation-option-type-click">
                    <span id='Span44'>columnsResize</span>
                </td>
                <td>
                    <span>Boolean</span>
                </td>
                <td>
                   false
                </td>
            </tr>
            <tr>
                <td colspan='3' style='width: 100%'>
                    <div class="documentation-option-description property-content" style="display: none;">
                        <p>
                            Sets or gets the jqxDataTable's columnsResize.</p>
                        <h4>
                            Code examples</h4>
                        <p>
                            Set the <code>columnsResize</code> property.
                        </p>
                        <pre><code>$('#dataTable').jqxDataTable({columnsResize: false});</code></pre>
                        <p>
                            Get the <code>columnsResize</code> property.
                        </p>
                        <pre><code>var columnsResize = $('#dataTable').jqxDataTable('columnsResize');</code></pre>
                               <div style="padding-bottom:5px;">
  <em>Try it:</em> <a target="_blank" href="http://jsfiddle.net/jqwidgets/5hCR2/">columnsResize is set to true</a></div>
                     </div>
                </td>
            </tr>
         <tr>
                <td class="documentation-option-type-click">
                    <span id='Span100'>columnsReorder</span>
                </td>
                <td>
                    <span>Boolean</span>
                </td>
                <td>
                   false
                </td>
            </tr>
            <tr>
                <td colspan='3' style='width: 100%'>
                    <div class="documentation-option-description property-content" style="display: none;">
                        <p>
                            Sets or gets the jqxDataTable's columnsReorder.</p>
                        <h4>
                            Code examples</h4>
                        <p>
                            Set the <code>columnsReorder</code> property.
                        </p>
                        <pre><code>$('#dataTable').jqxDataTable({columnsReorder: false});</code></pre>
                        <p>
                            Get the <code>columnsReorder</code> property.
                        </p>
                        <pre><code>var columnsReorder = $('#dataTable').jqxDataTable('columnsReorder');</code></pre>
                               <div style="padding-bottom:5px;">
  <em>Try it:</em> <a target="_blank" href="http://jsfiddle.net/jqwidgets/9uxD2/">columnsReorder is set to true</a></div>
                     </div>
                </td>
            </tr>
           <tr>
                <td class="documentation-option-type-click">
                    <span id='Span2'>disabled</span>
                </td>
                <td>
                    <span>Boolean</span>
                </td>
                <td>
                    false
                </td>
            </tr>
            <tr>
                <td colspan='3' style='width: 100%'>
                    <div class="documentation-option-description property-content" style="display: none;">
                        <p>
                            Sets or gets whether the jqxDataTable is disabled.</p>
                        <h4>
                            Code examples</h4>
                        <p>
                            Set the <code>disabled</code> property.
                        </p>
                        <pre><code>$('#dataTable').jqxDataTable({ disabled:true }); </code></pre>
                        <p>
                            Get the <code>disabled</code> property.
                        </p>
                        <pre><code>var disabled = $('#dataTable').jqxDataTable('disabled');</code></pre>
                               <div style="padding-bottom:5px;">
  <em>Try it:</em> <a target="_blank" href="http://jsfiddle.net/jqwidgets/L889k/">disabled is set to true</a></div>
                    </div>
                </td>
            </tr>
          <tr>
                <td class="documentation-option-type-click">
                    <span id='Span45'>editable</span>
                </td>
                <td>
                    <span>Boolean</span>
                </td>
                <td>
                    false
                </td>
            </tr>
            <tr>
                <td colspan='3' style='width: 100%'>
                    <div class="documentation-option-description property-content" style="display: none;">
                        <p>
                            Sets or gets whether the jqxDataTable editing is enabled.</p>
                        <h4>
                            Code examples</h4>
                        <p>
                            Set the <code>editable</code> property.
                        </p>
                        <pre><code>$('#dataTable').jqxDataTable({ editable:true }); </code></pre>
                        <p>
                            Get the <code>editable</code> property.
                        </p>
                        <pre><code>var editable = $('#dataTable').jqxDataTable('editable');</code></pre>
                           <div style="padding-bottom:5px;">
  <em>Try it:</em> <a target="_blank" href="http://jsfiddle.net/jqwidgets/VTrPX/">editable is set to true</a></div>
                    </div>
                </td>
            </tr>
            <tr>
                <td class="documentation-option-type-click">
                    <span id='Span46'>editSettings</span>
                </td>
                <td>
                    <span>Object</span>
                </td>
                <td>
                    { saveOnPageChange: true, saveOnBlur: true, saveOnSelectionChange: true, cancelOnEsc: true, saveOnEnter: true, editSingleCell: false, editOnDoubleClick: true, editOnF2: true }
                </td>
            </tr>
            <tr>
                <td colspan='3' style='width: 100%'>
                    <div class="documentation-option-description property-content" style="display: none;">
                        <p>
                            Sets or gets the jqxDataTable's edit settings.</p>
                        <h4>
                            Code examples</h4>
                        <p>
                            Set the <code>editSettings</code> property.
                        </p>
                        <pre><code>$('#dataTable').jqxDataTable({ editSettings:{ saveOnPageChange: true, saveOnBlur: true, saveOnSelectionChange: false, cancelOnEsc: true, saveOnEnter: true, editSingleCell: false, editOnDoubleClick: true, editOnF2: true } }); </code></pre>
                        <p>
                            Get the <code>editSettings</code> property.
                        </p>
                        <pre><code>var editSettings = $('#dataTable').jqxDataTable('editSettings');</code></pre>
                        <div style="padding-bottom:5px;">
  <em>Try it:</em> <a target="_blank" href="http://jsfiddle.net/jqwidgets/vLb68/">editSettings is set to a custom object</a></div>
                    </div>
                </td>
            </tr>
   <tr>
                <td class="documentation-option-type-click">
                    <span id='Span106'>exportSettings</span>
                </td>
                <td>
                    <span>Object</span>
                </td>
                <td>
                     { columnsHeader: true, hiddenColumns: false, serverURL: null, characterSet: null, recordsInView: true, fileName: "jqxDataTable"}
                </td>
            </tr>
            <tr>
                <td colspan='3' style='width: 100%'>
                    <div class="documentation-option-description property-content" style="display: none;">
                        <p>
                              Determines the Data Export settings used by jqxDataTable when <code>exportData</code> is called. See also the <code>exportData</code> method.
                        </p>
                        List of parameters:
                        <ul>
                            <li>columnsHeader - determines whether to export the column's header.</li>
                            <li>hiddenColumns - determines whether to export the hidden columns.</li>
                            <li>serverURL - determines the URL of the save-file.php.</li>
                            <li>characterSet - determines the char set.</li>
                            <li>recordsInView - determines whether to export all records or to take also the filtering and sorting into account.</li>
                            <li>fileName - determines the file's name. Set this to null if you want to export the data to a local variable.</li>
                        </ul>
                        <h4>
                            Code example</h4>
                        <p>
                            Set the <code>exportSettings</code> property.
                        </p>               
                        <pre><code>$("#dataTable").jqxDataTable({exportSettings:  { columnsHeader: true, hiddenColumns: false, serverURL: null, characterSet: null, recordsInView: true, fileName: "jqxDataTable"}});</code></pre>
                                 <p>
                            Get the <code>exportSettings</code> property.
                        </p>
                        <pre><code>var exportSettings = $('#dataTable').jqxDataTable('exportSettings');</code></pre>
   
                         <div style="padding-bottom:5px;">
  <em>Try it:</em> <a target="_blank" href="http://jsfiddle.net/jqwidgets/nR35Y/"> exportSettings is set to a custom object.</a></div> 
                    </div>
                </td>
            </tr>
             <tr>
                <td class="documentation-option-type-click">
                    <span id='Span29'>enableHover</span>
                </td>
                <td>
                    <span>Boolean</span>
                </td>
                <td>
                   true
                </td>
            </tr>
            <tr>
                <td colspan='3' style='width: 100%'>
                    <div class="documentation-option-description property-content" style="display: none;">
                        <p>
                          Sets or gets whether row highlighting is enabled.</p>
                        <h4>
                            Code examples</h4>
                        <p>
                            Set the <code>enableHover</code> property.
                        </p>
                        <pre><code>$('#dataTable').jqxDataTable({enableHover: false }); </code></pre>
                        <p>
                            Get the <code>enableHover</code> property.
                        </p>
                        <pre><code>var enableHover = $('#dataTable').jqxDataTable('enableHover'); </code></pre>
                              <div style="padding-bottom:5px;">
  <em>Try it:</em> <a target="_blank" href="http://jsfiddle.net/jqwidgets/gqJr4/">enableHover is set to false</a></div>
                    </div>
                </td>
            </tr>
            <tr>
                <td class="documentation-option-type-click">
                    <span id='Span30'>enableBrowserSelection</span>
                </td>
                <td>
                    <span>Boolean</span>
                </td>
                <td>
                   false
                </td>
            </tr>
            <tr>
                <td colspan='3' style='width: 100%'>
                    <div class="documentation-option-description property-content" style="display: none;">
                        <p>
                          Enables or disables the default text selection of the web browser.</p>
                        <h4>
                            Code examples</h4>
                        <p>
                            Set the <code>enableBrowserSelection</code> property.
                        </p>
                        <pre><code>$('#dataTable').jqxDataTable({enableBrowserSelection: true }); </code></pre>
                        <p>
                            Get the <code>enableBrowserSelection</code> property.
                        </p>
                        <pre><code>var enableBrowserSelection = $('#dataTable').jqxDataTable('enableBrowserSelection'); </code></pre>
                          <div style="padding-bottom:5px;">
  <em>Try it:</em> <a target="_blank" href="http://jsfiddle.net/jqwidgets/wvFnC/">enableBrowserSelection is set to true</a></div>
                    </div>
                </td>
            </tr>
           <tr>
                <td class="documentation-option-type-click">
                    <span id='Span22'>filterable</span>
                </td>
                <td>
                    <span>Boolean</span>
                </td>
                <td>
                   false
                </td>
            </tr>
            <tr>
                <td colspan='3' style='width: 100%'>
                    <div class="documentation-option-description property-content" style="display: none;">
                        <p>
                          Enables/Disables the filtering feature.</p>
                        <h4>
                            Code examples</h4>
                        <p>
                            Set the <code>filterable</code> property.
                        </p>
                        <pre><code>$('#dataTable').jqxDataTable({filterable: true}); </code></pre>
                        <p>
                            Get the <code>filterable</code> property.
                        </p>
                        <pre><code>var filterable = $('#dataTable').jqxDataTable('filterable'); </code></pre>
                             <div style="padding-bottom:5px;">
  <em>Try it:</em> <a target="_blank" href="http://jsfiddle.net/jqwidgets/RU2SW/">filterable is set to true</a></div>
                    </div>
                </td>
            </tr>
             <tr>
                <td class="documentation-option-type-click">
                    <span id='Span23'>filterHeight</span>
                </td>
                <td>
                    <span>Number</span>
                </td>
                <td>
                   30
                </td>
            </tr>
            <tr>
                <td colspan='3' style='width: 100%'>
                    <div class="documentation-option-description property-content" style="display: none;">
                        <p>
                          Sets or gets the Filter Element's height.</p>
                        <h4>
                            Code examples</h4>
                        <p>
                            Set the <code>filterHeight</code> property.
                        </p>
                        <pre><code>$('#dataTable').jqxDataTable({filterHeight: 40}); </code></pre>
                        <p>
                            Get the <code>filterHeight</code> property.
                        </p>
                        <pre><code>var filterHeight = $('#dataTable').jqxDataTable('filterHeight'); </code></pre>
                          <div style="padding-bottom:5px;">
  <em>Try it:</em> <a target="_blank" href="http://jsfiddle.net/jqwidgets/mzE63/">filterHeight is set to 35</a></div>
                    </div>
                </td>
            </tr>
             <tr>
                <td class="documentation-option-type-click">
                    <span id='Span24'>filterMode</span>
                </td>
                <td>
                    <span>String</span>
                </td>
                <td>
                   "default"
                </td>
            </tr>
            <tr>
                <td colspan='3' style='width: 100%'>
                    <div class="documentation-option-description property-content" style="display: none;">
                        <p>
                          Determines the Filter's mode. Possible values: <code>"default"</code>, <code>"simple"</code> and <code>"advanced"</code></p>
                        <h4>
                            Code examples</h4>
                        <p>
                            Set the <code>filterMode</code> property.
                        </p>
                        <pre><code>$('#dataTable').jqxDataTable({filterMode: "advanced"}); </code></pre>
                        <p>
                            Get the <code>filterMode</code> property.
                        </p>
                        <pre><code>var filterMode = $('#dataTable').jqxDataTable('filterMode'); </code></pre>
                          <div style="padding-bottom:5px;">
  <em>Try it:</em> <a target="_blank" href="http://jsfiddle.net/jqwidgets/s9RJv/">filterMode is set to "advanced"</a></div>
                    </div>
                </td>
            </tr>
            <tr>
                <td class="documentation-option-type-click">
                    <span id='Span48'>groups</span>
                </td>
                <td>
                    <span>Array</span>
                </td>
                <td>
                   []
                </td>
            </tr>
            <tr>
                <td colspan='3' style='width: 100%'>
                    <div class="documentation-option-description property-content" style="display: none;">
                        <p>
                            Sets or gets the jqxDataTable's data groups. Set this property if you want to display the data grouped by a set of column(s).
                        </p>
                        <h4>
                            Code examples</h4>
                        <p>
                            Set the <code>groups</code> property.
                        </p>
<pre style='width: 600px; max-width: 600px; margin: 0px;' class='code'><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;!DOCTYPE html&gt;</span><div/><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;html lang=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"en"</span>&gt;</span><div/><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;head&gt;</span><div/>   <span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;title id=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"Description"</span>&gt;</span>Data Grouping in jqxDataTable<span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/title&gt;</span><div/>    <span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;meta name=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"description" content="This sample demonstrates how we can Group Data by using jQWidgets DataTable."</span>&gt;</span><div/>    <span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;link rel=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"stylesheet" href="../../jqwidgets/styles/jqx.base.css" type="text/css"</span> /&gt;</span><div/>    <span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;script type=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"text/javascript" src="../../scripts/jquery-1.11.1.min.js"</span>&gt;</span><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/script&gt;</span><div/>    <span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;script type=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"text/javascript" src="../../jqwidgets/jqxcore.js"</span>&gt;</span><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/script&gt;</span><div/>    <span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;script type=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"text/javascript" src="../../jqwidgets/jqxdata.js"</span>&gt;</span><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/script&gt;</span> <div/>    <span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;script type=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"text/javascript" src="../../jqwidgets/jqxbuttons.js"</span>&gt;</span><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/script&gt;</span><div/>    <span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;script type=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"text/javascript" src="../../jqwidgets/jqxscrollbar.js"</span>&gt;</span><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/script&gt;</span><div/>    <span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;script type=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"text/javascript" src="../../jqwidgets/jqxdatatable.js"</span>&gt;</span><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/script&gt;</span> <div/>    <span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;script type=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"text/javascript" src="../../scripts/demos.js"</span>&gt;</span><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/script&gt;</span><div/>    <span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;script type=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"text/javascript"</span>&gt;</span><div/>        $(document).ready(function () {<div/><div/>            // prepare the data<div/>            var source =<div/>            {<div/>                dataType: <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"xml"</span>,<div/>                dataFields: [<div/>                     { name: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'SupplierName', type: 'string'</span> },<div/>                     { name: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'Quantity', type: 'number'</span> },<div/>                     { name: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'OrderDate', type: 'date'</span> },<div/>                     { name: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'OrderAddress', type: 'string'</span> },<div/>                     { name: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'Freight', type: 'number'</span> },<div/>                     { name: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'Price', type: 'number'</span> },<div/>                     { name: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'City', type: 'string'</span> },<div/>                     { name: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'ProductName', type: 'string'</span> },<div/>                     { name: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'Address', type: 'string'</span> }<div/>                ],<div/>                url: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'../sampledata/orderdetailsextended.xml'</span>,<div/>                root: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'DATA'</span>,<div/>                record: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'ROW'</span><div/>            };<div/>            var dataAdapter = new $.jqx.dataAdapter(source, {<div/>                loadComplete: function () {<div/>                    // data is loaded.<div/>                }<div/>            });<div/>            // create jqxDataTable.<div/>            $(<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"#dataTable"</span>).jqxDataTable(<div/>            {<div/>                source: dataAdapter,<div/>                pageable: true,<div/>                altRows: true,<div/>                sortable: true,<div/>                groups: [<span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'SupplierName'</span>],<div/>                width: 660,<div/>                groupsRenderer: function(value, rowData, level)<div/>                {<div/>                    return <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"Supplier Name: "</span> + value;<div/>                },<div/>                columns: [<div/>                  { text: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'Supplier Name', hidden: true, cellsAlign: 'left', align: 'left', dataField: 'SupplierName'</span>, width: 180},<div/>                  { text: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'Product Name', cellsAlign: 'left', align: 'left', dataField: 'ProductName'</span>, width: 150 },<div/>                  { text: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'Quantity', dataField: 'Quantity', cellsformat: 'd', cellsAlign: 'right', align: 'right'</span>, width: 80 },<div/>                  { text: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'Price', dataField: 'Price', cellsformat: 'c2', align: 'right', cellsAlign: 'right'</span>, width: 70 },<div/>                  { text: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'Address', cellsAlign: 'center', align: 'center', dataField: 'Address'</span>, width: 250 },<div/>                  { text: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'City', cellsAlign: 'center', align: 'center', dataField: 'City'</span> }<div/>                ]<div/>            });<div/>        });<div/>    <span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/script&gt;</span><div/><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/head&gt;</span><div/><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;body class=<span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'default'</span>&gt;</span><div/>    <span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;div id=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"dataTable"</span>&gt;</span><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/div&gt;</span><div/><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/body&gt;</span><div/><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/html&gt;</span><div/><div/></pre>               
                         <p>
                            Get the <code>groups</code> property.
                        </p>
                        <pre><code>var groups = $('#dataTable').jqxDataTable('groups'); </code></pre>
                         <div style="padding-bottom:5px;">
  <em>Try it:</em> <a target="_blank" href="http://jsfiddle.net/jqwidgets/zp2Uf/">groups is set to 'firstname'</a></div>
                    </div>
                </td>
            </tr>
            <tr>
                <td class="documentation-option-type-click">
                    <span id='Span47'>groupsRenderer</span>
                </td>
                <td>
                    <span>Function</span>
                </td>
                <td>
                   null
                </td>
            </tr>
            <tr>
                <td colspan='3' style='width: 100%'>
                    <div class="documentation-option-description property-content" style="display: none;">
                        <p>
                            Callback function which allows you to customize the rendering of the group headers.
                        </p>
                        <h4>
                            Code examples</h4>
                        <p>
                            Set the <code>groupsRenderer</code> property.
                        </p>
<pre style='width: 600px; max-width: 600px; margin: 0px;' class='code'><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;!DOCTYPE html&gt;</span><div/><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;html lang=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"en"</span>&gt;</span><div/><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;head&gt;</span><div/>   <span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;title id=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"Description"</span>&gt;</span>Data Grouping in jqxDataTable<span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/title&gt;</span><div/>    <span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;meta name=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"description" content="This sample demonstrates how we can Group Data by using jQWidgets DataTable."</span>&gt;</span><div/>    <span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;link rel=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"stylesheet" href="../../jqwidgets/styles/jqx.base.css" type="text/css"</span> /&gt;</span><div/>    <span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;script type=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"text/javascript" src="../../scripts/jquery-1.11.1.min.js"</span>&gt;</span><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/script&gt;</span><div/>    <span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;script type=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"text/javascript" src="../../jqwidgets/jqxcore.js"</span>&gt;</span><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/script&gt;</span><div/>    <span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;script type=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"text/javascript" src="../../jqwidgets/jqxdata.js"</span>&gt;</span><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/script&gt;</span> <div/>    <span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;script type=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"text/javascript" src="../../jqwidgets/jqxbuttons.js"</span>&gt;</span><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/script&gt;</span><div/>    <span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;script type=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"text/javascript" src="../../jqwidgets/jqxscrollbar.js"</span>&gt;</span><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/script&gt;</span><div/>    <span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;script type=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"text/javascript" src="../../jqwidgets/jqxdatatable.js"</span>&gt;</span><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/script&gt;</span> <div/>    <span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;script type=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"text/javascript" src="../../scripts/demos.js"</span>&gt;</span><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/script&gt;</span><div/>    <span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;script type=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"text/javascript"</span>&gt;</span><div/>        $(document).ready(function () {<div/><div/>            // prepare the data<div/>            var source =<div/>            {<div/>                dataType: <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"xml"</span>,<div/>                dataFields: [<div/>                     { name: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'SupplierName', type: 'string'</span> },<div/>                     { name: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'Quantity', type: 'number'</span> },<div/>                     { name: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'OrderDate', type: 'date'</span> },<div/>                     { name: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'OrderAddress', type: 'string'</span> },<div/>                     { name: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'Freight', type: 'number'</span> },<div/>                     { name: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'Price', type: 'number'</span> },<div/>                     { name: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'City', type: 'string'</span> },<div/>                     { name: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'ProductName', type: 'string'</span> },<div/>                     { name: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'Address', type: 'string'</span> }<div/>                ],<div/>                url: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'../sampledata/orderdetailsextended.xml'</span>,<div/>                root: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'DATA'</span>,<div/>                record: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'ROW'</span><div/>            };<div/>            var dataAdapter = new $.jqx.dataAdapter(source, {<div/>                loadComplete: function () {<div/>                    // data is loaded.<div/>                }<div/>            });<div/>            // create jqxDataTable.<div/>            $(<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"#dataTable"</span>).jqxDataTable(<div/>            {<div/>                source: dataAdapter,<div/>                pageable: true,<div/>                altRows: true,<div/>                sortable: true,<div/>                groups: [<span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'SupplierName'</span>],<div/>                width: 660,<div/>                groupsRenderer: function(value, rowData, level)<div/>                {<div/>                    return <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"Supplier Name: "</span> + value;<div/>                },<div/>                columns: [<div/>                  { text: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'Supplier Name', hidden: true, cellsAlign: 'left', align: 'left', dataField: 'SupplierName'</span>, width: 180},<div/>                  { text: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'Product Name', cellsAlign: 'left', align: 'left', dataField: 'ProductName'</span>, width: 150 },<div/>                  { text: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'Quantity', dataField: 'Quantity', cellsformat: 'd', cellsAlign: 'right', align: 'right'</span>, width: 80 },<div/>                  { text: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'Price', dataField: 'Price', cellsformat: 'c2', align: 'right', cellsAlign: 'right'</span>, width: 70 },<div/>                  { text: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'Address', cellsAlign: 'center', align: 'center', dataField: 'Address'</span>, width: 250 },<div/>                  { text: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'City', cellsAlign: 'center', align: 'center', dataField: 'City'</span> }<div/>                ]<div/>            });<div/>        });<div/>    <span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/script&gt;</span><div/><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/head&gt;</span><div/><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;body class=<span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'default'</span>&gt;</span><div/>    <span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;div id=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"dataTable"</span>&gt;</span><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/div&gt;</span><div/><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/body&gt;</span><div/><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/html&gt;</span><div/><div/></pre>               
                         <p>
                            Get the <code>groupsRenderer</code> property.
                        </p>
                        <pre><code>var groupsRenderer = $('#dataTable').jqxDataTable('groupsRenderer'); </code></pre>
                                 <div style="padding-bottom:5px;">
  <em>Try it:</em> <a target="_blank" href="http://jsfiddle.net/jqwidgets/xF7U9/">groupsRenderer is set to a custom function</a></div>
                    </div>
                </td>
            </tr>
           <tr>
                <td class="documentation-option-type-click">
                    <span id='Span1'>height</span>
                </td>
                <td>
                    <span>Number/String</span>
                </td>
                <td>
                    null
                </td>
            </tr>
            <tr>
                <td colspan='3' style='width: 100%'>
                    <div class="documentation-option-description property-content" style="display: none;">
                        <p>
                            Sets or gets the jqxDataTable's height.</p>
                        <h4>
                            Code examples</h4>
                        <p>
                            Set the <code>height</code> property.
                        </p>
                        <pre><code>$('#dataTable').jqxDataTable({height:"400px"});</code></pre>
                        <p>
                            Get the <code>height</code> property.
                        </p>
                        <pre><code>var height = $('#dataTable').jqxDataTable('height');</code></pre>
                             <div style="padding-bottom:5px;">
  <em>Try it:</em> <a target="_blank" href="http://jsfiddle.net/jqwidgets/m94hH/">height is set to 350</a></div>
                    </div>
                </td>
            </tr>
           <tr>
                <td class="documentation-option-type-click">
                    <span id='Span49'>initRowDetails</span>
                </td>
                <td>
                    <span>Function</span>
                </td>
                <td>
                    null
                </td>
            </tr>
            <tr>
                <td colspan='3' style='width: 100%'>
                    <div class="documentation-option-description property-content" style="display: none;">
                        <p>
                            Callback function which is used for initialization of the expanded row's details. The function is called just once when the row is expanded for first time.</p>
                        <br />
                        List of parameters:
                        <ul>
                            <li>id/key - expanded row's id/key.</li>
                            <li>dataRow - the expanded row as a set of Key/Value pairs.</li>
                            <li>element - the row's details HTML element as a jQuery selector.</li>
                            <li>rowInfo - object which enables you to modify the height of the row details by setting the rowInfo's detailsHeight</li> 
                        </ul>
                        <br />
                        If <code>initRowDetails</code> returns false, the row's details would be collapsed and the row's expand/collapse toggle button would be hidden.
                        <h4>
                            Code examples</h4>
                        <p>
                            Set the <code>initRowDetails</code> property.
                        </p>
<pre style='width: 600px; max-width: 600px; margin: 0px;' class='code'><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;!DOCTYPE html&gt;</span><div/><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;html lang=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"en"</span>&gt;</span><div/><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;head&gt;</span><div/>    <span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;link rel=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"stylesheet" href="../../jqwidgets/styles/jqx.base.css" type="text/css"</span> /&gt;</span><div/>    <span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;script type=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"text/javascript" src="../../scripts/jquery-1.11.1.min.js"</span>&gt;</span><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/script&gt;</span><div/>    <span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;script type=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"text/javascript" src="../../jqwidgets/jqxcore.js"</span>&gt;</span><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/script&gt;</span><div/>    <span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;script type=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"text/javascript" src="../../jqwidgets/jqxdata.js"</span>&gt;</span><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/script&gt;</span> <div/>    <span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;script type=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"text/javascript" src="../../jqwidgets/jqxbuttons.js"</span>&gt;</span><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/script&gt;</span><div/>    <span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;script type=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"text/javascript" src="../../jqwidgets/jqxscrollbar.js"</span>&gt;</span><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/script&gt;</span><div/>    <span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;script type=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"text/javascript" src="../../jqwidgets/jqxmenu.js"</span>&gt;</span><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/script&gt;</span><div/>    <span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;script type=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"text/javascript" src="../../jqwidgets/jqxdatatable.js"</span>&gt;</span><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/script&gt;</span><div/>    <span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;script type=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"text/javascript" src="../../jqwidgets/jqxtabs.js"</span>&gt;</span><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/script&gt;</span><div/>    <span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;script type=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"text/javascript" src="../../scripts/demos.js"</span>&gt;</span><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/script&gt;</span><div/>    <span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;script type=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"text/javascript"</span>&gt;</span><div/>        $(document).ready(function () {<div/>            // prepare the data<div/>            var data = new Array();<div/><div/>            var firstNames = [<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"Nancy", "Andrew", "Janet", "Margaret", "Steven", "Michael", "Robert", "Laura", "Anne"</span>];<div/>            var lastNames = [<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"Davolio", "Fuller", "Leverling", "Peacock", "Buchanan", "Suyama", "King", "Callahan", "Dodsworth"</span>];<div/>            var titles = [<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"Sales Representative", "Vice President, Sales", "Sales Representative", "Sales Representative", "Sales Manager", "Sales Representative", "Sales Representative", "Inside Sales Coordinator", "Sales Representative"</span>];<div/>            var titleofcourtesy = [<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"Ms.", "Dr.", "Ms.", "Mrs.", "Mr.", "Mr.", "Mr.", "Ms.", "Ms."</span>];<div/>            var birthdate = [<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"08-Dec-48", "19-Feb-52", "30-Aug-63", "19-Sep-37", "04-Mar-55", "02-Jul-63", "29-May-60", "09-Jan-58", "27-Jan-66"</span>];<div/>            var hiredate = [<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"01-May-92", "14-Aug-92", "01-Apr-92", "03-May-93", "17-Oct-93", "17-Oct-93", "02-Jan-94", "05-Mar-94", "15-Nov-94"</span>];<div/>            var address = [<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"507 - 20th Ave. E. Apt. 2A", "908 W. Capital Way", "722 Moss Bay Blvd.", "4110 Old Redmond Rd.", "14 Garrett Hill", "Coventry House", "Miner Rd.", "Edgeham Hollow", "Winchester Way", "4726 - 11th Ave. N.E.", "7 Houndstooth Rd."</span>];<div/>            var city = [<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"Seattle", "Tacoma", "Kirkland", "Redmond", "London", "London", "London", "Seattle", "London"</span>];<div/>            var postalcode = [<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"98122", "98401", "98033", "98052", "SW1 8JR", "EC2 7JR", "RG1 9SP", "98105", "WG2 7LT"</span>];<div/>            var country = [<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"USA", "USA", "USA", "USA", "UK", "UK", "UK", "USA", "UK"</span>];<div/>            var homephone = [<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"(206) 555-9857", "(206) 555-9482", "(206) 555-3412", "(206) 555-8122", "(71) 555-4848", "(71) 555-7773", "(71) 555-5598", "(206) 555-1189", "(71) 555-4444"</span>];<div/>            var notes = [<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"Education includes a BA in psychology from Colorado State University in 1970.  She also completed <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'The Art of the Cold Call.'</span>  Nancy is a member of Toastmasters International."</span>,<div/>                <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"Andrew received his BTS commercial in 1974 and a Ph.D. in international marketing from the University of Dallas in 1981.  He is fluent in French and Italian and reads German.  He joined the company as a sales representative, was promoted to sales manager in January 1992 and to vice president of sales in March 1993.  Andrew is a member of the Sales Management Roundtable, the Seattle Chamber of Commerce, and the Pacific Rim Importers Association."</span>,<div/>                <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"Janet has a BS degree in chemistry from Boston College (1984).  She has also completed a certificate program in food retailing management.  Janet was hired as a sales associate in 1991 and promoted to sales representative in February 1992."</span>,<div/>                <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"Margaret holds a BA in English literature from Concordia College (1958) and an MA from the American Institute of Culinary Arts (1966).  She was assigned to the London office temporarily from July through November 1992."</span>,<div/>                <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"Steven Buchanan graduated from St. Andrews University, Scotland, with a BSC degree in 1976.  Upon joining the company as a sales representative in 1992, he spent 6 months in an orientation program at the Seattle office and then returned to his permanent post in London.  He was promoted to sales manager in March 1993.  Mr. Buchanan has completed the courses <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'Successful Telemarketing' and 'International Sales Management.'</span>  He is fluent in French."</span>,<div/>                <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"Michael is a graduate of Sussex University (MA, economics, 1983) and the University of California at Los Angeles (MBA, marketing, 1986).  He has also taken the courses <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'Multi-Cultural Selling' and 'Time Management for the Sales Professional.'</span>  He is fluent in Japanese and can read and write French, Portuguese, and Spanish."</span>,<div/>                <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"Robert King served in the Peace Corps and traveled extensively before completing his degree in English at the University of Michigan in 1992, the year he joined the company.  After completing a course entitled <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'Selling in Europe,'</span> he was transferred to the London office in March 1993."</span>,<div/>                <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"Laura received a BA in psychology from the University of Washington.  She has also completed a course in business French.  She reads and writes French."</span>,<div/>                <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"Anne has a BA degree in English from St. Lawrence College.  She is fluent in French and German."</span>];<div/><div/>            var k = 0;<div/>            for (var i = 0; i &lt; firstNames.length; i++) {<div/>                var row = {};<div/>                row[<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"firstname"</span>] = firstNames[k];<div/>                row[<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"lastname"</span>] = lastNames[k];<div/>                row[<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"title"</span>] = titles[k];<div/>                row[<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"titleofcourtesy"</span>] = titleofcourtesy[k];<div/>                row[<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"birthdate"</span>] = birthdate[k];<div/>                row[<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"hiredate"</span>] = hiredate[k];<div/>                row[<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"address"</span>] = address[k];<div/>                row[<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"city"</span>] = city[k];<div/>                row[<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"postalcode"</span>] = postalcode[k];<div/>                row[<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"country"</span>] = country[k];<div/>                row[<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"homephone"</span>] = homephone[k];<div/>                row[<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"notes"</span>] = notes[k];<div/>                data[i] = row;<div/>                k++;<div/>            }<div/><div/>            var source =<div/>            {<div/>                localData: data,<div/>                dataType: <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"array"</span><div/>            };<div/><div/>            // initialize the row details.<div/>            var initRowDetails = function (id, row, element, rowinfo) {<div/>                var tabsdiv = null;<div/>                var information = null;<div/>                var notes = null;<div/>                // update the details height.<div/>                rowinfo.detailsHeight = 200;<div/>                element.append($(<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"<span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;div style=<span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'margin: 10px;'&gt;</span><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;ul style='margin-left: 30px;'&gt;</span><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;li class='title'&gt;</span>Title<span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/li&gt;</span><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;li&gt;</span>Notes<span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/li&gt;</span><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/ul&gt;</span><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;div class='information'&gt;</span><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/div&gt;</span><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;div class='notes'</span>&gt;</span><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/div&gt;</span><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/div&gt;</span>"</span>));<div/>                tabsdiv = $(element.children()[0]);<div/>             <div/>                if (tabsdiv != null) {<div/>                    information = tabsdiv.find(<span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'.information'</span>);<div/>                    notes = tabsdiv.find(<span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'.notes'</span>);<div/>                    var title = tabsdiv.find(<span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'.title'</span>);<div/>                    title.text(row.firstname);<div/><div/>                    var container = $(<span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'<span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;div style=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"margin: 5px;"</span>&gt;</span><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/div&gt;</span>'</span>)<div/>                    container.appendTo($(information));<div/>                    var photocolumn = $(<span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'<span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;div style=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"float: left; width: 15%;"</span>&gt;</span><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/div&gt;</span>'</span>);<div/>                    var leftcolumn = $(<span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'<span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;div style=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"float: left; width: 45%;"</span>&gt;</span><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/div&gt;</span>'</span>);<div/>                    var rightcolumn = $(<span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'<span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;div style=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"float: left; width: 40%;"</span>&gt;</span><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/div&gt;</span>'</span>);<div/>                    container.append(photocolumn);<div/>                    container.append(leftcolumn);<div/>                    container.append(rightcolumn);<div/><div/>                    var photo = $(<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"<span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;div class=<span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'jqx-rc-all' style='margin: 10px;'</span>&gt;</span><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;b&gt;</span>Photo:<span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/b&gt;</span><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/div&gt;</span>"</span>);<div/>                    var image = $(<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"<span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;div style=<span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'margin-top: 10px;'</span>&gt;</span><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/div&gt;</span>"</span>);<div/>                    var imgurl = <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'../../images/' + row.firstname.toLowerCase() + '.png'</span>;<div/>                    var img = $(<span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'<span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;img height=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"60" src="' + imgurl + '"</span>/&gt;</span>'</span>);<div/>                    image.append(img);<div/>                    image.appendTo(photo);<div/>                    photocolumn.append(photo);<div/><div/>                    var firstname = <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"<span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;div style=<span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'margin: 10px;'</span>&gt;</span><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;b&gt;</span>First Name:<span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/b&gt;</span> " + row.firstname + "<span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/div&gt;</span>"</span>;<div/>                    var lastname = <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"<span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;div style=<span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'margin: 10px;'</span>&gt;</span><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;b&gt;</span>Last Name:<span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/b&gt;</span> " + row.lastname + "<span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/div&gt;</span>"</span>;<div/>                    var title = <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"<span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;div style=<span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'margin: 10px;'</span>&gt;</span><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;b&gt;</span>Title:<span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/b&gt;</span> " + row.title + "<span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/div&gt;</span>"</span>;<div/>                    var address = <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"<span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;div style=<span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'margin: 10px;'</span>&gt;</span><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;b&gt;</span>Address:<span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/b&gt;</span> " + row.address + "<span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/div&gt;</span>"</span>;<div/>                    $(leftcolumn).append(firstname);<div/>                    $(leftcolumn).append(lastname);<div/>                    $(leftcolumn).append(title);<div/>                    $(leftcolumn).append(address);<div/><div/>                    var postalcode = <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"<span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;div style=<span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'margin: 10px;'</span>&gt;</span><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;b&gt;</span>Postal Code:<span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/b&gt;</span> " + row.postalcode + "<span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/div&gt;</span>"</span>;<div/>                    var city = <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"<span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;div style=<span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'margin: 10px;'</span>&gt;</span><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;b&gt;</span>City:<span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/b&gt;</span> " + row.city + "<span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/div&gt;</span>"</span>;<div/>                    var phone = <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"<span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;div style=<span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'margin: 10px;'</span>&gt;</span><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;b&gt;</span>Phone:<span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/b&gt;</span> " + row.homephone + "<span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/div&gt;</span>"</span>;<div/>                    var hiredate = <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"<span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;div style=<span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'margin: 10px;'</span>&gt;</span><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;b&gt;</span>Hire Date:<span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/b&gt;</span> " + row.hiredate + "<span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/div&gt;</span>"</span>;<div/><div/>                    $(rightcolumn).append(postalcode);<div/>                    $(rightcolumn).append(city);<div/>                    $(rightcolumn).append(phone);<div/>                    $(rightcolumn).append(hiredate);<div/><div/>                    var notescontainer = $(<span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'<span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;div style=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"white-space: normal; margin: 5px;"</span>&gt;</span><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;span&gt;</span>' + row.notes + '<span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/span&gt;</span><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/div&gt;</span>'</span>);<div/>                    $(notes).append(notescontainer);<div/>                    $(tabsdiv).jqxTabs({ width: 600, height: 170 });<div/>                }<div/>            }<div/>            var dataAdapter = new $.jqx.dataAdapter(source);<div/><div/>            $(<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"#dataTable"</span>).jqxDataTable(<div/>            {<div/>                width: 632,<div/>                source: dataAdapter,<div/>                pageable: true,<div/>                pageSize: 3,<div/>                rowDetails: true,<div/>                sortable: true,<div/>                ready: function () {<div/>                    // expand the first details.<div/>                    $(<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"#dataTable"</span>).jqxDataTable(<span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'showDetails'</span>, 0);<div/>                },<div/>                initRowDetails: initRowDetails,<div/>                columns: [<div/>                      { text: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'First Name', dataField: 'firstname'</span>, width: 100 },<div/>                      { text: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'Last Name', dataField: 'lastname'</span>, width: 100 },<div/>                      { text: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'Title', dataField: 'title'</span>, width: 180 },<div/>                      { text: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'City', dataField: 'city'</span>, width: 100 },<div/>                      { text: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'Country', dataField: 'country'</span>}<div/>                ]<div/>            });<div/>        });<div/>    <span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/script&gt;</span><div/><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/head&gt;</span><div/><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;body class=<span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'default'</span>&gt;</span><div/>      <span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;div id=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"dataTable"</span>&gt;</span><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/div&gt;</span><div/><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/body&gt;</span><div/><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/html&gt;</span><div/><div/></pre>
                        <p>
                            Get the <code>initRowDetails</code> property.
                        </p>
                        <pre><code>var initRowDetails = $('#dataTable').jqxDataTable('initRowDetails');</code></pre>
                           <div style="padding-bottom:5px;">
  <em>Try it:</em> <a target="_blank" href="http://jsfiddle.net/jqwidgets/B4yQT/">initRowDetails is set to a custom function</a></div>
                    </div>
                </td>
            </tr>
      <tr>
                <td class="documentation-option-type-click">
                    <span id='Span112'>incrementalSearch</span>
                </td>
                <td>
                    <span>Boolean</span>
                </td>
                <td>
                    true
                </td>
            </tr>
            <tr>
                <td colspan='3' style='width: 100%'>
                    <div class="documentation-option-description property-content" style="display: none;">
                        <p>
                            Determines whether the incremental search is enabled. The feature allows you to quickly find and select data records by typing when the widget is on focus.</p>
                        <h4>
                            Code examples</h4>
                        <p>
                            Set the <code>incrementalSearch</code> property.
                        </p>
                        <pre><code>$('#dataTable').jqxDataTable({incrementalSearch:false});</code></pre>
                        <p>
                            Get the <code>incrementalSearch</code> property.
                        </p>
                        <pre><code>var incrementalSearch = $('#dataTable').jqxDataTable('incrementalSearch');</code></pre>
                            <div style="padding-bottom:5px;">
  <em>Try it:</em> <a target="_blank" href="http://jsfiddle.net/jqwidgets/uLv4J/">incrementalSearch is set to false</a></div>
                    </div>
                </td>
            </tr>
            <tr>
                <td class="documentation-option-type-click">
                    <span id='Span50'>localization</span>
                </td>
                <td>
                    <span>Object</span>
                </td>
                <td>
                    default localization strings.
                </td>
            </tr>
            <tr>
                <td colspan='3' style='width: 100%'>
                    <div class="documentation-option-description property-content" style="display: none;">
                        <p>
                            Applies a localization to the jqxDataTable's Strings.</p>
                        Default localization object:
                        <br />
                        <pre style='width: 600px; max-width: 600px; margin: 0px;' class='code'>{           <div/>        // separator of parts of a date (e.g. <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'/'</span> in 11/05/1955)<div/>	<span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'/'</span>: <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"/"</span>,<div/>	// separator of parts of a time (e.g. <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">':'</span> in 05:44 PM)<div/>	<span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">':'</span>: <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">":"</span>,<div/>	// the first day of the week (0 = Sunday, 1 = Monday, etc)<div/>	firstDay: 0,<div/>	days: {<div/>		// full day names<div/>		names: [<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"</span>],<div/>		// abbreviated day names<div/>		namesAbbr: [<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"</span>],<div/>		// shortest day names<div/>		namesShort: [<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"</span>]<div/>	},<div/>	months: {<div/>		// full month names (13 months for lunar calendards -- 13th month should be "" if not lunar)<div/>		names: [<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December", ""</span>],<div/>		// abbreviated month names<div/>		namesAbbr: [<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec", ""</span>]<div/>	},<div/>	// AM and PM designators in one of these forms:<div/>	// The usual view, and the upper and lower case versions<div/>	//      [standard,lowercase,uppercase]<div/>	// The culture does not use AM or PM (likely all standard date formats use 24 hour time)<div/>	//      null<div/>	AM: [<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"AM", "am", "AM"</span>],<div/>	PM: [<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"PM", "pm", "PM"</span>],<div/>	eras: [<div/>	// eras in reverse chronological order.<div/>	// name: the name of the era in this culture (e.g. A.D., C.E.)<div/>	// start: when the era starts in ticks (gregorian, gmt), null if it is the earliest supported era.<div/>	// offset: offset in years from gregorian calendar<div/>	{ <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"name": "A.D.", "start": null, "offset"</span>: 0 }<div/>	],<div/>	twoDigitYearMax: 2029,<div/>	patterns: {<div/>		// short date pattern<div/>		d: <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"M/d/yyyy"</span>,<div/>		// long date pattern<div/>		D: <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"dddd, MMMM dd, yyyy"</span>,<div/>		// short time pattern<div/>		t: <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"h:mm tt"</span>,<div/>		// long time pattern<div/>		T: <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"h:mm:ss tt"</span>,<div/>		// long date, short time pattern<div/>		f: <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"dddd, MMMM dd, yyyy h:mm tt"</span>,<div/>		// long date, long time pattern<div/>		F: <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"dddd, MMMM dd, yyyy h:mm:ss tt"</span>,<div/>		// month/day pattern<div/>		M: <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"MMMM dd"</span>,<div/>		// month/year pattern<div/>		Y: <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"yyyy MMMM"</span>,<div/>		// S is a sortable format that does not vary by culture<div/>		S: <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"yyyy\u0027-\u0027MM\u0027-\u0027dd\u0027T\u0027HH\u0027:\u0027mm\u0027:\u0027ss"</span>,<div/>		// formatting of dates in MySQL DataBases<div/>		ISO: <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"yyyy-MM-dd hh:mm:ss"</span>,<div/>		ISO2: <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"yyyy-MM-dd HH:mm:ss"</span>,<div/>		d1: <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"dd.MM.yyyy"</span>,<div/>		d2: <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"dd-MM-yyyy"</span>,<div/>		d3: <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"dd-MMMM-yyyy"</span>,<div/>		d4: <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"dd-MM-yy"</span>,<div/>		d5: <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"H:mm"</span>,<div/>		d6: <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"HH:mm"</span>,<div/>		d7: <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"HH:mm tt"</span>,<div/>		d8: <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"dd/MMMM/yyyy"</span>,<div/>		d9: <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"MMMM-dd"</span>,<div/>		d10: <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"MM-dd"</span>,<div/>		d11: <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"MM-dd-yyyy"</span><div/>	},<div/>	percentSymbol: <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"%"</span>,<div/>	currencySymbol: <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"$"</span>,<div/>	currencySymbolposition: <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"before"</span>,<div/>	decimalSeparator: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'.'</span>,<div/>	thousandsSeparator: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">','</span>,<div/>	pagerGoToPageString: <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"Go to page:"</span>,<div/>	pagerShowRowsString: <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"Show rows:"</span>,<div/>	pagerRangeString: <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">" of "</span>,<div/>	pagerPreviousButtonString: <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"previous"</span>,<div/>	pagerNextButtonString: <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"next"</span>,<div/>	pagerFirstButtonsSring: <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"first"</span>,<div/>	pagerLastButtonString:<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"last"</span>,<div/>	filterApplyString: <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"Apply"</span>,<div/>	filterCancelString: <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"Cancel"</span>,<div/>	filterClearString: <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"Clear Filter"</span>,<div/>	filterString: <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"advanced"</span>,<div/>	filterSearchString: <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"Search:"</span>,<div/>	filterStringComparisonOperators: [<span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'empty', 'not empty', 'contains', 'contains(match case)'</span>,<div/>	   <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'does not contain', 'does not contain(match case)', 'starts with', 'starts with(match case)'</span>,<div/>	   <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'ends with', 'ends with(match case)', 'equal', 'equal(match case)', 'null', 'not null'</span>],<div/>	filterNumericComparisonOperators: [<span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'equal', 'not equal', 'less than', 'less than or equal', 'greater than', 'greater than or equal', 'null', 'not null'</span>],<div/>	filterDateComparisonOperators: [<span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'equal', 'not equal', 'less than', 'less than or equal', 'greater than', 'greater than or equal', 'null', 'not null'</span>],<div/>	filterBooleanComparisoOoperators: [<span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'equal', 'not equal'</span>],<div/>	validationString: <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"Entered value is not valid"</span>,<div/>	emptyDataString: <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"No data to display"</span>,<div/>	filterSelectString: <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"Select Filter"</span>,<div/>	loadText: <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"Loading..."</span>,<div/>	clearString: <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"Clear"</span>,<div/>	todayString: <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"Today"</span>,<div/>	loadingErrorMessage: <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"The data is still loading and you cannot set a property or call a method. You can do that once the data binding is completed. jqxDataTable raises the <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'bindingComplete'</span> event when the binding is completed."</span>           <div/>};<div/><div/></pre>
                        <h4>
                            Code examples</h4>
                        <p>
                            Set the <code>localization</code> property.
                        </p>
<pre style='width: 600px; max-width: 600px; margin: 0px;' class='code'><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;!DOCTYPE html&gt;</span><div/><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;html lang=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"en"</span>&gt;</span><div/><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;head&gt;</span><div/>    <span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;link rel=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"stylesheet" href="../../jqwidgets/styles/jqx.base.css" type="text/css"</span> /&gt;</span><div/>    <span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;script type=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"text/javascript" src="../../scripts/jquery-1.11.1.min.js"</span>&gt;</span><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/script&gt;</span><div/>    <span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;script type=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"text/javascript" src="../../jqwidgets/jqxcore.js"</span>&gt;</span><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/script&gt;</span><div/>    <span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;script type=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"text/javascript" src="../../jqwidgets/jqxdata.js"</span>&gt;</span><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/script&gt;</span><div/>    <span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;script type=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"text/javascript" src="../../jqwidgets/jqxbuttons.js"</span>&gt;</span><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/script&gt;</span><div/>    <span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;script type=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"text/javascript" src="../../jqwidgets/jqxscrollbar.js"</span>&gt;</span><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/script&gt;</span><div/>    <span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;script type=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"text/javascript" src="../../jqwidgets/jqxlistbox.js"</span>&gt;</span><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/script&gt;</span><div/>    <span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;script type=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"text/javascript" src="../../jqwidgets/jqxdropdownlist.js"</span>&gt;</span><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/script&gt;</span><div/>    <span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;script type=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"text/javascript" src="../../jqwidgets/jqxmenu.js"</span>&gt;</span><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/script&gt;</span><div/>    <span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;script type=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"text/javascript" src="../../jqwidgets/jqxpanel.js"</span>&gt;</span><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/script&gt;</span><div/>    <span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;script type=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"text/javascript" src="../../jqwidgets/jqxcalendar.js"</span>&gt;</span><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/script&gt;</span><div/>    <span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;script type=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"text/javascript" src="../../jqwidgets/jqxdatetimeinput.js"</span>&gt;</span><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/script&gt;</span><div/>    <span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;script type=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"text/javascript" src="../../jqwidgets/jqxdatatable.js"</span>&gt;</span><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/script&gt;</span><div/>    <span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;script type=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"text/javascript" src="../../jqwidgets/jqxnumberinput.js"</span>&gt;</span><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/script&gt;</span><div/>    <span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;script type=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"text/javascript" src="../../scripts/demos.js"</span>&gt;</span><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/script&gt;</span><div/>    <span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;script type=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"text/javascript" src="../../jqwidgets/globalization/globalize.js"</span>&gt;</span><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/script&gt;</span><div/>    <span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;script type=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"text/javascript" src="../sampledata/generatedata.js"</span>&gt;</span><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/script&gt;</span><div/>    <span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;script type=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"text/javascript"</span>&gt;</span><div/>        $(document).ready(function () {<div/>            var data = generatedata(250);<div/>            var source =<div/>            {<div/>                localdata: data,<div/>                dataFields:<div/>                [<div/>                    { name: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'name', type: 'string'</span> },<div/>                    { name: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'productname', type: 'string'</span> },<div/>                    { name: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'available', type: 'bool'</span> },<div/>                    { name: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'date', type: 'date'</span>},<div/>                    { name: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'quantity', type: 'number'</span> },<div/>                    { name: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'price', type: 'number'</span> }<div/>                ],<div/>                datatype: <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"array"</span><div/>            };<div/><div/>            var dataAdapter = new $.jqx.dataAdapter(source);<div/><div/>            var getLocalization = function () {<div/>                var localizationobj = {};<div/>                localizationobj.pagerGoToPageString = <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"Gehe zu:"</span>;<div/>                localizationobj.pagerShowRowsString = <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"Zeige Zeile:"</span>;<div/>                localizationobj.pagerRangeString = <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">" von "</span>;<div/>                localizationobj.pagerNextButtonString = <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"voriger"</span>;<div/>                localizationobj.pagerFirstButtonString = <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"first"</span>;<div/>                localizationobj.pagerLastButtonString = <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"last"</span>;<div/>                localizationobj.pagerPreviousButtonString = <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"nächster"</span>;<div/>                localizationobj.sortAscendingString = <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"Sortiere aufsteigend"</span>;<div/>                localizationobj.sortDescendingString = <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"Sortiere absteigend"</span>;<div/>                localizationobj.sortRemoveString = <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"Entferne Sortierung"</span>;<div/>                localizationobj.firstDay = 1;<div/>                localizationobj.percentSymbol = <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"%"</span>;<div/>                localizationobj.currencySymbol = <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"€"</span>;<div/>                localizationobj.currencySymbolPosition = <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"after"</span>;<div/>                localizationobj.decimalSeparator = <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"."</span>;<div/>                localizationobj.thousandsSeparator = <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">","</span>;<div/>                var days = {<div/>                    // full day names<div/>                    names: [<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"Sonntag", "Montag", "Dienstag", "Mittwoch", "Donnerstag", "Freitag", "Samstag"</span>],<div/>                    // abbreviated day names<div/>                    namesAbbr: [<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"Sonn", "Mon", "Dien", "Mitt", "Donn", "Fre", "Sams"</span>],<div/>                    // shortest day names<div/>                    namesShort: [<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"So", "Mo", "Di", "Mi", "Do", "Fr", "Sa"</span>]<div/>                };<div/>                localizationobj.days = days;<div/>                var months = {<div/>                    // full month names (13 months for lunar calendards -- 13th month should be "" if not lunar)<div/>                    names: [<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"Januar", "Februar", "März", "April", "Mai", "Juni", "Juli", "August", "September", "Oktober", "November", "Dezember", ""</span>],<div/>                    // abbreviated month names<div/>                    namesAbbr: [<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"Jan", "Feb", "Mär", "Apr", "Mai", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dez", ""</span>]<div/>                };<div/>                var patterns = {<div/>                    d: <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"dd.MM.yyyy"</span>,<div/>                    D: <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"dddd, d. MMMM yyyy"</span>,<div/>                    t: <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"HH:mm"</span>,<div/>                    T: <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"HH:mm:ss"</span>,<div/>                    f: <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"dddd, d. MMMM yyyy HH:mm"</span>,<div/>                    F: <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"dddd, d. MMMM yyyy HH:mm:ss"</span>,<div/>                    M: <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"dd MMMM"</span>,<div/>                    Y: <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"MMMM yyyy"</span><div/>                }<div/>                localizationobj.patterns = patterns;<div/>                localizationobj.months = months;<div/>                return localizationobj;<div/>            }<div/><div/>            $(<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"#dataTable"</span>).jqxDataTable(<div/>            {<div/>                width: 685,<div/>                source: dataAdapter,<div/>                filterable: true,<div/>                pageable: true,<div/>                editable: true,<div/>                localization: getLocalization(),<div/>                columns: [<div/>                  { text: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'Name', dataField: 'name'</span>, width: 115 },<div/>                  { text: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'Produkt', dataField: 'productname'</span>, width: 220 },<div/>                  { text: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'Datum', dataField: 'date', width: 210, cellsAlign: 'right', cellsFormat: 'd'</span>},<div/>                  { text: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'Qt.', dataField: 'quantity', cellsAlign: 'right'</span>, width: 60 },<div/>                  { text: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'Preis', dataField: 'price', cellsFormat: <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"c2"</span>, cellsAlign: 'right'</span> }<div/>                ]<div/>            });<div/>        });<div/>    <span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/script&gt;</span><div/><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/head&gt;</span><div/><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;body class=<span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'default'</span>&gt;</span><div/>    <span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;div id=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"dataTable"</span>&gt;</span><div/>    <span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/div&gt;</span><div/><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/body&gt;</span><div/><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/html&gt;</span><div/><div/></pre>                    
                        <p>
                            Get the <code>localization</code> property.
                        </p>
                        <pre><code>var localization = $('#dataTable').jqxDataTable('localization');</code></pre>
                           <div style="padding-bottom:5px;">
  <em>Try it:</em> <a target="_blank" href="http://jsfiddle.net/jqwidgets/q3BPu/">localization is set to a custom object</a></div>
                    </div>
                </td>
            </tr>
           <tr>
                <td class="documentation-option-type-click">
                    <span id='Span3'>pagerHeight</span>
                </td>
                <td>
                    <span>Number</span>
                </td>
                <td>
                    28
                </td>
            </tr>
            <tr>
                <td colspan='3' style='width: 100%'>
                    <div class="documentation-option-description property-content" style="display: none;">
                        <p>
                            Sets or gets the height of the jqxDataTable's Pager(s). Pager(s) is(are) displayed after setting <code>pageable</code> to true.</p>
                        <h4>
                            Code examples</h4>
                        <p>
                            Set the <code>pagerHeight</code> property.
                        </p>
                        <pre><code>$('#dataTable').jqxDataTable({ pagerHeight: 35 }); </code></pre>
                        <p>
                            Get the <code>pagerHeight</code> property.
                        </p>
                        <pre><code>var pagerHeight = $('#dataTable').jqxDataTable('pagerHeight'); </code></pre>
                            <div style="padding-bottom:5px;">
  <em>Try it:</em> <a target="_blank" href="http://jsfiddle.net/jqwidgets/hHQm7/">pagerHeight is set to 35</a></div>
                    </div>
                </td>
            </tr>
            <tr>
                <td class="documentation-option-type-click">
                    <span id='Span4'>pageSize</span>
                </td>
                <td>
                    <span>Number</span>
                </td>
                <td>
                    10
                </td>
            </tr>
            <tr>
                <td colspan='3' style='width: 100%'>
                    <div class="documentation-option-description property-content" style="display: none;">
                        <p>
                            Sets or gets the rows count per page when paging is enabled.</p>
                        <h4>
                            Code examples</h4>
                        <p>
                            Set the <code>pageSize</code> property.
                        </p>
                        <pre><code>$('#dataTable').jqxDataTable({ pageSize: 20 }); </code></pre>
                        <p>
                            Get the <code>pageSize</code> property.
                        </p>
                        <pre><code>var pageSize = $('#dataTable').jqxDataTable('pageSize'); </code></pre>
                                       <div style="padding-bottom:5px;">
  <em>Try it:</em> <a target="_blank" href="http://jsfiddle.net/jqwidgets/pd6bg/">pageSize is set to 10</a></div>
                    </div>
                </td>
            </tr>
             <tr>
                <td class="documentation-option-type-click">
                    <span id='Span5'>pageSizeOptions</span>
                </td>
                <td>
                    <span>Array</span>
                </td>
                <td>
                    ['5', '10', '20']
                </td>
            </tr>
            <tr>
                <td colspan='3' style='width: 100%'>
                    <div class="documentation-option-description property-content" style="display: none;">
                        <p>
                           Sets or gets the jqxDataTable's page size options when paging is enabled and the <code>pagerMode</code> property is set to <code>"advanced"</code>.</p>
                        <h4>
                            Code examples</h4>
                        <p>
                            Set the <code>pageSizeOptions</code> property.
                        </p>
                        <pre><code>$('#dataTable').jqxDataTable({ pageSizeOptions: ['15', '20', '30'] }); </code></pre>
                        <p>
                            Get the <code>pageSizeOptions</code> property.
                        </p>
                        <pre><code>var pageSizeOptions = $('#dataTable').jqxDataTable('pageSizeOptions'); </code></pre>
                                           <div style="padding-bottom:5px;">
  <em>Try it:</em> <a target="_blank" href="http://jsfiddle.net/jqwidgets/jGKvE/">pageSizeOptions is set to [15, 25, 35]</a></div>
                    </div>
                </td>
            </tr>
            <tr>
                <td class="documentation-option-type-click">
                    <span id='Span6'>pageable</span>
                </td>
                <td>
                    <span>Boolean</span>
                </td>
                <td>
                   false
                </td>
            </tr>
            <tr>
                <td colspan='3' style='width: 100%'>
                    <div class="documentation-option-description property-content" style="display: none;">
                        <p>
                           Determines whether the jqxDataTable is in paging mode.</p>              
                        <h4>
                            Code examples</h4>
                        <p>
                            Set the <code>pageable</code> property.
                        </p>
                        <pre><code>$('#dataTable').jqxDataTable({ pageable:true }); </code></pre>
                        <p>
                            Get the <code>pageable</code> property.
                        </p>
                        <pre><code>var pageable = $('#dataTable').jqxDataTable('pageable'); </code></pre>
                          <div style="padding-bottom:5px;">
  <em>Try it:</em> <a target="_blank" href="http://jsfiddle.net/jqwidgets/2njaB/">pageable is set to true</a></div>
                    </div>
                </td>
            </tr>  
            <tr>
                <td class="documentation-option-type-click">
                    <span id='Span7'>pagerPosition</span>
                </td>
                <td>
                    <span>String</span>
                </td>
                <td>
                   "bottom"
                </td>
            </tr>
            <tr>
                <td colspan='3' style='width: 100%'>
                    <div class="documentation-option-description property-content" style="display: none;">
                        <p>
                            Sets or gets the Pager's position. Possible values: <code>'top'</code>, <code>'bottom'</code> and <code>'both'</code></p>
                        <h4>
                            Code examples</h4>
                        <p>
                            Set the <code>pagerPosition</code> property.
                        </p>
                        <pre><code>$('#dataTable').jqxDataTable({ pagerPosition:'top' }); </code></pre>
                        <p>
                            Get the <code>pagerPosition</code> property.
                        </p>
                        <pre><code>var hasThreeStates = $('#dataTable').jqxDataTable('pagerPosition'); </code></pre>
                             <div style="padding-bottom:5px;">
  <em>Try it:</em> <a target="_blank" href="http://jsfiddle.net/jqwidgets/7927T/">pagerPosition is set to 'top'</a></div>
                    </div>
                </td>
            </tr>
            <tr>
                <td class="documentation-option-type-click">
                    <span id='Span8'>pagerMode</span>
                </td>
                <td>
                    <span>String</span>
                </td>
                <td>
                   "default"
                </td>
            </tr>
            <tr>
                <td colspan='3' style='width: 100%'>
                    <div class="documentation-option-description property-content" style="display: none;">
                        <p>
                           Sets or gets the Pager's mode. Possible values: <code>"default"</code> and <code>"advanced"</code></p>
                        <h4>
                            Code examples</h4>
                        <p>
                            Set the <code>pagerMode</code> property.
                        </p>
                        <pre><code>$('#dataTable').jqxDataTable({pagerMode: "advanced" }); </code></pre>
                        <p>
                            Get the <code>pagerMode</code> property.
                        </p>
                        <pre><code>var pagerMode = $('#dataTable').jqxDataTable('pagerMode'); </code></pre>
                              <div style="padding-bottom:5px;">
  <em>Try it:</em> <a target="_blank" href="http://jsfiddle.net/jqwidgets/dgVc4/">pagerMode is set to 'advanced'</a></div>
                    </div>
                </td>
            </tr>
            <tr>
                <td class="documentation-option-type-click">
                    <span id='Span9'>pagerButtonsCount</span>
                </td>
                <td>
                    <span>Number</span>
                </td>
                <td>
                   5
                </td>
            </tr>
            <tr>
                <td colspan='3' style='width: 100%'>
                    <div class="documentation-option-description property-content" style="display: none;">
                        <p>
                           Sets or gets the count of the buttons displayed on the Pager when <code>pagerMode</code> is set to <code>"default"</code>.</p>
                        <h4>
                            Code examples</h4>
                        <p>
                            Set the <code>pagerButtonsCount</code> property.
                        </p>
                        <pre><code>$('#dataTable').jqxDataTable({pagerButtonsCount: 10 }); </code></pre>
                        <p>
                            Get the <code>pagerButtonsCount</code> property.
                        </p>
                        <pre><code>var pagerButtonsCount = $('#dataTable').jqxDataTable('pagerButtonsCount'); </code></pre>
                                   <div style="padding-bottom:5px;">
  <em>Try it:</em> <a target="_blank" href="http://jsfiddle.net/jqwidgets/yPcwC/">pagerButtonsCount is set to 10</a></div>
                    </div>
                </td>
            </tr>
             <tr>
                <td class="documentation-option-type-click">
                    <span id='Span10'>pagerRenderer</span>
                </td>
                <td>
                    <span>Function</span>
                </td>
                <td>
                   null
                </td>
            </tr>
            <tr>
                <td colspan='3' style='width: 100%'>
                    <div class="documentation-option-description property-content" style="display: none;">
                        <p>
                          Enables custom rendering of the Pager.</p>
                        <h4>
                            Code examples</h4>
                        <p>
                            Set the <code>pagerRenderer</code> property.
                        </p>
                        <pre><code>$('#dataTable').jqxDataTable({pagerRenderer: function(){"do something here and return a HTML Element as a result." }); </code></pre>
                        <p>
                            Get the <code>pagerRenderer</code> property.
                        </p>
                        <pre><code>var pagerRenderer = $('#dataTable').jqxDataTable('pagerRenderer'); </code></pre>
                                    <div style="padding-bottom:5px;">
  <em>Try it:</em> <a target="_blank" href="http://jsfiddle.net/jqwidgets/AmG4d/">pagerRenderer is set to a custom function</a></div>
                    </div>
                </td>
            </tr>
         <tr>
                <td class="documentation-option-type-click">
                    <span id='Span52'>ready</span>
                </td>
                <td>
                    <span>Function</span>
                </td>
                <td>
                    null
                </td>
            </tr>
            <tr>
                <td colspan='3' style='width: 100%'>
                    <div class="documentation-option-description property-content" style="display: none;">
                        <p>
                            Callback function which is called when the jqxDataTable is rendered and data binding is completed..</p>
                        <h4>
                            Code examples</h4>
                        <p>
                            Set the <code>ready</code> property.
                        </p>
                        <pre><code>$('#dataTable').jqxDataTable({ready:function(){ // your code here.}});</code></pre>
                        <p>
                            Get the <code>ready</code> property.
                        </p>
                        <pre><code>var ready = $('#dataTable').jqxDataTable('ready');</code></pre>
                               <div style="padding-bottom:5px;">
  <em>Try it:</em> <a target="_blank" href="http://jsfiddle.net/jqwidgets/D9DsK/">ready is set to a custom function</a></div>
                    </div>
                </td>
            </tr>
         <tr>
                <td class="documentation-option-type-click">
                    <span id='Span53'>rowDetails</span>
                </td>
                <td>
                    <span>Boolean</span>
                </td>
                <td>
                    false
                </td>
            </tr>
            <tr>
                <td colspan='3' style='width: 100%'>
                    <div class="documentation-option-description property-content" style="display: none;">
                        <p>
                            Sets or gets whether the jqxDataTable rows have details and can be expanded/collapsed. See the <code>initRowDetails</code> for initialization of the row details.
                        </p>
                        <h4>
                            Code examples</h4>
                        <p>
                            Set the <code>rowDetails</code> property.
                        </p>
                        <pre><code>$('#dataTable').jqxDataTable({rowDetails: true});</code></pre>
                        <p>
                            Get the <code>rowDetails</code> property.
                        </p>
                        <pre><code>var rowDetails = $('#dataTable').jqxDataTable('rowDetails');</code></pre>
                                  <div style="padding-bottom:5px;">
  <em>Try it:</em> <a target="_blank" href="http://jsfiddle.net/jqwidgets/FMJdw/">rowDetails is set to true</a></div>
                    </div>
                </td>
            </tr>
            <tr>
                <td class="documentation-option-type-click">
                    <span id='Span26'>renderToolbar</span>
                </td>
                <td>
                    <span>Function</span>
                </td>
                <td>
                   null
                </td>
            </tr>
            <tr>
                <td colspan='3' style='width: 100%'>
                    <div class="documentation-option-description property-content" style="display: none;">
                        <p>
                          Enables custom rendering of the Toolbar.</p>
                        <h4>
                            Code examples</h4>
                        <p>
                            Set the <code>renderToolbar</code> property.
                        </p>
                        <pre><code>$('#dataTable').jqxDataTable({renderToolbar: function(toolBar){"toolBar - The jQuery selection of the Toolbar HTML Element" }); </code></pre>
                        <p>
                            Get the <code>renderToolbar</code> property.
                        </p>
                        <pre><code>var renderToolbar = $('#dataTable').jqxDataTable('renderToolbar'); </code></pre>
                                 <div style="padding-bottom:5px;">
  <em>Try it:</em> <a target="_blank" href="http://jsfiddle.net/jqwidgets/cL7gc/">renderToolbar is set to a custom function</a></div>
                    </div>
                </td>
            </tr>
            <tr>
                <td class="documentation-option-type-click">
                    <span id='Span34'>renderStatusbar</span>
                </td>
                <td>
                    <span>Function</span>
                </td>
                <td>
                   null
                </td>
            </tr>
            <tr>
                <td colspan='3' style='width: 100%'>
                    <div class="documentation-option-description property-content" style="display: none;">
                        <p>
                          Enables custom rendering of the Statusbar.</p>
                        <h4>
                            Code examples</h4>
                        <p>
                            Set the <code>renderStatusbar</code> property.
                        </p>
                        <pre><code>$('#dataTable').jqxDataTable({renderStatusbar: function(statusBar){"statusBar - The jQuery selection of the Statusbar HTML Element" }); </code></pre>
                        <p>
                            Get the <code>renderStatusbar</code> property.
                        </p>
                        <pre><code>var renderStatusbar = $('#dataTable').jqxDataTable('renderStatusbar'); </code></pre>
                           <div style="padding-bottom:5px;">
  <em>Try it:</em> <a target="_blank" href="http://jsfiddle.net/jqwidgets/4UF4r/">renderStatusbar is set to a custom function</a></div>
                    </div>
                </td>
            </tr>
            <tr>
                <td class="documentation-option-type-click">
                    <span id='Span31'>rendering</span>
                </td>
                <td>
                    <span>Function</span>
                </td>
                <td>
                   null
                </td>
            </tr>
            <tr>
                <td colspan='3' style='width: 100%'>
                    <div class="documentation-option-description property-content" style="display: none;">
                        <p>
                          Callback function which is called before the rendering of the jqxDataTable's rows.</p>
                        <h4>
                            Code examples</h4>
                        <p>
                            Set the <code>rendering</code> property.
                        </p>
<pre style='width: 600px; max-width: 600px; margin: 0px;' class='code'><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;!DOCTYPE html&gt;</span><div/><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;html lang=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"en"</span>&gt;</span><div/><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;head&gt;</span><div/>    <span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;link rel=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"stylesheet" href="../../jqwidgets/styles/jqx.base.css" type="text/css"</span> /&gt;</span><div/>    <span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;script type=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"text/javascript" src="../../scripts/jquery-1.11.1.min.js"</span>&gt;</span><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/script&gt;</span><div/>    <span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;script type=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"text/javascript" src="../../jqwidgets/jqxcore.js"</span>&gt;</span><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/script&gt;</span><div/>    <span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;script type=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"text/javascript" src="../../jqwidgets/jqxbuttons.js"</span>&gt;</span><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/script&gt;</span><div/>    <span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;script type=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"text/javascript" src="../../jqwidgets/jqxscrollbar.js"</span>&gt;</span><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/script&gt;</span><div/>    <span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;script type=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"text/javascript" src="../../jqwidgets/jqxdatatable.js"</span>&gt;</span><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/script&gt;</span><div/>    <span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;script type=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"text/javascript" src="../../jqwidgets/jqxlistbox.js"</span>&gt;</span><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/script&gt;</span><div/>    <span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;script type=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"text/javascript" src="../../jqwidgets/jqxdropdownlist.js"</span>&gt;</span><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/script&gt;</span><div/>    <span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;script type=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"text/javascript" src="../../jqwidgets/jqxdata.js"</span>&gt;</span><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/script&gt;</span><div/>    <span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;script type=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"text/javascript" src="../../jqwidgets/jqxtooltip.js"</span>&gt;</span><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/script&gt;</span><div/>    <span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;script type=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"text/javascript" src="../../jqwidgets/jqxinput.js"</span>&gt;</span><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/script&gt;</span><div/>    <span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;script type=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"text/javascript" src="../../scripts/demos.js"</span>&gt;</span><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/script&gt;</span><div/>    <span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;script type=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"text/javascript"</span>&gt;</span><div/>        var that = this;<div/>        $(document).ready(function () {<div/>            var orderdetailsurl = <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"../sampledata/orderdetails.xml"</span>;<div/><div/>            var ordersSource =<div/>            {<div/>                dataFields: [<div/>                    { name: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'OrderID', type: 'int'</span> },<div/>                    { name: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'Freight', type: 'float'</span> },<div/>                    { name: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'ShipName', type: 'string'</span> },<div/>                    { name: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'ShipAddress', type: 'string'</span> },<div/>                    { name: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'ShipCity', type: 'string'</span> },<div/>                    { name: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'ShipCountry', type: 'string'</span> },<div/>                    { name: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'ShippedDate', type: 'date'</span> }<div/>                ],<div/>                root: <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"Orders"</span>,<div/>                record: <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"Order"</span>,<div/>                dataType: <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"xml"</span>,<div/>                id: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'OrderID'</span>,<div/>                url: orderdetailsurl,<div/>                addRow: function (rowID, rowData, position, commit) {<div/>                    // synchronize with the server - send insert command<div/>                    // call commit with parameter true if the synchronization with the server is successful <div/>                    // and with parameter false if the synchronization failed.<div/>                    // you can pass additional argument to the commit callback which represents the new ID if it is generated from a DB.<div/>                    commit(true);<div/>                },<div/>                updateRow: function (rowID, rowData, commit) {<div/>                    // synchronize with the server - send update command<div/>                    // call commit with parameter true if the synchronization with the server is successful <div/>                    // and with parameter false if the synchronization failed.<div/>                    commit(true);<div/>                },<div/>                deleteRow: function (rowID, commit) {<div/>                    // synchronize with the server - send delete command<div/>                    // call commit with parameter true if the synchronization with the server is successful <div/>                    // and with parameter false if the synchronization failed.<div/>                    commit(true);<div/>                }<div/>            };<div/><div/>            var dataAdapter = new $.jqx.dataAdapter(ordersSource, {<div/>                loadComplete: function () {<div/>                    // data is loaded.<div/>                }<div/>            });<div/><div/>            this.editrow = -1;<div/>         <div/>            $(<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"#dataTable"</span>).jqxDataTable(<div/>            {<div/>                width: 670,<div/>                source: dataAdapter,<div/>                pageable: true,<div/>                sortable: true,<div/>                altrows: true,<div/>                editable: true,<div/>                editSettings: { saveOnPageChange: true, saveOnBlur: true, saveOnSelectionChange: false, cancelOnEsc: true, saveOnEnter: true, editOnDoubleClick: false, editOnF2: false },<div/>                // called when jqxDataTable is going to be rendered.<div/>                rendering: function()<div/>                {<div/>                    // destroys all buttons.<div/>                    if ($(<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">".editButtons"</span>).length &gt; 0) {<div/>                        $(<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">".editButtons"</span>).jqxButton(<span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'destroy'</span>);<div/>                    }<div/>                    if ($(<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">".cancelButtons"</span>).length &gt; 0) {<div/>                        $(<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">".cancelButtons"</span>).jqxButton(<span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'destroy'</span>);<div/>                    }<div/>                },<div/>                // called when jqxDataTable is rendered.<div/>                rendered: function () {<div/>                    if ($(<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">".editButtons"</span>).length &gt; 0) {<div/>                        $(<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">".cancelButtons"</span>).jqxButton();<div/>                        $(<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">".editButtons"</span>).jqxButton();<div/>                        <div/>                        var editClick = function (event) {<div/>                            var target = $(event.target);<div/>                            // get button's value.<div/>                            var value = target.val();<div/>                            // get clicked row.<div/>                            var rowIndex = parseInt(event.target.getAttribute(<span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'data-row'</span>));<div/>                            if (isNaN(rowIndex)) {<div/>                                return;<div/>                            }<div/><div/>                            if (value == <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"Edit"</span>) {<div/>                                // begin edit.<div/>                                $(<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"#dataTable"</span>).jqxDataTable(<span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'beginRowEdit'</span>, rowIndex);<div/>                                target.parent().find(<span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'.cancelButtons'</span>).show();<div/>                                target.val(<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"Save"</span>);<div/>                            }<div/>                            else {<div/>                                // end edit and save changes.<div/>                                target.parent().find(<span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'.cancelButtons'</span>).hide();<div/>                                target.val(<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"Edit"</span>);<div/>                                $(<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"#dataTable"</span>).jqxDataTable(<span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'endRowEdit'</span>, rowIndex);<div/>                            }<div/>                        }<div/><div/>                        $(<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">".editButtons"</span>).on(<span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'click'</span>, function (event) {<div/>                            editClick(event);<div/>                        });<div/>                 <div/>                        $(<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">".cancelButtons"</span>).click(function (event) {<div/>                            // end edit and cancel changes.<div/>                            var rowIndex = parseInt(event.target.getAttribute(<span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'data-row'</span>));<div/>                            if (isNaN(rowIndex)) {<div/>                                return;<div/>                            }<div/>                            $(<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"#dataTable"</span>).jqxDataTable(<span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'endRowEdit'</span>, rowIndex, true);<div/>                        });<div/>                    }<div/>                },<div/>                pagerButtonsCount: 8,<div/>                columns: [<div/>                  { text: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'Order ID', editable: false, dataField: 'OrderID'</span>, width: 100 },<div/>                  { text: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'Freight', dataField: 'Freight', cellsFormat: 'f2', cellsAlign: 'right', align: 'right'</span>, width: 100 },<div/>                  {<div/>                      text: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'Ship Country', dataField: 'ShipCountry'</span>, width: 150,<div/>                      columnType: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'custom'</span>,<div/>                      createEditor: function (row, cellValue, editor, width, height) {<div/>                          // create jqxInput editor.<div/>                          var textBox = $(<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"<span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;input style=<span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'padding-left: 4px; box-sizing: border-box; -moz-box-sizing: border-box; border: none;'</span>/&gt;</span>"</span>).appendTo(editor);;<div/>                          var countries = new Array(<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"Afghanistan", "Albania", "Algeria", "Andorra", "Angola", "Antarctica", "Antigua and Barbuda", "Argentina", "Armenia", "Australia", "Austria", "Azerbaijan", "Bahamas", "Bahrain", "Bangladesh", "Barbados", "Belarus", "Belgium", "Belize", "Benin", "Bermuda", "Bhutan", "Bolivia", "Bosnia and Herzegovina", "Botswana", "Brazil", "Brunei", "Bulgaria", "Burkina Faso", "Burma", "Burundi", "Cambodia", "Cameroon", "Canada", "Cape Verde", "Central African Republic", "Chad", "Chile", "China", "Colombia", "Comoros", "Congo, Democratic Republic", "Congo, Republic of the", "Costa Rica", "Cote d'Ivoire", "Croatia", "Cuba", "Cyprus", "Czech Republic", "Denmark", "Djibouti", "Dominica", "Dominican Republic", "East Timor", "Ecuador", "Egypt", "El Salvador", "Equatorial Guinea", "Eritrea", "Estonia", "Ethiopia", "Fiji", "Finland", "France", "Gabon", "Gambia", "Georgia", "Germany", "Ghana", "Greece", "Greenland", "Grenada", "Guatemala", "Guinea", "Guinea-Bissau", "Guyana", "Haiti", "Honduras", "Hong Kong", "Hungary", "Iceland", "India", "Indonesia", "Iran", "Iraq", "Ireland", "Israel", "Italy", "Jamaica", "Japan", "Jordan", "Kazakhstan", "Kenya", "Kiribati", "Korea, North", "Korea, South", "Kuwait", "Kyrgyzstan", "Laos", "Latvia", "Lebanon", "Lesotho", "Liberia", "Libya", "Liechtenstein", "Lithuania", "Luxembourg", "Macedonia", "Madagascar", "Malawi", "Malaysia", "Maldives", "Mali", "Malta", "Marshall Islands", "Mauritania", "Mauritius", "Mexico", "Micronesia", "Moldova", "Mongolia", "Morocco", "Monaco", "Mozambique", "Namibia", "Nauru", "Nepal", "Netherlands", "New Zealand", "Nicaragua", "Niger", "Nigeria", "Norway", "Oman", "Pakistan", "Panama", "Papua New Guinea", "Paraguay", "Peru", "Philippines", "Poland", "Portugal", "Qatar", "Romania", "Russia", "Rwanda", "Samoa", "San Marino", " Sao Tome", "Saudi Arabia", "Senegal", "Serbia and Montenegro", "Seychelles", "Sierra Leone", "Singapore", "Slovakia", "Slovenia", "Solomon Islands", "Somalia", "South Africa", "Spain", "Sri Lanka", "Sudan", "Suriname", "Swaziland", "Sweden", "Switzerland", "Syria", "Taiwan", "Tajikistan", "Tanzania", "Thailand", "Togo", "Tonga", "Trinidad and Tobago", "Tunisia", "Turkey", "Turkmenistan", "Uganda", "Ukraine", "United Arab Emirates", "United Kingdom", "United States", "Uruguay", "Uzbekistan", "Vanuatu", "Venezuela", "Vietnam", "Yemen", "Zambia", "Zimbabwe"</span>);<div/>                          textBox.jqxInput({ source: countries, width: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'100%', height: '100%'</span> });<div/>                          textBox.val(cellValue);<div/>                      },<div/>                      initEditor: function (row, cellValue, editor) {<div/>                          // set jqxInput editor's initial value.<div/>                          editor.find(<span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'input'</span>).val(cellValue);<div/>                      },<div/>                      getEditorValue: function (index, value, editor) {<div/>                          // get jqxInput editor's value.<div/>                          return editor.find(<span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'input'</span>).val();<div/>                      }<div/>                  },<div/>                  { text: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'Shipped Date', dataField: 'ShippedDate', cellsAlign: 'right', align: 'right', cellsFormat: 'd'</span>, width: 200 },<div/>                  {<div/>                      text: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'Edit', cellsAlign: 'center', align: <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"center"</span>, columnType: 'none'</span>, editable: false, sortable: false, dataField: null, cellsRenderer: function (row, column, value) {<div/>                          // render custom column.<div/>                          return <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"<span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;button data-row=<span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'" + row + "' class='editButtons'&gt;</span>Edit<span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/button&gt;</span><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;button style='display: none; margin-left: 5px;' data-row='" + row + "' class='cancelButtons'</span>&gt;</span>Cancel<span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/button&gt;</span>"</span>;<div/>                      }<div/>                  }<div/>                ]<div/>            });<div/>        });<div/>    <span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/script&gt;</span><div/><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/head&gt;</span><div/><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;body class=<span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'default'</span>&gt;</span><div/>    <span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;div id=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"dataTable"</span>&gt;</span><div/>    <span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/div&gt;</span><div/><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/body&gt;</span><div/><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/html&gt;</span><div/><div/></pre>
                        <p>
                            Get the <code>rendering</code> property.
                        </p>
                        <pre><code>var renderer = $('#dataTable').jqxDataTable('renderer'); </code></pre>
                            <div style="padding-bottom:5px;">
  <em>Try it:</em> <a target="_blank" href="http://jsfiddle.net/jqwidgets/px4es/">rendering is set to a custom function</a></div>
                    </div>
                </td>
            </tr>
            <tr>
                <td class="documentation-option-type-click">
                    <span id='Span32'>rendered</span>
                </td>
                <td>
                    <span>Function</span>
                </td>
                <td>
                   null
                </td>
            </tr>
            <tr>
                <td colspan='3' style='width: 100%'>
                    <div class="documentation-option-description property-content" style="display: none;">
                        <p>
                          Callback function which is called after the rendering of the jqxDataTable's row.</p>
                        <h4>
                            Code examples</h4>
                        <p>
                            Set the <code>rendered</code> property.
                        </p>
<pre style='width: 600px; max-width: 600px; margin: 0px;' class='code'><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;!DOCTYPE html&gt;</span><div/><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;html lang=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"en"</span>&gt;</span><div/><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;head&gt;</span><div/>    <span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;link rel=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"stylesheet" href="../../jqwidgets/styles/jqx.base.css" type="text/css"</span> /&gt;</span><div/>    <span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;script type=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"text/javascript" src="../../scripts/jquery-1.11.1.min.js"</span>&gt;</span><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/script&gt;</span><div/>    <span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;script type=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"text/javascript" src="../../jqwidgets/jqxcore.js"</span>&gt;</span><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/script&gt;</span><div/>    <span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;script type=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"text/javascript" src="../../jqwidgets/jqxbuttons.js"</span>&gt;</span><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/script&gt;</span><div/>    <span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;script type=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"text/javascript" src="../../jqwidgets/jqxscrollbar.js"</span>&gt;</span><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/script&gt;</span><div/>    <span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;script type=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"text/javascript" src="../../jqwidgets/jqxdatatable.js"</span>&gt;</span><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/script&gt;</span><div/>    <span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;script type=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"text/javascript" src="../../jqwidgets/jqxlistbox.js"</span>&gt;</span><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/script&gt;</span><div/>    <span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;script type=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"text/javascript" src="../../jqwidgets/jqxdropdownlist.js"</span>&gt;</span><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/script&gt;</span><div/>    <span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;script type=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"text/javascript" src="../../jqwidgets/jqxdata.js"</span>&gt;</span><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/script&gt;</span><div/>    <span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;script type=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"text/javascript" src="../../jqwidgets/jqxtooltip.js"</span>&gt;</span><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/script&gt;</span><div/>    <span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;script type=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"text/javascript" src="../../jqwidgets/jqxinput.js"</span>&gt;</span><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/script&gt;</span><div/>    <span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;script type=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"text/javascript" src="../../scripts/demos.js"</span>&gt;</span><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/script&gt;</span><div/>    <span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;script type=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"text/javascript"</span>&gt;</span><div/>        var that = this;<div/>        $(document).ready(function () {<div/>            var orderdetailsurl = <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"../sampledata/orderdetails.xml"</span>;<div/><div/>            var ordersSource =<div/>            {<div/>                dataFields: [<div/>                    { name: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'OrderID', type: 'int'</span> },<div/>                    { name: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'Freight', type: 'float'</span> },<div/>                    { name: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'ShipName', type: 'string'</span> },<div/>                    { name: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'ShipAddress', type: 'string'</span> },<div/>                    { name: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'ShipCity', type: 'string'</span> },<div/>                    { name: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'ShipCountry', type: 'string'</span> },<div/>                    { name: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'ShippedDate', type: 'date'</span> }<div/>                ],<div/>                root: <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"Orders"</span>,<div/>                record: <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"Order"</span>,<div/>                dataType: <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"xml"</span>,<div/>                id: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'OrderID'</span>,<div/>                url: orderdetailsurl,<div/>                addRow: function (rowID, rowData, position, commit) {<div/>                    // synchronize with the server - send insert command<div/>                    // call commit with parameter true if the synchronization with the server is successful <div/>                    // and with parameter false if the synchronization failed.<div/>                    // you can pass additional argument to the commit callback which represents the new ID if it is generated from a DB.<div/>                    commit(true);<div/>                },<div/>                updateRow: function (rowID, rowData, commit) {<div/>                    // synchronize with the server - send update command<div/>                    // call commit with parameter true if the synchronization with the server is successful <div/>                    // and with parameter false if the synchronization failed.<div/>                    commit(true);<div/>                },<div/>                deleteRow: function (rowID, commit) {<div/>                    // synchronize with the server - send delete command<div/>                    // call commit with parameter true if the synchronization with the server is successful <div/>                    // and with parameter false if the synchronization failed.<div/>                    commit(true);<div/>                }<div/>            };<div/><div/>            var dataAdapter = new $.jqx.dataAdapter(ordersSource, {<div/>                loadComplete: function () {<div/>                    // data is loaded.<div/>                }<div/>            });<div/><div/>            this.editrow = -1;<div/>         <div/>            $(<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"#dataTable"</span>).jqxDataTable(<div/>            {<div/>                width: 670,<div/>                source: dataAdapter,<div/>                pageable: true,<div/>                sortable: true,<div/>                altrows: true,<div/>                editable: true,<div/>                editSettings: { saveOnPageChange: true, saveOnBlur: true, saveOnSelectionChange: false, cancelOnEsc: true, saveOnEnter: true, editOnDoubleClick: false, editOnF2: false },<div/>                // called when jqxDataTable is going to be rendered.<div/>                rendering: function()<div/>                {<div/>                    // destroys all buttons.<div/>                    if ($(<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">".editButtons"</span>).length &gt; 0) {<div/>                        $(<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">".editButtons"</span>).jqxButton(<span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'destroy'</span>);<div/>                    }<div/>                    if ($(<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">".cancelButtons"</span>).length &gt; 0) {<div/>                        $(<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">".cancelButtons"</span>).jqxButton(<span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'destroy'</span>);<div/>                    }<div/>                },<div/>                // called when jqxDataTable is rendered.<div/>                rendered: function () {<div/>                    if ($(<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">".editButtons"</span>).length &gt; 0) {<div/>                        $(<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">".cancelButtons"</span>).jqxButton();<div/>                        $(<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">".editButtons"</span>).jqxButton();<div/>                        <div/>                        var editClick = function (event) {<div/>                            var target = $(event.target);<div/>                            // get button's value.<div/>                            var value = target.val();<div/>                            // get clicked row.<div/>                            var rowIndex = parseInt(event.target.getAttribute(<span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'data-row'</span>));<div/>                            if (isNaN(rowIndex)) {<div/>                                return;<div/>                            }<div/><div/>                            if (value == <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"Edit"</span>) {<div/>                                // begin edit.<div/>                                $(<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"#dataTable"</span>).jqxDataTable(<span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'beginRowEdit'</span>, rowIndex);<div/>                                target.parent().find(<span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'.cancelButtons'</span>).show();<div/>                                target.val(<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"Save"</span>);<div/>                            }<div/>                            else {<div/>                                // end edit and save changes.<div/>                                target.parent().find(<span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'.cancelButtons'</span>).hide();<div/>                                target.val(<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"Edit"</span>);<div/>                                $(<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"#dataTable"</span>).jqxDataTable(<span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'endRowEdit'</span>, rowIndex);<div/>                            }<div/>                        }<div/><div/>                        $(<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">".editButtons"</span>).on(<span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'click'</span>, function (event) {<div/>                            editClick(event);<div/>                        });<div/>                 <div/>                        $(<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">".cancelButtons"</span>).click(function (event) {<div/>                            // end edit and cancel changes.<div/>                            var rowIndex = parseInt(event.target.getAttribute(<span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'data-row'</span>));<div/>                            if (isNaN(rowIndex)) {<div/>                                return;<div/>                            }<div/>                            $(<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"#dataTable"</span>).jqxDataTable(<span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'endRowEdit'</span>, rowIndex, true);<div/>                        });<div/>                    }<div/>                },<div/>                pagerButtonsCount: 8,<div/>                columns: [<div/>                  { text: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'Order ID', editable: false, dataField: 'OrderID'</span>, width: 100 },<div/>                  { text: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'Freight', dataField: 'Freight', cellsFormat: 'f2', cellsAlign: 'right', align: 'right'</span>, width: 100 },<div/>                  {<div/>                      text: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'Ship Country', dataField: 'ShipCountry'</span>, width: 150,<div/>                      columnType: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'custom'</span>,<div/>                      createEditor: function (row, cellValue, editor, width, height) {<div/>                          // create jqxInput editor.<div/>                          var textBox = $(<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"<span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;input style=<span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'padding-left: 4px; box-sizing: border-box; -moz-box-sizing: border-box; border: none;'</span>/&gt;</span>"</span>).appendTo(editor);;<div/>                          var countries = new Array(<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"Afghanistan", "Albania", "Algeria", "Andorra", "Angola", "Antarctica", "Antigua and Barbuda", "Argentina", "Armenia", "Australia", "Austria", "Azerbaijan", "Bahamas", "Bahrain", "Bangladesh", "Barbados", "Belarus", "Belgium", "Belize", "Benin", "Bermuda", "Bhutan", "Bolivia", "Bosnia and Herzegovina", "Botswana", "Brazil", "Brunei", "Bulgaria", "Burkina Faso", "Burma", "Burundi", "Cambodia", "Cameroon", "Canada", "Cape Verde", "Central African Republic", "Chad", "Chile", "China", "Colombia", "Comoros", "Congo, Democratic Republic", "Congo, Republic of the", "Costa Rica", "Cote d'Ivoire", "Croatia", "Cuba", "Cyprus", "Czech Republic", "Denmark", "Djibouti", "Dominica", "Dominican Republic", "East Timor", "Ecuador", "Egypt", "El Salvador", "Equatorial Guinea", "Eritrea", "Estonia", "Ethiopia", "Fiji", "Finland", "France", "Gabon", "Gambia", "Georgia", "Germany", "Ghana", "Greece", "Greenland", "Grenada", "Guatemala", "Guinea", "Guinea-Bissau", "Guyana", "Haiti", "Honduras", "Hong Kong", "Hungary", "Iceland", "India", "Indonesia", "Iran", "Iraq", "Ireland", "Israel", "Italy", "Jamaica", "Japan", "Jordan", "Kazakhstan", "Kenya", "Kiribati", "Korea, North", "Korea, South", "Kuwait", "Kyrgyzstan", "Laos", "Latvia", "Lebanon", "Lesotho", "Liberia", "Libya", "Liechtenstein", "Lithuania", "Luxembourg", "Macedonia", "Madagascar", "Malawi", "Malaysia", "Maldives", "Mali", "Malta", "Marshall Islands", "Mauritania", "Mauritius", "Mexico", "Micronesia", "Moldova", "Mongolia", "Morocco", "Monaco", "Mozambique", "Namibia", "Nauru", "Nepal", "Netherlands", "New Zealand", "Nicaragua", "Niger", "Nigeria", "Norway", "Oman", "Pakistan", "Panama", "Papua New Guinea", "Paraguay", "Peru", "Philippines", "Poland", "Portugal", "Qatar", "Romania", "Russia", "Rwanda", "Samoa", "San Marino", " Sao Tome", "Saudi Arabia", "Senegal", "Serbia and Montenegro", "Seychelles", "Sierra Leone", "Singapore", "Slovakia", "Slovenia", "Solomon Islands", "Somalia", "South Africa", "Spain", "Sri Lanka", "Sudan", "Suriname", "Swaziland", "Sweden", "Switzerland", "Syria", "Taiwan", "Tajikistan", "Tanzania", "Thailand", "Togo", "Tonga", "Trinidad and Tobago", "Tunisia", "Turkey", "Turkmenistan", "Uganda", "Ukraine", "United Arab Emirates", "United Kingdom", "United States", "Uruguay", "Uzbekistan", "Vanuatu", "Venezuela", "Vietnam", "Yemen", "Zambia", "Zimbabwe"</span>);<div/>                          textBox.jqxInput({ source: countries, width: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'100%', height: '100%'</span> });<div/>                          textBox.val(cellValue);<div/>                      },<div/>                      initEditor: function (row, cellValue, editor) {<div/>                          // set jqxInput editor's initial value.<div/>                          editor.find(<span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'input'</span>).val(cellValue);<div/>                      },<div/>                      getEditorValue: function (index, value, editor) {<div/>                          // get jqxInput editor's value.<div/>                          return editor.find(<span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'input'</span>).val();<div/>                      }<div/>                  },<div/>                  { text: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'Shipped Date', dataField: 'ShippedDate', cellsAlign: 'right', align: 'right', cellsFormat: 'd'</span>, width: 200 },<div/>                  {<div/>                      text: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'Edit', cellsAlign: 'center', align: <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"center"</span>, columnType: 'none'</span>, editable: false, sortable: false, dataField: null, cellsRenderer: function (row, column, value) {<div/>                          // render custom column.<div/>                          return <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"<span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;button data-row=<span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'" + row + "' class='editButtons'&gt;</span>Edit<span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/button&gt;</span><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;button style='display: none; margin-left: 5px;' data-row='" + row + "' class='cancelButtons'</span>&gt;</span>Cancel<span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/button&gt;</span>"</span>;<div/>                      }<div/>                  }<div/>                ]<div/>            });<div/>        });<div/>    <span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/script&gt;</span><div/><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/head&gt;</span><div/><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;body class=<span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'default'</span>&gt;</span><div/>    <span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;div id=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"dataTable"</span>&gt;</span><div/>    <span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/div&gt;</span><div/><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/body&gt;</span><div/><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/html&gt;</span><div/><div/></pre>
                         <p>
                            Get the <code>rendered</code> property.
                        </p>
                        <pre><code>var rendered = $('#dataTable').jqxDataTable('rendered'); </code></pre>
                              <div style="padding-bottom:5px;">
  <em>Try it:</em> <a target="_blank" href="http://jsfiddle.net/jqwidgets/9HsaP/">rendered is set to a custom function</a></div>
                    </div>
                </td>
            </tr>
           <tr>
                <td class="documentation-option-type-click">
                    <span id='Span51'>rtl</span>
                </td>
                <td>
                    <span>Boolean</span>
                </td>
                <td>
                    false
                </td>
            </tr>
            <tr>
                <td colspan='3' style='width: 100%'>
                    <div class="documentation-option-description property-content" style="display: none;">
                       <p>Sets or gets a value indicating whether widget's elements are aligned to support locales using right-to-left fonts.</p>
                       <h4>
                            Code example</h4>
                        <p>
                            Set the <code>rtl</code> property.
                        </p>
                        <pre><code>$('#dataTable').jqxDataTable({rtl : true}); </code></pre>
                        <p>
                            Get the <code>rtl</code> property.
                        </p>
                        <pre><code>var rtl = $('#dataTable').jqxDataTable('rtl'); </code></pre>
                         <div style="padding-bottom:5px;">
  <em>Try it:</em> <a target="_blank" href="http://jsfiddle.net/jqwidgets/2cNR3/">rtl is set to true</a></div>
                    </div>
                </td>
            </tr>
          <tr>
                <td class="documentation-option-type-click">
                    <span id='Span61'>source</span>
                </td>
                <td>
                    <span>Object</span>
                </td>
                <td>
                   null
                </td>
            </tr>
            <tr>
                <td colspan='3' style='width: 100%'>
                    <div class="documentation-option-description property-content" style="display: none;">
                        <p>
                          Determines the jqxDataTable's data source. The <code>source</code> property is expected to point to an instance of jqxDataAdapter. For more information about jqxDataAdapter, visit: <a href="http://www.jqwidgets.com/jquery-widgets-documentation/documentation/jqxdataadapter/jquery-data-adapter.htm">jquery-data-adapter.htm</a>. To clear the data source, set the <code>source</code> property to null.</p>
                        <h4>
                            Code examples</h4>
                        <p>
                            Set the <code>source</code> property.
                        </p>
<pre style='width: 600px; max-width: 600px; margin: 0px;' class='code'><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;!DOCTYPE html&gt;</span><div/><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;html lang=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"en"</span>&gt;</span><div/><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;head&gt;</span><div/>    <span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;link rel=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"stylesheet" href="../../jqwidgets/styles/jqx.base.css" type="text/css"</span> /&gt;</span><div/>    <span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;script type=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"text/javascript" src="../../scripts/jquery-1.11.1.min.js"</span>&gt;</span><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/script&gt;</span><div/>    <span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;script type=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"text/javascript" src="../../jqwidgets/jqxcore.js"</span>&gt;</span><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/script&gt;</span><div/>    <span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;script type=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"text/javascript" src="../../jqwidgets/jqxdata.js"</span>&gt;</span><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/script&gt;</span> <div/>    <span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;script type=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"text/javascript" src="../../jqwidgets/jqxbuttons.js"</span>&gt;</span><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/script&gt;</span><div/>    <span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;script type=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"text/javascript" src="../../jqwidgets/jqxscrollbar.js"</span>&gt;</span><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/script&gt;</span><div/>    <span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;script type=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"text/javascript" src="../../jqwidgets/jqxdatatable.js"</span>&gt;</span><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/script&gt;</span> <div/>    <span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;script type=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"text/javascript" src="../../scripts/demos.js"</span>&gt;</span><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/script&gt;</span><div/>    <span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;script type=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"text/javascript"</span>&gt;</span><div/>        $(document).ready(function () {<div/>            var url = <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"../sampledata/customers.xml"</span>;<div/><div/>            // prepare the data<div/>            var source =<div/>            {<div/>                datatype: <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"xml"</span>,<div/>                datafields: [<div/>                    { name: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'CompanyName', map: 'm\\:properties&gt;d\\:CompanyName', type: 'string'</span> },<div/>                    { name: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'ContactName', map: 'm\\:properties&gt;d\\:ContactName', type: 'string'</span> },<div/>                    { name: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'ContactTitle', map: 'm\\:properties&gt;d\\:ContactTitle', type: 'string'</span> },<div/>                    { name: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'City', map: 'm\\:properties&gt;d\\:City', type: 'string'</span> },<div/>                    { name: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'PostalCode', map: 'm\\:properties&gt;d\\:PostalCode', type: 'string'</span> },<div/>                    { name: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'Country', map: 'm\\:properties&gt;d\\:Country', type: 'string'</span> }<div/>                ],<div/>                root: <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"entry"</span>,<div/>                record: <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"content"</span>,<div/>                id: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'m\\:properties&gt;d\\:CustomerID'</span>,<div/>                url: url<div/>            };<div/>            var dataAdapter = new $.jqx.dataAdapter(source);<div/><div/>            // Create jqxGrid<div/>            $(<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"#dataTable"</span>).jqxDataTable(<div/>            {<div/>                width: 670,<div/>                source: dataAdapter,<div/>                pageable: true,<div/>                pagerButtonsCount: 10,<div/>                columnsresize: true,<div/>                columns: [<div/>                  { text: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'Company Name', datafield: 'CompanyName'</span>, width: 250 },<div/>                  { text: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'Contact Name', datafield: 'ContactName'</span>, width: 150 },<div/>                  { text: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'Contact Title', datafield: 'ContactTitle'</span>, width: 180 },<div/>                  { text: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'City', datafield: 'City'</span>, width: 120 },<div/>                  { text: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'Postal Code', datafield: 'PostalCode'</span>, width: 90 },<div/>                  { text: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'Country', datafield: 'Country'</span>, width: 100 }<div/>                ]<div/>            });<div/>        });<div/>    <span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/script&gt;</span><div/><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/head&gt;</span><div/><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;body class=<span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'default'</span>&gt;</span><div/>    <span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;div id=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"dataTable"</span>&gt;</span><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/div&gt;</span><div/><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/body&gt;</span><div/><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/html&gt;</span><div/><div/></pre>
                       <div style="padding-bottom:5px;">
  <em>Try it:</em> <a target="_blank" href="http://jsfiddle.net/jqwidgets/6wK2Y/">source is set to dataAdapter</a></div>
                         </div>
                </td>
            </tr> 
           <tr>
                <td class="documentation-option-type-click">
                    <span id='Span36'>sortable</span>
                </td>
                <td>
                    <span>Boolean</span>
                </td>
                <td>
                   false
                </td>
            </tr>
            <tr>
                <td colspan='3' style='width: 100%'>
                    <div class="documentation-option-description property-content" style="display: none;">
                        <p>
                          Enables/Disables the sorting feature.</p>
                        <h4>
                            Code examples</h4>
                        <p>
                            Set the <code>sortable</code> property.
                        </p>
                        <pre><code>$('#dataTable').jqxDataTable({sortable: true}); </code></pre>
                        <p>
                            Get the <code>sortable</code> property.
                        </p>
                        <pre><code>var sortable = $('#dataTable').jqxDataTable('sortable'); </code></pre>
                                <div style="padding-bottom:5px;">
  <em>Try it:</em> <a target="_blank" href="http://jsfiddle.net/jqwidgets/rspph/">sortable is set to true</a></div>
                    </div>
                </td>
            </tr> 
        <tr>
                <td class="documentation-option-type-click">
                    <span id='Span58'>showAggregates</span>
                </td>
                <td>
                    <span>Boolean</span>
                </td>
                <td>
                   false
                </td>
            </tr>
            <tr>
                <td colspan='3' style='width: 100%'>
                    <div class="documentation-option-description property-content" style="display: none;">
                        <p>
                          Determines whether the jqxDataTable's Aggregates bar is visible.</p>
                        <h4>
                            Code examples</h4>
                        <p>
                            Set the <code>showAggregates</code> property.
                        </p>
                        <pre><code>$('#dataTable').jqxDataTable({showAggregates: true}); </code></pre>
                        <p>
                            Get the <code>showAggregates</code> property.
                        </p>
                        <pre><code>var showAggregates = $('#dataTable').jqxDataTable('showAggregates'); </code></pre>
                                   <div style="padding-bottom:5px;">
  <em>Try it:</em> <a target="_blank" href="http://jsfiddle.net/jqwidgets/S29qZ/">showAggregates is set to true</a></div>
                    </div>
                </td>
            </tr>
            <tr>
                <td class="documentation-option-type-click">
                    <span id='Span25'>showToolbar</span>
                </td>
                <td>
                    <span>Boolean</span>
                </td>
                <td>
                   false
                </td>
            </tr>
            <tr>
                <td colspan='3' style='width: 100%'>
                    <div class="documentation-option-description property-content" style="display: none;">
                        <p>
                          Determines whether the jqxDataTable's Toolbar is visible.</p>
                        <h4>
                            Code examples</h4>
                        <p>
                            Set the <code>showToolbar</code> property.
                        </p>
                        <pre><code>$('#dataTable').jqxDataTable({showToolbar: true}); </code></pre>
                        <p>
                            Get the <code>showToolbar</code> property.
                        </p>
                        <pre><code>var showToolbar = $('#dataTable').jqxDataTable('showToolbar'); </code></pre>
                            <div style="padding-bottom:5px;">
  <em>Try it:</em> <a target="_blank" href="http://jsfiddle.net/jqwidgets/YbrNY/">showToolbar is set to true</a></div>
                    </div>
                </td>
            </tr>
          <tr>
                <td class="documentation-option-type-click">
                    <span id='Span33'>showStatusbar</span>
                </td>
                <td>
                    <span>Boolean</span>
                </td>
                <td>
                   false
                </td>
            </tr>
            <tr>
                <td colspan='3' style='width: 100%'>
                    <div class="documentation-option-description property-content" style="display: none;">
                        <p>
                          Determines whether the jqxDataTable's Statusbar is visible.</p>
                        <h4>
                            Code examples</h4>
                        <p>
                            Set the <code>showStatusbar</code> property.
                        </p>
                        <pre><code>$('#dataTable').jqxDataTable({showStatusbar: true}); </code></pre>
                        <p>
                            Get the <code>showStatusbar</code> property.
                        </p>
                        <pre><code>var showStatusbar = $('#dataTable').jqxDataTable('showStatusbar'); </code></pre>
                                 <div style="padding-bottom:5px;">
  <em>Try it:</em> <a target="_blank" href="http://jsfiddle.net/jqwidgets/Sjf8w/">showStatusbar is set to true</a></div>
                    </div>
                </td>
            </tr>
           <tr>
                <td class="documentation-option-type-click">
                    <span id='Span54'>statusBarHeight</span>
                </td>
                <td>
                    <span>Number</span>
                </td>
                <td>
                   34
                </td>
            </tr>
            <tr>
                <td colspan='3' style='width: 100%'>
                    <div class="documentation-option-description property-content" style="display: none;">
                        <p>
                          Sets or gets the height of the Statusbar. Statusbar is displayed after setting <code>showStatusbar</code> to true.</p>
                        <h4>
                            Code examples</h4>
                        <p>
                            Set the <code>statusBarHeight</code> property.
                        </p>
                        <pre><code>$('#dataTable').jqxDataTable({statusBarHeight: 40}); </code></pre>
                        <p>
                            Get the <code>statusBarHeight</code> property.
                        </p>
                        <pre><code>var statusBarHeight = $('#dataTable').jqxDataTable('statusBarHeight'); </code></pre>
                             <div style="padding-bottom:5px;">
  <em>Try it:</em> <a target="_blank" href="http://jsfiddle.net/jqwidgets/rLR7b/">statusBarHeight is set to 40</a></div>
                    </div>
                </td>
            </tr>
          <tr>
                <td class="documentation-option-type-click">
                    <span id='Span57'>scrollBarSize</span>
                </td>
                <td>
                    <span>Number</span>
                </td>
                <td>
                   17
                </td>
            </tr>
            <tr>
                <td colspan='3' style='width: 100%'>
                    <div class="documentation-option-description property-content" style="display: none;">
                        <p>
                          Sets or gets the size of the scrollbars.</p>
                        <h4>
                            Code examples</h4>
                        <p>
                            Set the <code>scrollBarSize</code> property.
                        </p>
                        <pre><code>$('#dataTable').jqxDataTable({scrollBarSize: 15}); </code></pre>
                        <p>
                            Get the <code>scrollBarSize</code> property.
                        </p>
                        <pre><code>var scrollBarSize = $('#dataTable').jqxDataTable('scrollBarSize'); </code></pre>
                              <div style="padding-bottom:5px;">
  <em>Try it:</em> <a target="_blank" href="http://jsfiddle.net/jqwidgets/g9CLs/">scrollBarSize is set to 20</a></div>
                    </div>
                </td>
            </tr>
            <tr>
                <td class="documentation-option-type-click">
                    <span id='Span35'>selectionMode</span>
                </td>
                <td>
                    <span>String</span>
                </td>
                <td>
                   "multipleRows"
                </td>
            </tr>
            <tr>
                <td colspan='3' style='width: 100%'>
                    <div class="documentation-option-description property-content" style="display: none;">
                        <p>
                          Sets or gets the selection mode. Possible values: <code>"multipleRows"</code>, <code>"singleRow"</code> and <code>"custom"</code>. In the "custom" mode, rows could be selected/unselected only through the API.</p>
                        <h4>
                            Code examples</h4>
                        <p>
                            Set the <code>selectionMode</code> property.
                        </p>
                        <pre><code>$('#dataTable').jqxDataTable({selectionMode: "singleRow" }); </code></pre>
                        <p>
                            Get the <code>enableBrowserSelection</code> property.
                        </p>
                        <pre><code>var selectionMode = $('#dataTable').jqxDataTable('selectionMode'); </code></pre>
                                <div style="padding-bottom:5px;">
  <em>Try it:</em> <a target="_blank" href="http://jsfiddle.net/jqwidgets/F9YJA/">selectionMode is set to "singleRow"</a></div>
                    </div>
                </td>
            </tr>
           <tr>
                <td class="documentation-option-type-click">
                    <span id='Span55'>serverProcessing</span>
                </td>
                <td>
                    <span>Boolean</span>
                </td>
                <td>
                   false
                </td>
            </tr>
            <tr>
                <td colspan='3' style='width: 100%'>
                    <div class="documentation-option-description property-content" style="display: none;">
                        <p>
                          Sets or gets whether the Paging, Sorting and Filtering are handled by a Server and jqxDataTable sends Ajax requests to a Server and displays the returned data. When the current page, page size, sort order or sort column is changed, jqxDataTable will automatically perform a new data binding with the updated parameters. For server synchronization after adding, removing, updating rows, see the <code>source</code> property documentation.</p>
                        <br />
By default, the jqxDataTable sends the following data to the server:
<ul>
	<li>sortdatafield - the sort column's datafield.</li>
	<li>sortorder - the sort order - 'asc', 'desc' or ''.</li>
	<li>pagenum - the current page's number when the paging feature is enabled.</li>
	<li>pagesize - the page's size which represents the number of rows displayed in the view.</li>
	<li>filterscount - the number of filters applied to the jqxDataTable.</li>
	<li>filtervalue - the filter's value. The filtervalue name for the first filter is "filtervalue0", for the second filter is "filtervalue1" and so on.</li>
	<li>filtercondition - the filter's condition. The condition can be any of these: "CONTAINS", "DOES_NOT_CONTAIN", "EQUAL", "EQUAL_CASE_SENSITIVE", NOT_EQUAL","GREATER_THAN", "GREATER_THAN_OR_EQUAL", "LESS_THAN", "LESS_THAN_OR_EQUAL", "STARTS_WITH", "STARTS_WITH_CASE_SENSITIVE", "ENDS_WITH", "ENDS_WITH_CASE_SENSITIVE", "NULL", "NOT_NULL", "EMPTY", "NOT_EMPTY".</li>
	<li>filterdatafield - the filter column's datafield.</li>
	<li>filteroperator - the filter's operator - 0 for "AND" and 1 for "OR".</li>
</ul>

                         <h4>
                            Code examples</h4>
                        <p>
                            Set the <code>serverProcessing</code> property.
                        </p>
                        <pre><code>$('#dataTable').jqxDataTable({serverProcessing: true }); </code></pre>
                        <p>jqxDataTable Server Paging & Filtering</p>
<pre style='width: 600px; max-width: 600px; margin: 0px;' class='code'><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;!DOCTYPE html&gt;</span><div/><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;html lang=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"en"</span>&gt;</span><div/><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;head&gt;</span><div/>    <span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;link rel=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"stylesheet" href="../../jqwidgets/styles/jqx.base.css" type="text/css"</span> /&gt;</span><div/>    <span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;script type=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"text/javascript" src="../../scripts/jquery-1.11.1.min.js"</span>&gt;</span><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/script&gt;</span><div/>    <span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;script type=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"text/javascript" src="../../jqwidgets/jqxcore.js"</span>&gt;</span><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/script&gt;</span><div/>    <span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;script type=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"text/javascript" src="../../jqwidgets/jqxdata.js"</span>&gt;</span><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/script&gt;</span> <div/>    <span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;script type=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"text/javascript" src="../../jqwidgets/jqxbuttons.js"</span>&gt;</span><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/script&gt;</span><div/>    <span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;script type=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"text/javascript" src="../../jqwidgets/jqxscrollbar.js"</span>&gt;</span><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/script&gt;</span><div/>    <span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;script type=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"text/javascript" src="../../jqwidgets/jqxdatatable.js"</span>&gt;</span><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/script&gt;</span> <div/>    <span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;script type=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"text/javascript" src="../../scripts/demos.js"</span>&gt;</span><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/script&gt;</span><div/>    <span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;script type=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"text/javascript"</span>&gt;</span><div/>        $(document).ready(function () {<div/>            // prepare the data<div/>            var source =<div/>            {<div/>                dataType: <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"json"</span>,<div/>                dataFields: [<div/>                    { name: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'ShipCountry', type: 'string'</span> },<div/>                    { name: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'ShipCity', type: 'string'</span> },<div/>                    { name: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'ShipAddress', type: 'string'</span> },<div/>                    { name: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'ShipName', type: 'string'</span> },<div/>                    { name: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'Freight', type: 'number'</span> },<div/>                    { name: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'ShippedDate', type: 'date'</span> }<div/>                ],<div/>                root: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'value'</span>,<div/>                url: <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"http://services.odata.org/V3/Northwind/Northwind.svc/Orders?$format=json"</span><div/>            };<div/><div/>            var filterChanged = false;<div/>            var dataAdapter = new $.jqx.dataAdapter(source, <div/>                {<div/>                    formatData: function (data) {<div/>                        if (data.sortdatafield &amp;&amp; data.sortorder) {<div/>                            // update the $orderby param of the OData service.<div/>                            // data.sortdatafield - the column's datafield value(ShipCountry, ShipCity, etc.).<div/>                            // data.sortorder - the sort order(asc or desc).<div/>                            data.$orderby = data.sortdatafield + <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">" "</span> + data.sortorder;<div/>                        }<div/>                        if (data.filterslength) {<div/>                            filterChanged = true;<div/>                            var filterParam = "";<div/>                            for (var i = 0; i &lt; data.filterslength; i++) {<div/>                                // filter's value.<div/>                                var filterValue = data[<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"filtervalue"</span> + i];<div/>                                // filter's condition. For the filterMode=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"simple" it is "CONTAINS"</span>.<div/>                                var filterCondition = data[<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"filtercondition"</span> + i];<div/>                                // filter<span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'s data field - the filter column'</span>s datafield value.<div/>                                var filterDataField = data[<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"filterdatafield"</span> + i];<div/>                                // <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"and" or "or" depending on the filter expressions. When the filterMode="simple", the value is "or"</span>.<div/>                                var filterOperator = data[filterDataField + <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"operator"</span>];<div/><div/>                                var startIndex = 0;<div/>                                if (filterValue.indexOf(<span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'-'</span>) == -1) {<div/>                                    if (filterCondition == <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"CONTAINS"</span>) {<div/>                                        filterParam += <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"substringof(<span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'" + filterValue + "'</span>, " + filterDataField + ") eq true"</span>;<div/>                                        filterParam += <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">" " + filterOperator + " "</span>;<div/>                                    }<div/>                                }<div/>                                else {<div/>                                    if (filterDataField == <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"ShippedDate"</span>) {<div/>                                        var dateGroups = new Array();<div/>                                        var startIndex = 0;<div/>                                        var item = filterValue.substring(startIndex).indexOf(<span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'-'</span>);<div/>                                        while (item &gt; -1) {<div/>                                            dateGroups.push(filterValue.substring(startIndex, item + startIndex));<div/>                                            startIndex += item + 1;<div/>                                            item = filterValue.substring(startIndex).indexOf(<span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'-'</span>);<div/>                                            if (item == -1) {<div/>                                                dateGroups.push(filterValue.substring(startIndex));<div/>                                            }<div/>                                        }<div/>                                        if (dateGroups.length == 3) {<div/>                                            filterParam += <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"year(ShippedDate) eq " + parseInt(dateGroups[0]) + " and month(ShippedDate) eq " + parseInt(dateGroups[1]) + " and day(ShippedDate) eq "</span> + parseInt(dateGroups[2]);<div/>                                        }<div/>                                        filterParam += <span style="clear: both; padding: 0px; margin: 0px; color: #a24;">" " + filterOperator + " "</span>;<div/>                                    }<div/>                                }<div/>                            }<div/>                            // remove last filter operator.<div/>                            filterParam = filterParam.substring(0, filterParam.length - filterOperator.length - 2);<div/><div/>                            data.$filter = filterParam;<div/>                            source.totalRecords = 0;<div/>                        }<div/>                        else {<div/>                            if (filterChanged) {<div/>                                source.totalRecords = 0;<div/>                                filterChanged = false;<div/>                            }<div/>                        }<div/><div/>                        if (source.totalRecords) {<div/>                            // update the $skip and $top params of the OData service.<div/>                            // data.pagenum - page number starting from 0.<div/>                            // data.pagesize - page size<div/>                            data.$skip = data.pagenum * data.pagesize;<div/>                            data.$top = data.pagesize;        <div/>                        }<div/>                        return data;<div/>                    },<div/>                    downloadComplete: function (data, status, xhr) {<div/>                        if (!source.totalRecords) {<div/>                            source.totalRecords = data.value.length;<div/>                        }<div/>                    }<div/>                }<div/>            );<div/><div/>            $(<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"#dataTable"</span>).jqxDataTable(<div/>            {<div/>                width: 670,<div/>                pageable: true,<div/>                pagerButtonsCount: 10,<div/>                serverProcessing: true,<div/>                source: dataAdapter,<div/>                altRows: true,<div/>                filterable: true,<div/>                filterMode: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'simple'</span>,<div/>                sortable: true,<div/>                columnsResize: true,<div/>                columns: [<div/>                    { text: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'Ship Name', dataField: 'ShipName'</span>, width: 200 },<div/>                    { text: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'Ship Country', dataField: 'ShipCountry'</span>, width: 200 },<div/>                    { text: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'Ship City', dataField: 'ShipCity'</span>, width: 200 },<div/>                    { text: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'Ship Address', dataField: 'ShipAddress'</span>, width: 200 },<div/>                    { text: <span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'Ship Date', dataField: 'ShippedDate', width: 200, cellsFormat: 'yyyy-MM-dd'</span> }<div/>                ]<div/>            });<div/>        });<div/>    <span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/script&gt;</span><div/><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/head&gt;</span><div/><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;body class=<span style=" clear: both; padding: 0px; margin: 0px; color: #a24;">'default'</span>&gt;</span><div/>    <span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;h3 style=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"font-size: 16px; font-family: Verdana;"&gt;</span>Data Source: "http://services.odata.org"</span><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/h3&gt;</span><div/>    <span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;div id=<span style="clear: both; padding: 0px; margin: 0px; color: #a24;">"dataTable"</span>&gt;</span><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/div&gt;</span><div/><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/body&gt;</span><div/><span style="clear: both; padding: 0px; margin: 0px; color: #11a;">&lt;/html&gt;</span><div/><div/></pre>
                        <p>
                            Get the <code>serverProcessing</code> property.
                        </p>
                        <pre><code>var serverProcessing = $('#dataTable').jqxDataTable('serverProcessing'); </code></pre>
                              <div style="padding-bottom:5px;">
  <em>Try it:</em> <a target="_blank" href="http://jsfiddle.net/jqwidgets/6QszJ/">serverProcessing is set to true</a></div>
                    </div>
                </td>
            </tr>
            <tr>
                <td class="documentation-option-type-click">
                    <span id='Span56'>showHeader</span>
                </td>
                <td>
                    <span>Boolean</span>
                </td>
                <td>
                    true
                </td>
            </tr>
            <tr>
                <td colspan='3' style='width: 100%'>
                    <div class="documentation-option-description property-content" style="display: none;">
                        <p>
                            Sets or gets the jqxDataTable's columns visibility.</p>
                        <h4>
                            Code examples</h4>
                        <p>
                            Set the <code>showHeader</code> property.
                        </p>
                        <pre><code>$('#dataTable').jqxDataTable({showHeader: false});</code></pre>
                        <p>
                            Get the <code>showHeader</code> property.
                        </p>
                        <pre><code>var showHeader = $('#dataTable').jqxDataTable('showHeader');</code></pre>
                             <div style="padding-bottom:5px;">
  <em>Try it:</em> <a target="_blank" href="http://jsfiddle.net/jqwidgets/LuKLy/">showHeader is set to false</a></div>
                    </div>
                </td>
            </tr>
           <tr>
                <td class="documentation-option-type-click">
                    <span id='Span63'>theme</span>
                </td>
                <td>
                    <span>String</span>
                </td>
                <td>
                    ''
                </td>
            </tr>
            <tr>
                <td colspan='3' style='width: 100%'>
                    <div class="documentation-option-description property-content" style="display: none;">
                        <p>
                            Sets the widget's theme.</p>
                        jQWidgets uses a pair of css files - jqx.base.css and jqx.[theme name].css. The base stylesheet creates the styles related to the widget's layout like margin, padding, border-width, position. The second css file applies the widget's colors and backgrounds. The jqx.base.css should be included before the second CSS file.
                        In order to set a theme, you need to do the following:
                        <ul>
                            <li>Include the theme's CSS file after jqx.base.css.<br />The following code example adds the 'energyblue' theme.
<pre><code>
<pre><code>&lt;link rel=&quot;stylesheet&quot; href=&quot;../../jqwidgets/styles/jqx.base.css&quot; type=&quot;text/css&quot; /&gt;
&lt;link rel=&quot;stylesheet&quot; href=&quot;../../jqwidgets/styles/jqx.energyblue.css&quot; type=&quot;text/css&quot; /&gt;
</code></pre>
</code></pre>
                            </li>
                            <li>
                                Set the widget's theme property to 'energyblue' when you initialize it.
                            </li>
                        </ul>
                             <div style="padding-bottom:5px;">
  <em>Try it:</em> <a target="_blank" href="http://jsfiddle.net/jqwidgets/55D92/">theme is set to 'energyblue'</a></div>
                    </div>
                </td>
            </tr>
           <tr>
                <td class="documentation-option-type-click">
                    <span id='Span60'>toolbarHeight</span>
                </td>
                <td>
                    <span>Number</span>
                </td>
                <td>
                   34
                </td>
            </tr>
            <tr>
                <td colspan='3' style='width: 100%'>
                    <div class="documentation-option-description property-content" style="display: none;">
                        <p>
                          Sets or gets the height of the Toolbar. Toolbar is displayed after setting <code>showToolbar</code> to true.</p>
                        <h4>
                            Code examples</h4>
                        <p>
                            Set the <code>toolbarHeight</code> property.
                        </p>
                        <pre><code>$('#dataTable').jqxDataTable({toolbarHeight: 40}); </code></pre>
                        <p>
                            Get the <code>toolbarHeight</code> property.
                        </p>
                        <pre><code>var toolbarHeight = $('#dataTable').jqxDataTable('toolbarHeight'); </code></pre>
                              <div style="padding-bottom:5px;">
  <em>Try it:</em> <a target="_blank" href="http://jsfiddle.net/jqwidgets/XJR96/">toolbarHeight is set to 40</a></div>
                    </div>
                </td>
            </tr>
           <tr>
                <td class="documentation-option-type-click">
                    <span id='property-name-disabled'>width</span>
                </td>
                <td>
                    <span>Number/String</span>
                </td>
                <td>
                    null
                </td>
            </tr>
            <tr>
                <td colspan='3' style='width: 100%'>
                    <div class="documentation-option-description property-content" style="display: none;">
                        <p>
                            Sets or gets the jqxDataTable's width.</p>
                        <h4>
                            Code examples</h4>
                        <p>
                            Set the <code>width</code> property.
                        </p>
                        <pre><code>$('#dataTable').jqxDataTable({width:"200px"});</code></pre>
                        <p>
                            Get the <code>width</code> property.
                        </p>
                        <pre><code>var width = $('#dataTable').jqxDataTable('width');</code></pre>
                                 <div style="padding-bottom:5px;">
  <em>Try it:</em> <a target="_blank" href="http://jsfiddle.net/jqwidgets/b4ah2/">width is set to 670</a></div>
                    </div>
                </td>
            </tr>

            <tr>
                <td colspan='3' style='width: 100%'>
                    <h2 class="documentation-top-header">
                        Events</h2>
                </td>
            </tr>
            <tr>
                <td class="documentation-option-type-click">
                    <span id='Span27'>bindingComplete</span>
                </td>
                <td>
                    <span>Event</span>
                </td>
                <td>
                </td>
            </tr>
            <tr>
                <td colspan='3' style='width: 100%'>
                    <div class="documentation-option-description property-content" style="display: none;">
                        <p>
                           This event is triggered when the jqxDataTable binding is completed.
                           *Bind to that event before the jqxDataTable's initialization. Otherwise, if you are populating the widget from a local data source and bind to <code>bindingComplete</code> after the initialization, the event could be already raised when you attach an event handler to it. 
                        </p>
                        <h4>
                            Code examples</h4>
                        <p>
                            Bind to the <code>bindingComplete</code> event by type: jqxDataTable.
                        </p>
                        <pre><code>$('#dataTable').on('bindingComplete', function (event) { // Some code here. }); </code></pre>
                                 <div style="padding-bottom:5px;">
  <em>Try it:</em> <a target="_blank" href="http://jsfiddle.net/jqwidgets/xr6fj/"> Bind to the bindingComplete event by type: jqxDataTable.</a></div>
                    </div>
                </td>
            </tr>
           <tr>
                <td class="documentation-option-type-click">
                    <span id='Span108'>cellBeginEdit</span>
                </td>
                <td>
                    <span>Event</span>
                </td>
                <td>
                </td>
            </tr>
            <tr>
                <td colspan='3' style='width: 100%'>
                    <div class="documentation-option-description property-content" style="display: none;">
                        <p>
                           This is triggered when a cell edit begins. Note: To turn on cell editing, you should set the <code>editSettings</code> property and make sure that its <code>editSingleCell</code> sub property is set to <code>true</code>.
                        </p>
                        <h4>
                            Code examples</h4>
                        <p>
                            Bind to the <code>cellBeginEdit</code> event by type: jqxDataTable.
                        </p>
                        <pre><code>
$('#dataTable').on('cellBeginEdit', 
function (event)
{
    var args = event.args;
    // row key
    var rowKey = args.key;
    // row's index.
    var rowIndex = args.index;
    // row's data.
    var row = args.row;
    // row's index in the data source.
    var rowBoundIndex = args.boundIndex;
    // column's data field.
    var columnDataField = args.dataField;
    // column's display field.
    var columnDisplayField = args.displayField;
    // cell's value.
    var value = args.value;
});
                         </code></pre>
                          <div style="padding-bottom:5px;">
  <em>Try it:</em> <a target="_blank" href="http://jsfiddle.net/jqwidgets/yTx7z/"> Bind to the cellBeginEdit event by type: jqxDataTable.</a></div>
                    </div>
                </td>
            </tr>
            <tr>
                <td class="documentation-option-type-click">
                    <span id='Span109'>cellEndEdit</span>
                </td>
                <td>
                    <span>Event</span>
                </td>
                <td>
                </td>
            </tr>
            <tr>
                <td colspan='3' style='width: 100%'>
                                  <div class="documentation-option-description property-content" style="display: none;">
                        <p>
                           This is triggered when a cell edit ends. Note: To turn on cell editing, you should set the <code>editSettings</code> property and make sure that its <code>editSingleCell</code> sub property is set to <code>true</code>.
                        </p>
                        <h4>
                            Code examples</h4>
                        <p>
                            Bind to the <code>cellEndEdit</code> event by type: jqxDataTable.
                        </p>
                        <pre><code>
$('#dataTable').on('cellEndEdit', 
function (event)
{
    var args = event.args;
    // row key
    var rowKey = args.key;
    // row's index.
    var rowIndex = args.index;
    // row's data.
    var row = args.row;
    // row's index in the data source.
    var rowBoundIndex = args.boundIndex;
    // column's data field.
    var columnDataField = args.dataField;
    // column's display field.
    var columnDisplayField = args.displayField;
    // cell's value.
    var value = args.value;
});
                         </code></pre>
                          <div style="padding-bottom:5px;">
  <em>Try it:</em> <a target="_blank" href="http://jsfiddle.net/jqwidgets/yTx7z/"> Bind to the cellEndEdit event by type: jqxDataTable.</a></div>
                    </div>
                </td>
            </tr>
            <tr>
                <td class="documentation-option-type-click">
                    <span id='Span70'>cellValueChanged</span>
                </td>
                <td>
                    <span>Event</span>
                </td>
                <td>
                </td>
            </tr>
            <tr>
                <td colspan='3' style='width: 100%'>
                    <div class="documentation-option-description property-content" style="display: none;">
                        <p>
                           This event is triggered when a cell value is changed.
                        </p>
                        <h4>
                            Code examples</h4>
                        <p>
                            Bind to the <code>cellValueChanged</code> event by type: jqxDataTable.
                        </p>
                        <pre><code>
$('#dataTable').on('cellValueChanged', 
function (event)
{
    // event args.
    var args = event.args;
    // cell value.
    var value = args.value;
    // old cell value.
    var oldValue = args.oldValue;
    // row data.
    var row = args.row;
    // row index.
    var index = args.index;
    // row's data bound index.
    var boundIndex = args.boundIndex;
    // row key.
    var rowKey = args.key;
    // column data field.
    var dataField = args.dataField;
});
                         </code></pre>
                         <div style="padding-bottom:5px;">
  <em>Try it:</em> <a target="_blank" href="http://jsfiddle.net/jqwidgets/TmLnQ/"> Bind to the cellValueChanged event by type: jqxDataTable.</a></div>
                    </div>
                </td>
            </tr>
            <tr>
                <td class="documentation-option-type-click">
                    <span id='Span101'>columnResized</span>
                </td>
                <td>
                    <span>Event</span>
                </td>
                <td>
                </td>
            </tr>
            <tr>
                <td colspan='3' style='width: 100%'>
                    <div class="documentation-option-description property-content" style="display: none;">
                        <p>
                           This event is triggered when a column is resized.
                        </p>
                        <h4>
                            Code examples</h4>
                        <p>
                            Bind to the <code>columnResized</code> event by type: jqxDataTable.
                        </p>
                        <pre><code>
$('#dataTable').on('columnResized', 
function (event)
{
    // event args.
    var args = event.args;
    // column data field.
    var dataField = args.dataField;
    // old width.
    var oldWidth = args.oldWidth;
    // new width.
    var newWidth = args.newWidth;
});
                         </code></pre>
                         <div style="padding-bottom:5px;">
  <em>Try it:</em> <a target="_blank" href="http://jsfiddle.net/jqwidgets/96LP7/"> Bind to the columnResized event by type: jqxDataTable.</a></div>
                    </div>
                </td>
            </tr>
            <tr>
                <td class="documentation-option-type-click">
                    <span id='Span102'>columnReordered</span>
                </td>
                <td>
                    <span>Event</span>
                </td>
                <td>
                </td>
            </tr>
            <tr>
                <td colspan='3' style='width: 100%'>
                    <div class="documentation-option-description property-content" style="display: none;">
                        <p>
                           This event is triggered when the column's order is changed.
                        </p>
                        <h4>
                            Code examples</h4>
                        <p>
                            Bind to the <code>columnReordered</code> event by type: jqxDataTable.
                        </p>
                        <pre><code>
$('#dataTable').on('columnReordered', 
function (event)
{
    // event args.
    var args = event.args;
    // column data field.
    var dataField = args.dataField;
    // old index.
    var oldIndex = args.oldIndex;
    // new index.
    var newIndex = args.newIndex;
});
                         </code></pre>
                         <div style="padding-bottom:5px;">
  <em>Try it:</em> <a target="_blank" href="http://jsfiddle.net/jqwidgets/xmTwt/"> Bind to the columnReordered event by type: jqxDataTable.</a></div>
                    </div>
                </td>
            </tr>
            <tr>
                <td class="documentation-option-type-click">
                    <span id='Span11'>sort</span>
                </td>
                <td>
                    <span>Event</span>
                </td>
                <td>
                </td>
            </tr>
            <tr>
                <td colspan='3' style='width: 100%'>
                    <div class="documentation-option-description property-content" style="display: none;">
                        <p>
                           This event is triggered when the jqxDataTable sort order or sort column is changed.
                        </p>
                        <h4>
                            Code examples</h4>
                        <p>
                            Bind to the <code>sort</code> event by type: jqxDataTable.
                        </p>
                        <pre><code>
$('#dataTable').on('sort', function (event) { 
    var args = event.args; 
    // column's data field.
    var sortcolumn = args.sortcolumn; 
    // sort order.  { 'ascending': true or false, 'descending': true or false }
    var sortdirection = args.sortdirection;
});
                        </code></pre>
                             <div style="padding-bottom:5px;">
  <em>Try it:</em> <a target="_blank" href="http://jsfiddle.net/jqwidgets/4zD46/"> Bind to the sort event by type: jqxDataTable.</a></div>
                    </div>
                </td>
            </tr>
            <tr>
                <td class="documentation-option-type-click">
                    <span id='Span12'>filter</span>
                </td>
                <td>
                    <span>Event</span>
                </td>
                <td>
                </td>
            </tr>
            <tr>
                <td colspan='3' style='width: 100%'>
                    <div class="documentation-option-description property-content" style="display: none;">
                        <p>
                           This event is triggered when the jqxDataTable's rows filter is changed.
                        </p>
                        <h4>
                            Code examples</h4>
                        <p>
                            Bind to the <code>filter</code> event by type: jqxDataTable.
                        </p>
                        <pre><code>
$('#dataTable').on('filter',
function (event)
{
    var args = event.args;
    // array of filters. Each filter in that array has 2 members - "datafield" and "filter". "datafield" is the filter column's bound field, 
    // "filter" is an object with key/value pairs which represents a filter group applied to a column. It has a "getfilters" method which returns an Array of the individual filters.
    // each individual filter has the following members: "condition", "value", "type" and "operator".
    // For more information about "condition" see the "localization" property. 
    // "type" could be "stringfilter", "numberfilter", "datefilter" or "booleanfilter".
    // "operator" could be "0" or "1" depending on the relation between the filter with the other filters within the filter group. 
    // "value" represents the filter's value.
    var filters = args.filters;
});
                         </code></pre>
                          <div style="padding-bottom:5px;">
  <em>Try it:</em> <a target="_blank" href="http://jsfiddle.net/jqwidgets/uFc3B/"> Bind to the filter event by type: jqxDataTable.</a></div>
                    </div>
                </td>
            </tr>
            <tr>
                <td class="documentation-option-type-click">
                    <span id='Span13'>pageChanged</span>
                </td>
                <td>
                    <span>Event</span>
                </td>
                <td>
                </td>
            </tr>
            <tr>
                <td colspan='3' style='width: 100%'>
                    <div class="documentation-option-description property-content" style="display: none;">
                        <p>
                           This is triggered when the jqxDataTable's current page is changed.
                        </p>
                        <h4>
                            Code examples</h4>
                        <p>
                            Bind to the <code>pageChanged</code> event by type: jqxDataTable.
                        </p>
                        <pre><code>
$('#dataTable').on('pageChanged', 
function (event)
{
    // event args.
    var args = event.args;
    // page num.
    var pageNum = args.pagenum;
    // old page num.
    var oldPageNum = args.oldpagenum;
    // page size.
    var pageSize = args.pagesize;
});
                         </code></pre>
                          <div style="padding-bottom:5px;">
  <em>Try it:</em> <a target="_blank" href="http://jsfiddle.net/jqwidgets/vWQ5T/"> Bind to the pageChanged event by type: jqxDataTable.</a></div>
                    </div>
                </td>
            </tr>
            <tr>
                <td class="documentation-option-type-click">
                    <span id='Span62'>pageSizeChanged</span>
                </td>
                <td>
                    <span>Event</span>
                </td>
                <td>
                </td>
            </tr>
            <tr>
                <td colspan='3' style='width: 100%'>
                    <div class="documentation-option-description property-content" style="display: none;">
                        <p>
                           This is triggered when the jqxDataTable's page size is changed.
                        </p>
                        <h4>
                            Code examples</h4>
                        <p>
                            Bind to the <code>pageSizeChanged</code> event by type: jqxDataTable.
                        </p>
                        <pre><code>
$('#dataTable').on('pageSizeChanged', 
function (event)
{
    // event args.
    var args = event.args;
    // page num.
    var pageNum = args.pagenum;
    // old page size.
    var oldPageSize = args.oldpagesize;
    // page size.
    var pageSize = args.pagesize;
});
                         </code></pre>
                           <div style="padding-bottom:5px;">
  <em>Try it:</em> <a target="_blank" href="http://jsfiddle.net/jqwidgets/M3DzJ/"> Bind to the pageSizeChanged event by type: jqxDataTable.</a></div>
                    </div>
                </td>
            </tr>
            <tr>
                <td class="documentation-option-type-click">
                    <span id='Span64'>rowClick</span>
                </td>
                <td>
                    <span>Event</span>
                </td>
                <td>
                </td>
            </tr>
            <tr>
                <td colspan='3' style='width: 100%'>
                    <div class="documentation-option-description property-content" style="display: none;">
                        <p>
                           This is triggered when a row is clicked.
                        </p>
                        <h4>
                            Code examples</h4>
                        <p>
                            Bind to the <code>rowClick</code> event by type: jqxDataTable.
                        </p>
                        <pre><code>
$('#dataTable').on('rowClick', 
function (event)
{
    // event args.
    var args = event.args;
    // row data.
    var row = args.row;
    // row index.
    var index = args.index;
    // row's data bound index.
    var boundIndex = args.boundIndex; 
    // row key.
    var key = args.key;
    // data field
    var dataField = args.dataField;
    // original click event.
    var clickEvent = args.originalEvent;
});
                         </code></pre>
                            <div style="padding-bottom:5px;">
  <em>Try it:</em> <a target="_blank" href="http://jsfiddle.net/jqwidgets/aD8Md/"> Bind to the rowClick event by type: jqxDataTable.</a></div>
                    </div>
                </td>
            </tr>
            <tr>
                <td class="documentation-option-type-click">
                    <span id='Span65'>rowDoubleClick</span>
                </td>
                <td>
                    <span>Event</span>
                </td>
                <td>
                </td>
            </tr>
            <tr>
                <td colspan='3' style='width: 100%'>
                    <div class="documentation-option-description property-content" style="display: none;">
                        <p>
                           This is triggered when a row is double-clicked.
                        </p>
                        <h4>
                            Code examples</h4>
                        <p>
                            Bind to the <code>rowDoubleClick</code> event by type: jqxDataTable.
                        </p>
                        <pre><code>
$('#dataTable').on('rowDoubleClick', 
function (event)
{
    // event args.
    var args = event.args;
    // row data.
    var row = args.row;
    // row index.
    var index = args.index;
    // row's data bound index.
    var boundIndex = args.boundIndex; 
    // row key.
    var key = args.key;
    // data field
    var dataField = args.dataField;
    // original double click event.
    var clickEvent = args.originalEvent;
});
                         </code></pre>
                         <div style="padding-bottom:5px;">
  <em>Try it:</em> <a target="_blank" href="http://jsfiddle.net/jqwidgets/aut5q/"> Bind to the rowDoubleClick event by type: jqxDataTable.</a></div>
                    </div>
                </td>
            </tr>
            <tr>
                <td class="documentation-option-type-click">
                    <span id='Span66'>rowSelect</span>
                </td>
                <td>
                    <span>Event</span>
                </td>
                <td>
                </td>
            </tr>
            <tr>
                <td colspan='3' style='width: 100%'>
                    <div class="documentation-option-description property-content" style="display: none;">
                        <p>
                           This is triggered when a row is selected.
                        </p>
                        <h4>
                            Code examples</h4>
                        <p>
                            Bind to the <code>rowSelect</code> event by type: jqxDataTable.
                        </p>
                        <pre><code>
$('#dataTable').on('rowSelect', 
function (event)
{
    // event args.
    var args = event.args;
    // row data.
    var row = args.row;
    // row index.
    var index = args.index;
    // row's data bound index.
    var boundIndex = args.boundIndex;
    // row key.
    var key = args.key;
});
                         </code></pre>
                         <div style="padding-bottom:5px;">
  <em>Try it:</em> <a target="_blank" href="http://jsfiddle.net/jqwidgets/mLmkX/"> Bind to the rowSelect event by type: jqxDataTable.</a></div>
                    </div>
                </td>
            </tr>
            <tr>
                <td class="documentation-option-type-click">
                    <span id='Span67'>rowUnselect</span>
                </td>
                <td>
                    <span>Event</span>
                </td>
                <td>
                </td>
            </tr>
            <tr>
                <td colspan='3' style='width: 100%'>
                    <div class="documentation-option-description property-content" style="display: none;">
                        <p>
                           This is triggered when a row is unselected.
                        </p>
                        <h4>
                            Code examples</h4>
                        <p>
                            Bind to the <code>rowUnselect</code> event by type: jqxDataTable.
                        </p>
                        <pre><code>
$('#dataTable').on('rowUnselect', 
function (event)
{
    // event args.
    var args = event.args;
    // row data.
    var row = args.row;
    // row index.
    var index = args.index;
    // row's data bound index.
    var boundIndex = args.boundIndex;
    // row key.
    var key = args.key;
});
                         </code></pre>
                         <div style="padding-bottom:5px;">
  <em>Try it:</em> <a target="_blank" href="http://jsfiddle.net/jqwidgets/SRPds/"> Bind to the rowUnselect event by type: jqxDataTable.</a></div>
                    </div>
                </td>
            </tr>
            <tr>
                <td class="documentation-option-type-click">
                    <span id='Span68'>rowBeginEdit</span>
                </td>
                <td>
                    <span>Event</span>
                </td>
                <td>
                </td>
            </tr>
            <tr>
                <td colspan='3' style='width: 100%'>
                    <div class="documentation-option-description property-content" style="display: none;">
                        <p>
                           This is triggered when a row edit begins.
                        </p>
                        <h4>
                            Code examples</h4>
                        <p>
                            Bind to the <code>rowBeginEdit</code> event by type: jqxDataTable.
                        </p>
                        <pre><code>
$('#dataTable').on('rowBeginEdit', 
function (event)
{
    // event args.
    var args = event.args;
    // row data.
    var row = args.row;
    // row index.
    var index = args.index;
    // row's data bound index.
    var boundIndex = args.boundIndex; 
    // row key.
    var key = args.key;
});
                         </code></pre>
                          <div style="padding-bottom:5px;">
  <em>Try it:</em> <a target="_blank" href="http://jsfiddle.net/jqwidgets/uSuE7/"> Bind to the rowBeginEdit event by type: jqxDataTable.</a></div>
                    </div>
                </td>
            </tr>
            <tr>
                <td class="documentation-option-type-click">
                    <span id='Span69'>rowEndEdit</span>
                </td>
                <td>
                    <span>Event</span>
                </td>
                <td>
                </td>
            </tr>
            <tr>
                <td colspan='3' style='width: 100%'>
                    <div class="documentation-option-description property-content" style="display: none;">
                        <p>
                           This is triggered when a row edit ends.
                        </p>
                        <h4>
                            Code examples</h4>
                        <p>
                            Bind to the <code>rowEndEdit</code> event by type: jqxDataTable.
                        </p>
                        <pre><code>
$('#dataTable').on('rowEndEdit', 
function (event)
{
    // event args.
    var args = event.args;
    // row data.
    var row = args.row;
    // row index.
    var index = args.index;
    // row's data bound index.
    var boundIndex = args.boundIndex;
    // row key.
    var key = args.key;
});
                         </code></pre>
                         <div style="padding-bottom:5px;">
  <em>Try it:</em> <a target="_blank" href="http://jsfiddle.net/jqwidgets/LNVWu/"> Bind to the rowEndEdit event by type: jqxDataTable.</a></div>
                    </div>
                </td>
            </tr>
            <tr>
                <td class="documentation-option-type-click">
                    <span id='Span103'>rowExpand</span>
                </td>
                <td>
                    <span>Event</span>
                </td>
                <td>
                </td>
            </tr>
            <tr>
                <td colspan='3' style='width: 100%'>
                    <div class="documentation-option-description property-content" style="display: none;">
                        <p>
                           This is triggered when a row is expanded.
                        </p>
                        <h4>
                            Code examples</h4>
                        <p>
                            Bind to the <code>rowExpand</code> event by type: jqxDataTable.
                        </p>
                        <pre><code>
$('#dataTable').on('rowExpand', 
function (event)
{
    // event args.
    var args = event.args;
    // row data.
    var row = args.row;
    // row index.
    var index = args.index;
    // row's data bound index.
    var boundIndex = args.boundIndex; 
    // row key.
    var key = args.key;
});
                         </code></pre>
                         <div style="padding-bottom:5px;">
  <em>Try it:</em> <a target="_blank" href="http://jsfiddle.net/jqwidgets/U2pss/"> Bind to the rowExpand event by type: jqxDataTable.</a></div>
                    </div>
                </td>
            </tr>
            <tr>
                <td class="documentation-option-type-click">
                    <span id='Span104'>rowCollapse</span>
                </td>
                <td>
                    <span>Event</span>
                </td>
                <td>
                </td>
            </tr>
            <tr>
                <td colspan='3' style='width: 100%'>
                    <div class="documentation-option-description property-content" style="display: none;">
                        <p>
                           This is triggered when a row is collapsed.
                        </p>
                        <h4>
                            Code examples</h4>
                        <p>
                            Bind to the <code>rowCollapse</code> event by type: jqxDataTable.
                        </p>
                        <pre><code>
$('#dataTable').on('rowCollapse', 
function (event)
{
    // event args.
    var args = event.args;
    // row data.
    var row = args.row;
    // row index.
    var index = args.index;
    // row's data bound index.
    var boundIndex = args.boundIndex; 
    // row key.
    var key = args.key;
});
                         </code></pre>
                         <div style="padding-bottom:5px;">
  <em>Try it:</em> <a target="_blank" href="http://jsfiddle.net/jqwidgets/y5k5T/"> Bind to the rowCollapse event by type: jqxDataTable.</a></div>
                    </div>
                </td>
            </tr>
            <tr>
                <td colspan='3' style='width: 100%'>
                    <h2 class="documentation-top-header">
                        Methods</h2>
                </td>
            </tr>
            <tr>
                <td class="documentation-option-type-click">
                    <span id='Span37'>addRow</span>
                </td>
                <td>
                    <span>Method</span>
                </td>
                <td>
                </td>
            </tr>
            <tr>
                <td colspan='3' style='width: 100%'>
                    <div class="documentation-option-description property-content" style="display: none;">
                        <p>
                           Adds a new row. For synchronization with a server, please look also the jqxDataAdapter plug-in's help documentation.</p>
                        List of parameters:
                        <ul>
                            <li>Row Key/ID - unique ID is expected. If null is passed, the jqxDataTable will generate an unique.</li>
                            <li>Row Data - Object with Key/Value pairs. To add an empty row, pass {}.</li>
                            <li>Row Position - string with two possible values - "last" and "first". By default "last" is used.</li>
                        </ul>
                        <h4>
                            Code example</h4>
                        <p>
                            Invoke the <code>addRow</code> method.
                        </p>
                        <pre><code>$("#dataTable").jqxDataTable('addRow', null, {});</code></pre>
                              <div style="padding-bottom:5px;">
  <em>Try it:</em> <a target="_blank" href="http://jsfiddle.net/jqwidgets/4zWKv/"> adds a new row in the jqxDataTable.</a></div>
                    </div>
                </td>
            </tr>
            <tr>
                <td class="documentation-option-type-click">
                    <span id='Span14'>addFilter</span>
                </td>
                <td>
                    <span>Method</span>
                </td>
                <td>
                </td>
            </tr>
            <tr>
                <td colspan='3' style='width: 100%'>
                    <div class="documentation-option-description property-content" style="display: none;">
                        <p>
                           Adds a new filter.</p>
                        List of parameters:
                        <ul>
                            <li>Data Field - column's data field.</li>
                            <li>filter - a filter group.
<br /><br />
Definitions:
<br /><br />
<ul>
<li>
  filterGroup - The filter group represents a group of one or more filters.
  <h4>Code Example</h4> 
  // creates a new filter group. 
   var filterGroup = new $.jqx.filter();
</li>
<li>
	filter - a filter added to the filter group. Each filter has value and condition. The filter condition specifies the way the filter will evaluate each value with the filter's value. The filter condition depends on the filter’s type. 
	To create a filter, use the <code>createfilter</code> method of the filterGroup. It has 3 parameters - filter type("stringfilter", "datefilter", "booleanfilter" and "numericfilter"), filter value and filter's condition.
	<h4>Code Example</h4>
	<pre><code>
var filtervalue = 'Beate';
var filtercondition = 'contains';
// possible conditions for string filter: 'EMPTY', 'NOT_EMPTY', 'CONTAINS', 'CONTAINS_CASE_SENSITIVE',
// 'DOES_NOT_CONTAIN', 'DOES_NOT_CONTAIN_CASE_SENSITIVE', 'STARTS_WITH', 'STARTS_WITH_CASE_SENSITIVE',
// 'ENDS_WITH', 'ENDS_WITH_CASE_SENSITIVE', 'EQUAL', 'EQUAL_CASE_SENSITIVE', 'NULL', 'NOT_NULL'
// possible conditions for numeric filter: 'EQUAL', 'NOT_EQUAL', 'LESS_THAN', 'LESS_THAN_OR_EQUAL', 'GREATER_THAN', 'GREATER_THAN_OR_EQUAL', 'NULL', 'NOT_NULL'
// possible conditions for date filter: 'EQUAL', 'NOT_EQUAL', 'LESS_THAN', 'LESS_THAN_OR_EQUAL', 'GREATER_THAN', 'GREATER_THAN_OR_EQUAL', 'NULL', 'NOT_NULL'                         
var filter1 = filtergroup.createfilter('stringfilter', filtervalue, filtercondition);
filtervalue = 'Andrew';
filtercondition = 'starts_with';
var filter2 = filtergroup.createfilter('stringfilter', filtervalue, filtercondition);
</code></pre>
</li>
<li>
	filter operator - determines the relation between filters within a filter group. The operator could be 0(AND) or 1(OR).
	In the code example below, we added two filters to a filter group with operator ‘or’. By doing that, each value will be evaluated by <code>filter1</code> and <code>filter2</code> and the evaluation result will be true, if the <code>filter1</code> evaluation result is true or <code>filter2</code> evaluation result is true.
<pre><code>
var filter_or_operator = 1;
filtergroup.addfilter(filter_or_operator, filter1);
filtergroup.addfilter(filter_or_operator, filter2);
</code></pre>
</li>
                        </ul>
                        <h4>
                            Code example</h4>
                        <p>
                            Invoke the <code>addFilter</code> method.
                        </p>
<pre><code>
var filtertype = 'stringfilter';
// create a new group of filters.
var filtergroup = new $.jqx.filter();
var filter_or_operator = 1;
var filtervalue = "Empty";
var filtercondition = 'equal';
var filter = filtergroup.createfilter(filtertype, filtervalue, filtercondition);
filtergroup.addfilter(filter_or_operator, filter);
// add the filters.
$("#dataTable").jqxDataTable('addFilter', dataField, filtergroup);
// apply the filters.
$("#dataTable").jqxDataTable('applyFilters');
</code></pre>    
                                         <div style="padding-bottom:5px;">
  <em>Try it:</em> <a target="_blank" href="http://jsfiddle.net/jqwidgets/g5QTX/"> adds a new filter in the jqxDataTable.</a></div>           
                     </div>

                </td>
            </tr>
            <tr>
                <td class="documentation-option-type-click">
                    <span id='Span15'>applyFilters</span>
                </td>
                <td>
                    <span>Method</span>
                </td>
                <td>
                </td>
            </tr>
            <tr>
                <td colspan='3' style='width: 100%'>
                    <div class="documentation-option-description property-content" style="display: none;">
                        <p>
                           Applies the added/removed filters.</p>
                        <h4>
                            Code example</h4>
                        <p>
                            Invoke the <code>applyFilters</code> method.
                        </p>
                        <pre><code>$("#dataTable").jqxDataTable('applyFilters');</code></pre>
                                  <div style="padding-bottom:5px;">
  <em>Try it:</em> <a target="_blank" href="http://jsfiddle.net/jqwidgets/8KSr7/"> apply a new filter in the jqxDataTable.</a></div>  
                    </div>
                </td>
            </tr>
            <tr>
                <td class="documentation-option-type-click">
                    <span id='Span16'>beginUpdate</span>
                </td>
                <td>
                    <span>Method</span>
                </td>
                <td>
                </td>
            </tr>
            <tr>
                <td colspan='3' style='width: 100%'>
                    <div class="documentation-option-description property-content" style="display: none;">
                        <p>
                           Begins an update and stops all refreshes.</p>
                        <h4>
                            Code example</h4>
                        <p>
                            Invoke the <code>beginUpdate</code> method.
                        </p>
                        <pre><code>$("#dataTable").jqxDataTable('beginUpdate');</code></pre>
                          <div style="padding-bottom:5px;">
  <em>Try it:</em> <a target="_blank" href="http://jsfiddle.net/jqwidgets/3H9Qj/"> begins the update of the jqxDataTable.</a></div> 
                    </div>
                </td>
            </tr>
            <tr>
                <td class="documentation-option-type-click">
                    <span id='Span17'>beginRowEdit</span>
                </td>
                <td>
                    <span>Method</span>
                </td>
                <td>
                </td>
            </tr>
            <tr>
                <td colspan='3' style='width: 100%'>
                    <div class="documentation-option-description property-content" style="display: none;">
                        <p>
                           Begins a row edit operation when <code>editable</code> is set to true.</p>
                        List of parameters:
                        <ul>
                            <li>row index.</li>
                        </ul>
                        <h4>
                            Code example</h4>
                        <p>
                            Invoke the <code>beginRowEdit</code> method.
                        </p>
                        <pre><code>$("#dataTable").jqxDataTable('beginRowEdit',0);</code></pre>
                           <div style="padding-bottom:5px;">
  <em>Try it:</em> <a target="_blank" href="http://jsfiddle.net/jqwidgets/aKZm6/"> begins the row edit of the jqxDataTable.</a></div> 
                    </div>
                </td>
            </tr>
           <tr>
                <td class="documentation-option-type-click">
                    <span id='Span110'>beginCellEdit</span>
                </td>
                <td>
                    <span>Method</span>
                </td>
                <td>
                </td>
            </tr>
            <tr>
                <td colspan='3' style='width: 100%'>
                    <div class="documentation-option-description property-content" style="display: none;">
                        <p>
                           Begins a cell edit operation when <code>editable</code> is set to true.</p>
                        List of parameters:
                        <ul>
                            <li>row index.</li>
                            <li>data field - column's data field.</li>
                        </ul>
                        <h4>
                            Code example</h4>
                        <p>
                            Invoke the <code>beginCellEdit</code> method.
                        </p>
                        <pre><code>$("#dataTable").jqxDataTable('beginCellEdit',0, 'FirstName');</code></pre>
                           <div style="padding-bottom:5px;">
  <em>Try it:</em> <a target="_blank" href="http://jsfiddle.net/jqwidgets/8M4Vx/"> begins the cell edit of the jqxDataTable.</a></div> 
                    </div>
                </td>
            </tr>
            <tr>
                <td class="documentation-option-type-click">
                    <span id='Span18'>clearSelection</span>
                </td>
                <td>
                    <span>Method</span>
                </td>
                <td>
                </td>
            </tr>
            <tr>
                <td colspan='3' style='width: 100%'>
                    <div class="documentation-option-description property-content" style="display: none;">
                        <p>
                           Clears the selection.</p>
                        <h4>
                            Code example</h4>
                        <p>
                            Invoke the <code>clearSelection</code> method.
                        </p>
                        <pre><code>$("#dataTable").jqxDataTable('clearSelection');</code></pre>
                            <div style="padding-bottom:5px;">
  <em>Try it:</em> <a target="_blank" href="http://jsfiddle.net/jqwidgets/nJFYC/"> clears the selection of the jqxDataTable.</a></div> 
                    </div>
                </td>
            </tr>
            <tr>
                <td class="documentation-option-type-click">
                    <span id='Span19'>clearFilters</span>
                </td>
                <td>
                    <span>Method</span>
                </td>
                <td>
                </td>
            </tr>
            <tr>
                <td colspan='3' style='width: 100%'>
                    <div class="documentation-option-description property-content" style="display: none;">
                        <p>
                           Clears the filters.</p>
                        <h4>
                            Code example</h4>
                        <p>
                            Invoke the <code>clearFilters</code> method.
                        </p>
                        <pre><code>$("#dataTable").jqxDataTable('clearFilters');</code></pre>
                          <div style="padding-bottom:5px;">
  <em>Try it:</em> <a target="_blank" href="http://jsfiddle.net/jqwidgets/kQABf/"> clears the filter of the jqxDataTable.</a></div> 
                    </div>
                </td>
            </tr>
            <tr>
                <td class="documentation-option-type-click">
                    <span id='Span20'>clear</span>
                </td>
                <td>
                    <span>Method</span>
                </td>
                <td>
                </td>
            </tr>
            <tr>
                <td colspan='3' style='width: 100%'>
                    <div class="documentation-option-description property-content" style="display: none;">
                        <p>
                           Clears the jqxDataTable.</p>
                        <h4>
                            Code example</h4>
                        <p>
                            Invoke the <code>clear</code> method.
                        </p>
                        <pre><code>$("#dataTable").jqxDataTable('clear');</code></pre>
                             <div style="padding-bottom:5px;">
  <em>Try it:</em> <a target="_blank" href="http://jsfiddle.net/jqwidgets/MPNU6/"> clears  the jqxDataTable.</a></div> 
                    </div>
                </td>
            </tr>
            <tr>
                <td class="documentation-option-type-click">
                    <span id='Span21'>destroy</span>
                </td>
                <td>
                    <span>Method</span>
                </td>
                <td>
                </td>
            </tr>
            <tr>
                <td colspan='3' style='width: 100%'>
                    <div class="documentation-option-description property-content" style="display: none;">
                        <p>
                           Destroys jqxDataTable and removes it from the DOM.</p>
                        <h4>
                            Code example</h4>
                        <p>
                            Invoke the <code>destroy</code> method.
                        </p>
                        <pre><code>$("#dataTable").jqxDataTable('destroy');</code></pre>
                             <div style="padding-bottom:5px;">
  <em>Try it:</em> <a target="_blank" href="http://jsfiddle.net/jqwidgets/zxLBk/"> destroy  the jqxDataTable.</a></div> 
                    </div>
                </td>
            </tr>
            <tr>
                <td class="documentation-option-type-click">
                    <span id='Span59'>deleteRow</span>
                </td>
                <td>
                    <span>Method</span>
                </td>
                <td>
                </td>
            </tr>
            <tr>
                <td colspan='3' style='width: 100%'>
                    <div class="documentation-option-description property-content" style="display: none;">
                        <p>
                           Deletes a row. For synchronization with a server, please look also the jqxDataAdapter plug-in's help documentation.</p>
                        List of parameters:
                        <ul>
                            <li>row index.</li>
                        </ul>
                        <h4>
                            Code example</h4>
                        <p>
                            Invoke the <code>deleteRow</code> method.
                        </p>
                        <pre><code>$("#dataTable").jqxDataTable('deleteRow', 0);</code></pre>
                        <div style="padding-bottom:5px;">
  <em>Try it:</em> <a target="_blank" href="http://jsfiddle.net/jqwidgets/PtEwH/"> delete a row in  the jqxDataTable.</a></div> 
                    </div>
                </td>
            </tr>
            <tr>
                <td class="documentation-option-type-click">
                    <span id='Span71'>endUpdate</span>
                </td>
                <td>
                    <span>Method</span>
                </td>
                <td>
                </td>
            </tr>
            <tr>
                <td colspan='3' style='width: 100%'>
                    <div class="documentation-option-description property-content" style="display: none;">
                        <p>
                           Ends the update and resumes all refreshes.</p>
                        <h4>
                            Code example</h4>
                        <p>
                            Invoke the <code>endUpdate</code> method.
                        </p>
                        <pre><code>$("#dataTable").jqxDataTable('endUpdate');</code></pre>
                        <div style="padding-bottom:5px;">
  <em>Try it:</em> <a target="_blank" href="http://jsfiddle.net/jqwidgets/URC7E/"> ends the update of the jqxDataTable.</a></div> 
                    </div>
                </td>
            </tr>
            <tr>
                <td class="documentation-option-type-click">
                    <span id='Span72'>ensureRowVisible</span>
                </td>
                <td>
                    <span>Method</span>
                </td>
                <td>
                </td>
            </tr>
            <tr>
                <td colspan='3' style='width: 100%'>
                    <div class="documentation-option-description property-content" style="display: none;">
                        <p>
                           Moves the vertical scrollbar to a row index.</p>
                        List of parameters:
                        <ul>
                            <li>row index.</li>
                        </ul>
                        <h4>
                            Code example</h4>
                        <p>
                            Invoke the <code>ensureRowVisible</code> method.
                        </p>
                        <pre><code>$("#dataTable").jqxDataTable('ensureRowVisible', 20);</code></pre>
                           <div style="padding-bottom:5px;">
  <em>Try it:</em> <a target="_blank" href="http://jsfiddle.net/jqwidgets/LQsDb/"> ensures a row's vizibility in  the jqxDataTable.</a></div> 
                    </div>
                </td>
            </tr>
            <tr>
                <td class="documentation-option-type-click">
                    <span id='Span73'>endRowEdit</span>
                </td>
                <td>
                    <span>Method</span>
                </td>
                <td>
                </td>
            </tr>
            <tr>
                <td colspan='3' style='width: 100%'>
                    <div class="documentation-option-description property-content" style="display: none;">
                        <p>
                           Ends a row edit when <code>editable</code> is set to true. </p>
                        List of parameters:
                        <ul>
                            <li>row index.</li>
                            <li>boolean flag which determines whether the changes would be canceled or confirmed.</li>
                        </ul>
                        <h4>
                            Code example</h4>
                        <p>
                            Invoke the <code>endRowEdit</code> method.
                        </p>
                        <pre><code>$("#dataTable").jqxDataTable('endRowEdit', 0);</code></pre>
                        <p>
                            Invoke the <code>endRowEdit</code> method and cancel changes.
                        </p>
                        <pre><code>$("#dataTable").jqxDataTable('endRowEdit', 0, true);</code></pre>
                                 <div style="padding-bottom:5px;">
  <em>Try it:</em> <a target="_blank" href="http://jsfiddle.net/jqwidgets/q9w55/"> Invoke the endRowEdit method of the  jqxDataTable.</a></div> 

                    </div>
                </td>
            </tr>
           <tr>
                <td class="documentation-option-type-click">
                    <span id='Span111'>endCellEdit</span>
                </td>
                <td>
                    <span>Method</span>
                </td>
                <td>
                </td>
            </tr>
            <tr>
                <td colspan='3' style='width: 100%'>
                    <div class="documentation-option-description property-content" style="display: none;">
                        <p>
                           Ends a cell edit operation when <code>editable</code> is set to true.</p>
                        List of parameters:
                        <ul>
                            <li>row index.</li>
                            <li>data field - column's data field.</li>                          
                            <li>boolean flag which determines whether the changes would be canceled or confirmed.</li>
                        </ul>
                        <h4>
                            Code example</h4>
                        <p>
                            Invoke the <code>endCellEdit</code> method.
                        </p>
                        <pre><code>$("#dataTable").jqxDataTable('endCellEdit',0, 'FirstName');</code></pre>
                           <div style="padding-bottom:5px;">
  <em>Try it:</em> <a target="_blank" href="http://jsfiddle.net/jqwidgets/vBNM2/"> ends the cell edit of the jqxDataTable.</a></div> 
                    </div>
                </td>
            </tr>
          <tr>
                <td class="documentation-option-type-click">
                    <span id='Span105'>exportData</span>
                </td>
                <td>
                    <span>Method</span>
                </td>
                <td>
                </td>
            </tr>
            <tr>
                <td colspan='3' style='width: 100%'>
                    <div class="documentation-option-description property-content" style="display: none;">
                          <p>
                           Exports jqxDataTable's data to Excel, HTML, XML, JSON, CSV or TSV. See also the <code>exportSettings</code> property</p>
                        List of parameters:
                        <ul>
                            <li>Data Type - String which determines the export type. Possible values: 'xls', 'html', 'xml', 'json', 'csv', 'tsv'</li>
                        </ul>
                         <h4>
                            Code example</h4>
                        <p>
                            Invoke the <code>exportData</code> method.
                        </p>
                        <pre><code>$("#dataTable").jqxDataTable('exportData','xls');</code></pre>
                            <div style="padding-bottom:5px;">
  <em>Try it:</em> <a target="_blank" href="http://jsfiddle.net/jqwidgets/nR35Y/"> Invoke the exportData method of the  jqxDataTable.</a></div> 
                       <br />
                        Export to Excel works with the ExcelML format. ExcelML is XML-based file format. It complies to the <a href="http://msdn.microsoft.com/en-us/library/aa140066(office.10).aspx">Microsoft XMLSS specification</a> and is supported in Microsoft Office 2003 and later. 
                        <br />
                        * When you open export to Excel, you may receive the following message: "The file you are trying to open, 'file_name.xls', is in a different format than specified by the file extension. Verify that the file is not corrupted and is from a trusted source before opening this file. Do you want to open the file now?"
                        <br />
                        The reason of this warning message is explained in details in the following post: <a href="http://blogs.msdn.com/b/vsofficedeveloper/archive/2008/03/11/excel-2007-extension-warning.aspx">excel-2007-extension-warning.aspx</a>                    
                    </div>
                </td>
            </tr>
           <tr>
                <td class="documentation-option-type-click">
                    <span id='Span74'>focus</span>
                </td>
                <td>
                    <span>Method</span>
                </td>
                <td>
                </td>
            </tr>
            <tr>
                <td colspan='3' style='width: 100%'>
                    <div class="documentation-option-description property-content" style="display: none;">
                        <p>
                           Focus jqxDataTable.</p>
                        <h4>
                            Code example</h4>
                        <p>
                            Invoke the <code>focus</code> method.
                        </p>
                        <pre><code>$("#dataTable").jqxDataTable('focus');</code></pre>
                                       <div style="padding-bottom:5px;">
  <em>Try it:</em> <a target="_blank" href="http://jsfiddle.net/jqwidgets/V7KZP/">focus the  jqxDataTable.</a></div> 
                    </div>
                </td>
            </tr>
           <tr>
                <td class="documentation-option-type-click">
                    <span id='Span75'>getColumnProperty</span>
                </td>
                <td>
                    <span>Method</span>
                </td>
                <td>
                </td>
            </tr>
            <tr>
                <td colspan='3' style='width: 100%'>
                    <div class="documentation-option-description property-content" style="display: none;">
                        <p>
                           Gets a property value of a column.</p>
                        List of parameters:
                        <ul>
                            <li>data field - column's data field.</li>
                            <li>property name - determines the property's name.</li>
                        </ul>
                        <h4>
                            Code example</h4>
                        <p>
                            Invoke the <code>getColumnProperty</code> method.
                        </p>
                        <pre><code>$("#dataTable").jqxDataTable('getColumnProperty', 'firstName', 'width');</code></pre>
                            <div style="padding-bottom:5px;">
  <em>Try it:</em> <a target="_blank" href="http://jsfiddle.net/jqwidgets/BX4Mc/"> Invoke the getColumnProperty method of the  jqxDataTable.</a></div> 
                    </div>
                </td>
            </tr>
           <tr>
                <td class="documentation-option-type-click">
                    <span id='Span76'>goToPage</span>
                </td>
                <td>
                    <span>Method</span>
                </td>
                <td>
                </td>
            </tr>
            <tr>
                <td colspan='3' style='width: 100%'>
                    <div class="documentation-option-description property-content" style="display: none;">
                        <p>
                           Navigates to a page when <code>pageable</code> is set to true.</p>
                        List of parameters:
                        <ul>
                            <li>page index - a zero based index.</li>
                        </ul>
                        <h4>
                            Code example</h4>
                        <p>
                            Invoke the <code>goToPage</code> method.
                        </p>
                        <pre><code>$("#dataTable").jqxDataTable('goToPage', 2);</code></pre>
                          <div style="padding-bottom:5px;">
  <em>Try it:</em> <a target="_blank" href="http://jsfiddle.net/jqwidgets/2DgaF/"> Invoke the goToPage method of the  jqxDataTable.</a></div> 
                    </div>
                </td>
            </tr>
           <tr>
                <td class="documentation-option-type-click">
                    <span id='Span77'>goToPrevPage</span>
                </td>
                <td>
                    <span>Method</span>
                </td>
                <td>
                </td>
            </tr>
            <tr>
                <td colspan='3' style='width: 100%'>
                    <div class="documentation-option-description property-content" style="display: none;">
                        <p>
                           Navigates to a previous page when <code>pageable</code> is set to true.</p>
                        <h4>
                            Code example</h4>
                        <p>
                            Invoke the <code>goToPrevPage</code> method.
                        </p>
                        <pre><code>$("#dataTable").jqxDataTable('goToPrevPage');</code></pre>
                                <div style="padding-bottom:5px;">
  <em>Try it:</em> <a target="_blank" href="http://jsfiddle.net/jqwidgets/n7dhS/"> Invoke the goToPrevPage method of the  jqxDataTable.</a></div> 
                    </div>
                </td>
            </tr>
           <tr>
                <td class="documentation-option-type-click">
                    <span id='Span78'>goToNextPage</span>
                </td>
                <td>
                    <span>Method</span>
                </td>
                <td>
                </td>
            </tr>
            <tr>
                <td colspan='3' style='width: 100%'>
                    <div class="documentation-option-description property-content" style="display: none;">
                        <p>
                           Navigates to a next page when <code>pageable</code> is set to true.</p>
                        <h4>
                            Code example</h4>
                        <p>
                            Invoke the <code>goToNextPage</code> method.
                        </p>
                        <pre><code>$("#dataTable").jqxDataTable('goToNextPage');</code></pre>
                          <div style="padding-bottom:5px;">
  <em>Try it:</em> <a target="_blank" href="http://jsfiddle.net/jqwidgets/h25AY/"> Invoke the goToNextPage method of the  jqxDataTable.</a></div> 
                    </div>
                </td>
            </tr>
           <tr>
                <td class="documentation-option-type-click">
                    <span id='Span79'>getSelection</span>
                </td>
                <td>
                    <span>Method</span>
                </td>
                <td>
                </td>
            </tr>
            <tr>
                <td colspan='3' style='width: 100%'>
                    <div class="documentation-option-description property-content" style="display: none;">
                        <p>
                           Returns an array of selected rows.</p>
                        <h4>
                            Code example</h4>
                        <p>
                            Invoke the <code>getSelection</code> method.
                        </p>
                        <pre><code>$("#dataTable").jqxDataTable('getSelection');</code></pre>
                        <p>Invoke the <code>getSelection</code> and loop through the selected rows</p>
                        <pre><code>
var selection = $("#table").jqxDataTable('getSelection');
for (var i = 0; i < selection.length; i++) {
    // get a selected row.
	var rowData = selection[i];
}
                         </code></pre>
                          <div style="padding-bottom:5px;">
  <em>Try it:</em> <a target="_blank" href="http://jsfiddle.net/jqwidgets/h87dw/"> Invoke the getSelection method of the  jqxDataTable.</a></div> 
                    </div>
                </td>
            </tr>
           <tr>
                <td class="documentation-option-type-click">
                    <span id='Span80'>getRows</span>
                </td>
                <td>
                    <span>Method</span>
                </td>
                <td>
                </td>
            </tr>
            <tr>
                <td colspan='3' style='width: 100%'>
                    <div class="documentation-option-description property-content" style="display: none;">
                        <p>
                           Returns an array of all rows loaded in the widget.</p>
                        <h4>
                            Code example</h4>
                        <p>
                            Invoke the <code>getRows</code> method.
                        </p>
                        <pre><code>$("#dataTable").jqxDataTable('getRows');</code></pre>
                        <p>Invoke the <code>getRows</code> and loop through the rows</p>
                        <pre><code>
var rows = $("#table").jqxDataTable('getRows');
for (var i = 0; i < rows.length; i++) {
    // get a row.
	var rowData = rows[i];
}
                         </code></pre>
                          <div style="padding-bottom:5px;">
  <em>Try it:</em> <a target="_blank" href="http://jsfiddle.net/jqwidgets/vuJY9/"> Invoke the getRows method of the jqxDataTable.</a></div> 
                    </div>
                </td>
            </tr>
          <tr>
                <td class="documentation-option-type-click">
                    <span id='Span107'>getView</span>
                </td>
                <td>
                    <span>Method</span>
                </td>
                <td>
                </td>
            </tr>
            <tr>
                <td colspan='3' style='width: 100%'>
                    <div class="documentation-option-description property-content" style="display: none;">
                        <p>
                           Returns an array of all rows displayed in the view. This method takes into account the Sorting Order and returns the Filtered Set of Rows, if Filtering is applied. The method is different from getRows, because getRows returns a Rows array in their data binding order and that array is not affected by filtering and sorting.</p>
                        <h4>
                            Code example</h4>
                        <p>
                            Invoke the <code>getView</code> method.
                        </p>
                        <pre><code>$("#dataTable").jqxDataTable('getView');</code></pre>
                        <p>Invoke the <code>getView</code> and loop through the rows</p>
                        <pre><code>
var rows = $("#table").jqxDataTable('getView');
for (var i = 0; i < rows.length; i++) {
    // get a row.
	var rowData = rows[i];
}
                         </code></pre>
                          <div style="padding-bottom:5px;">
  <em>Try it:</em> <a target="_blank" href="http://jsfiddle.net/jqwidgets/73NmC/"> Invoke the getView method of the jqxDataTable.</a></div> 
                    </div>
                </td>
            </tr>
           <tr>
                <td class="documentation-option-type-click">
                    <span id='Span81'>getCellValue</span>
                </td>
                <td>
                    <span>Method</span>
                </td>
                <td>
                </td>
            </tr>
            <tr>
                <td colspan='3' style='width: 100%'>
                    <div class="documentation-option-description property-content" style="display: none;">
                        <p>
                           Returns a value of a cell.</p>
                        List of parameters:
                        <ul>
                            <li>row index.</li>
                            <li>data field - column's data field.</li>
                        </ul>
                        <h4>
                            Code example</h4>
                        <p>
                            Invoke the <code>getCellValue</code> method.
                        </p>
                        <pre><code>var value = $("#dataTable").jqxDataTable('getCellValue', 0, 'firstName');</code></pre>
                                  <div style="padding-bottom:5px;">
  <em>Try it:</em> <a target="_blank" href="http://jsfiddle.net/jqwidgets/GRZCR/"> Invoke the getCellValue method of the  jqxDataTable.</a></div> 
                    </div>
                </td>
            </tr>
           <tr>
                <td class="documentation-option-type-click">
                    <span id='Span82'>hideColumn</span>
                </td>
                <td>
                    <span>Method</span>
                </td>
                <td>
                </td>
            </tr>
            <tr>
                <td colspan='3' style='width: 100%'>
                    <div class="documentation-option-description property-content" style="display: none;">
                        <p>
                           Hides a column.</p>
                        List of parameters:
                        <ul>
                            <li>data field - column's data field.</li>
                        </ul>
                        <h4>
                            Code example</h4>
                        <p>
                            Invoke the <code>hideColumn</code> method.
                        </p>
                        <pre><code>$("#dataTable").jqxDataTable('hideColumn','firstName');</code></pre>
                            <div style="padding-bottom:5px;">
  <em>Try it:</em> <a target="_blank" href="http://jsfiddle.net/jqwidgets/Mq4fR/"> Invoke the hideColumn method of the  jqxDataTable.</a></div> 
                    </div>
                </td>
            </tr>
           <tr>
                <td class="documentation-option-type-click">
                    <span id='Span83'>hideDetails</span>
                </td>
                <td>
                    <span>Method</span>
                </td>
                <td>
                </td>
            </tr>
            <tr>
                <td colspan='3' style='width: 100%'>
                    <div class="documentation-option-description property-content" style="display: none;">
                        <p>
                           Hides the details of a row.</p>
                        List of parameters:
                        <ul>
                            <li>row index.</li>
                        </ul>
                        <h4>
                            Code example</h4>
                        <p>
                            Invoke the <code>hideDetails</code> method.
                        </p>
                        <pre><code>$("#dataTable").jqxDataTable('hideDetails', 0);</code></pre>
                                  <div style="padding-bottom:5px;">
  <em>Try it:</em> <a target="_blank" href="http://jsfiddle.net/jqwidgets/QyU4K/"> Invoke the hideDetails method of the  jqxDataTable.</a></div> 
                    </div>
                </td>
            </tr>
           <tr>
                <td class="documentation-option-type-click">
                    <span id='Span84'>lockRow</span>
                </td>
                <td>
                    <span>Method</span>
                </td>
                <td>
                </td>
            </tr>
            <tr>
                <td colspan='3' style='width: 100%'>
                    <div class="documentation-option-description property-content" style="display: none;">
                        <p>
                           Locks a row i.e editing of the row would be disabled.</p>
                        List of parameters:
                        <ul>
                            <li>row index.</li>
                        </ul>
                        <h4>
                            Code example</h4>
                        <p>
                            Invoke the <code>lockRow</code> method.
                        </p>
                        <pre><code>$("#dataTable").jqxDataTable('lockRow', 0);</code></pre>
                         <div style="padding-bottom:5px;">
  <em>Try it:</em> <a target="_blank" href="http://jsfiddle.net/jqwidgets/7E7su/"> Invoke the lockRow method of the  jqxDataTable.</a></div> 
                    </div>
                </td>
            </tr>
           <tr>
                <td class="documentation-option-type-click">
                    <span id='Span85'>refresh</span>
                </td>
                <td>
                    <span>Method</span>
                </td>
                <td>
                </td>
            </tr>
            <tr>
                <td colspan='3' style='width: 100%'>
                    <div class="documentation-option-description property-content" style="display: none;">
                        <p>
                           Performs a layout and updates the HTML elements position and size.</p>
                        <h4>
                            Code example</h4>
                        <p>
                            Invoke the <code>refresh</code> method.
                        </p>
                        <pre><code>$("#dataTable").jqxDataTable('refresh');</code></pre>
                          <div style="padding-bottom:5px;">
  <em>Try it:</em> <a target="_blank" href="http://jsfiddle.net/jqwidgets/g7jn6/"> Invoke the refresh method of the  jqxDataTable.</a></div> 
                    </div>
                </td>
            </tr>
           <tr>
                <td class="documentation-option-type-click">
                    <span id='Span86'>render</span>
                </td>
                <td>
                    <span>Method</span>
                </td>
                <td>
                </td>
            </tr>
            <tr>
                <td colspan='3' style='width: 100%'>
                    <div class="documentation-option-description property-content" style="display: none;">
                        <p>
                           Renders jqxDataTable.</p>
                        <h4>
                            Code example</h4>
                        <p>
                            Invoke the <code>render</code> method.
                        </p>
                        <pre><code>$("#dataTable").jqxDataTable('render');</code></pre>
                            <div style="padding-bottom:5px;">
  <em>Try it:</em> <a target="_blank" href="http://jsfiddle.net/jqwidgets/T8Tpy/"> Invoke the render method of the  jqxDataTable.</a></div> 
                    </div>
                </td>
            </tr>
           <tr>
                <td class="documentation-option-type-click">
                    <span id='Span87'>removeFilter</span>
                </td>
                <td>
                    <span>Method</span>
                </td>
                <td>
                </td>
            </tr>
            <tr>
                <td colspan='3' style='width: 100%'>
                    <div class="documentation-option-description property-content" style="display: none;">
                        <p>
                           Removes a filter.</p>
                        List of parameters:
                        <ul>
                            <li>data field - column's data field.</li>
                        </ul>
                        <h4>
                            Code example</h4>
                        <p>
                            Invoke the <code>removeFilter</code> method.
                        </p>
                        <pre><code>$("#dataTable").jqxDataTable('removeFilter','firstName');</code></pre>
                               <div style="padding-bottom:5px;">
  <em>Try it:</em> <a target="_blank" href="http://jsfiddle.net/jqwidgets/b9wYz/"> Invoke the removeFilter method of the  jqxDataTable.</a></div> 
                    </div>
                </td>
            </tr>
           <tr>
                <td class="documentation-option-type-click">
                    <span id='Span88'>scrollOffset</span>
                </td>
                <td>
                    <span>Method</span>
                </td>
                <td>
                </td>
            </tr>
            <tr>
                <td colspan='3' style='width: 100%'>
                    <div class="documentation-option-description property-content" style="display: none;">
                        <p>
                           Scrolls to a position.</p>
                        List of parameters:
                        <ul>
                            <li>top - the vertical scrollbar value.</li>
                            <li>left - the horizontal scrollbar value.</li>
                        </ul>
                        <h4>
                            Code example</h4>
                        <p>
                            Invoke the <code>scrollOffset</code> method.
                        </p>
                        <pre><code>$("#dataTable").jqxDataTable('scrollOffset', 10, 10);</code></pre>
                        <p>
                            Get the scroll position.
                        </p>
                        <pre><code>
var offset = $("#dataTable").jqxDataTable('scrollOffset');
var left = offset.left;
var top = offset.top;                                                        
                        </code></pre>
                                          <div style="padding-bottom:5px;">
  <em>Try it:</em> <a target="_blank" href="http://jsfiddle.net/jqwidgets/ykcVZ/"> Invoke the scrollOffset method of the  jqxDataTable.</a></div> 
                    </div>
                </td>
            </tr>
           <tr>
                <td class="documentation-option-type-click">
                    <span id='Span89'>setColumnProperty</span>
                </td>
                <td>
                    <span>Method</span>
                </td>
                <td>
                </td>
            </tr>
            <tr>
                <td colspan='3' style='width: 100%'>
                    <div class="documentation-option-description property-content" style="display: none;">
                        <p>
                           Sets a property of a column. See the <code>columns</code> property for more information.</p>
                        List of parameters:
                        <ul>
                           <li>data field - column's data field.</li>
                           <li>property name - determines the property's name.</li>
                           <li>property value - determines the property's value.</li>
                         </ul>
                        <h4>
                            Code example</h4>
                        <p>
                            Invoke the <code>setColumnProperty</code> method.
                        </p>
                        <pre><code>$("#dataTable").jqxDataTable('setColumnProperty', 'firstName', 'width', 200);</code></pre>
                                  <div style="padding-bottom:5px;">
  <em>Try it:</em> <a target="_blank" href="http://jsfiddle.net/jqwidgets/RhHVY/"> Invoke the setColumnProperty method of the  jqxDataTable.</a></div> 
                    </div>
                </td>
            </tr>
           <tr>
                <td class="documentation-option-type-click">
                    <span id='Span90'>showColumn</span>
                </td>
                <td>
                    <span>Method</span>
                </td>
                <td>
                </td>
            </tr>
            <tr>
                <td colspan='3' style='width: 100%'>
                    <div class="documentation-option-description property-content" style="display: none;">
                        <p>
                           Shows a column.</p>
                        List of parameters:
                        <ul>
                           <li>data field - column's data field.</li>
                         </ul>
                        <h4>
                            Code example</h4>
                        <p>
                            Invoke the <code>showColumn</code> method.
                        </p>
                        <pre><code>$("#dataTable").jqxDataTable('showColumn', 'firstName');</code></pre>
                          <div style="padding-bottom:5px;">
  <em>Try it:</em> <a target="_blank" href="http://jsfiddle.net/jqwidgets/8Jfp5/"> Invoke the showColumn method of the  jqxDataTable.</a></div> 
                    </div>
                </td>
            </tr>
           <tr>
                <td class="documentation-option-type-click">
                    <span id='Span91'>selectRow</span>
                </td>
                <td>
                    <span>Method</span>
                </td>
                <td>
                </td>
            </tr>
            <tr>
                <td colspan='3' style='width: 100%'>
                    <div class="documentation-option-description property-content" style="display: none;">
                        <p>
                           Selects a row.</p>
                        List of parameters:
                        <ul>
                           <li>row index.</li>
                         </ul>
                        <h4>
                            Code example</h4>
                        <p>
                            Invoke the <code>selectRow</code> method.
                        </p>
                        <pre><code>$("#dataTable").jqxDataTable('selectRow', 0);</code></pre>
                               <div style="padding-bottom:5px;">
  <em>Try it:</em> <a target="_blank" href="http://jsfiddle.net/jqwidgets/kp5C3/"> Invoke the selectRow method of the  jqxDataTable.</a></div> 
                    </div>
                </td>
            </tr>
           <tr>
                <td class="documentation-option-type-click">
                    <span id='Span92'>showDetails</span>
                </td>
                <td>
                    <span>Method</span>
                </td>
                <td>
                </td>
            </tr>
            <tr>
                <td colspan='3' style='width: 100%'>
                    <div class="documentation-option-description property-content" style="display: none;">
                        <p>
                           Shows a row details.</p>
                        List of parameters:
                        <ul>
                           <li>row index.</li>
                         </ul>
                        <h4>
                            Code example</h4>
                        <p>
                            Invoke the <code>showDetails</code> method.
                        </p>
                        <pre><code>$("#dataTable").jqxDataTable('showDetails', 0);</code></pre>
                              <div style="padding-bottom:5px;">
  <em>Try it:</em> <a target="_blank" href="http://jsfiddle.net/jqwidgets/7ac5G/"> Invoke the showDetails method of the  jqxDataTable.</a></div> 
                    </div>
                </td>
            </tr>
           <tr>
                <td class="documentation-option-type-click">
                    <span id='Span93'>setCellValue</span>
                </td>
                <td>
                    <span>Method</span>
                </td>
                <td>
                </td>
            </tr>
            <tr>
                <td colspan='3' style='width: 100%'>
                    <div class="documentation-option-description property-content" style="display: none;">
                        <p>
                           Sets a value of a cell.</p>
                        List of parameters:
                        <ul>
                            <li>row index.</li>
                            <li>data field - column's data field.</li>
                            <li>cell value - the value to be set.</li>
                        </ul>
                        <h4>
                            Code example</h4>
                        <p>
                            Invoke the <code>setCellValue</code> method.
                        </p>
                        <pre><code>$("#dataTable").jqxDataTable('setCellValue', 0, 'firstName', 'New Value');</code></pre>
                                 <div style="padding-bottom:5px;">
  <em>Try it:</em> <a target="_blank" href="http://jsfiddle.net/jqwidgets/YMw94/"> Invoke the setCellValue method of the  jqxDataTable.</a></div> 
                    </div>
                </td>
            </tr>
           <tr>
                <td class="documentation-option-type-click">
                    <span id='Span94'>sortBy</span>
                </td>
                <td>
                    <span>Method</span>
                </td>
                <td>
                </td>
            </tr>
            <tr>
                <td colspan='3' style='width: 100%'>
                    <div class="documentation-option-description property-content" style="display: none;">
                        <p>
                           Sorts a column, if <code>sortable</code> is set to true.</p>
                        List of parameters:
                        <ul>
                            <li>data field - column's data field.</li>
                            <li>sort order - 'asc', 'desc' or null</li>
                        </ul>
                        <h4>
                            Code example</h4>
                        <p>
                            Invoke the <code>sortBy</code> method.
                        </p>
                        <pre><code>$("#dataTable").jqxDataTable('sortBy', 'firstName', 'asc');</code></pre>
                           <div style="padding-bottom:5px;">
  <em>Try it:</em> <a target="_blank" href="http://jsfiddle.net/jqwidgets/gY4MT/"> Invoke the sortBy method of the  jqxDataTable.</a></div> 
                    </div>
                </td>
            </tr>
          <tr>
                <td class="documentation-option-type-click">
                    <span id='Span95'>updating</span>
                </td>
                <td>
                    <span>Method</span>
                </td>
                <td>
                </td>
            </tr>
            <tr>
                <td colspan='3' style='width: 100%'>
                    <div class="documentation-option-description property-content" style="display: none;">
                        <p>
                           Gets a boolean value which determines whether jqxDataTable is in update state i.e the <code>beginUpdate</code> method was called and the <code>endUpdate</code> method is not called yet.</p>
                        <h4>
                            Code example</h4>
                        <p>
                            Invoke the <code>updating</code> method.
                        </p>
                        <pre><code>var isUpdating = $("#dataTable").jqxDataTable('updating');</code></pre>
                        <div style="padding-bottom:5px;">
  <em>Try it:</em> <a target="_blank" href="http://jsfiddle.net/jqwidgets/PL9MK/"> Invoke the updating method of the  jqxDataTable.</a></div> 
                    </div>
                </td>
            </tr>
          <tr>
                <td class="documentation-option-type-click">
                    <span id='Span96'>updateBoundData</span>
                </td>
                <td>
                    <span>Method</span>
                </td>
                <td>
                </td>
            </tr>
            <tr>
                <td colspan='3' style='width: 100%'>
                    <div class="documentation-option-description property-content" style="display: none;">
                        <p>
                          Performs a data bind and updates jqxDataTable with the new data.</p>
                        <h4>
                            Code example</h4>
                        <p>
                            Invoke the <code>updateBoundData</code> method.
                        </p>
                        <pre><code>$("#dataTable").jqxDataTable('updateBoundData');</code></pre>
                             <div style="padding-bottom:5px;">
  <em>Try it:</em> <a target="_blank" href="http://jsfiddle.net/jqwidgets/Awb44/"> Invoke the updateBoundData method of the  jqxDataTable.</a></div> 
                    </div>
                </td>
            </tr>
           <tr>
                <td class="documentation-option-type-click">
                    <span id='Span97'>unselectRow</span>
                </td>
                <td>
                    <span>Method</span>
                </td>
                <td>
                </td>
            </tr>
            <tr>
                <td colspan='3' style='width: 100%'>
                    <div class="documentation-option-description property-content" style="display: none;">
                        <p>
                           Unselects a row.</p>
                        List of parameters:
                        <ul>
                           <li>row index.</li>
                         </ul>
                        <h4>
                            Code example</h4>
                        <p>
                            Invoke the <code>unselectRow</code> method.
                        </p>
                        <pre><code>$("#dataTable").jqxDataTable('unselectRow', 0);</code></pre>
                            <div style="padding-bottom:5px;">
  <em>Try it:</em> <a target="_blank" href="http://jsfiddle.net/jqwidgets/B7x4x/"> Invoke the unselectRow method of the  jqxDataTable.</a></div> 
                    </div>
                </td>
            </tr>
           <tr>
                <td class="documentation-option-type-click">
                    <span id='Span98'>updateRow</span>
                </td>
                <td>
                    <span>Method</span>
                </td>
                <td>
                </td>
            </tr>
            <tr>
                <td colspan='3' style='width: 100%'>
                    <div class="documentation-option-description property-content" style="display: none;">
                        <p>
                           Updates the row's data. For synchronization with a server, please look also the jqxDataAdapter plug-in's help documentation.</p>
                        List of parameters:
                        <ul>
                           <li>row index.</li>
                           <li>row data - object with key/value pairs.</li>
                         </ul>
                        <h4>
                            Code example</h4>
                        <p>
                            Invoke the <code>updateRow</code> method.
                        </p>
                        <pre><code>$("#dataTable").jqxDataTable('updateRow', 0, {firstName: "New First Name", lastName: "New Last Name"});</code></pre>
                               <div style="padding-bottom:5px;">
  <em>Try it:</em> <a target="_blank" href="http://jsfiddle.net/jqwidgets/QaGDv/"> Invoke the updateRow method of the  jqxDataTable.</a></div> 
                    </div>
                </td>
            </tr>
          <tr>
                <td class="documentation-option-type-click">
                    <span id='Span99'>unlockRow</span>
                </td>
                <td>
                    <span>Method</span>
                </td>
                <td>
                </td>
            </tr>
            <tr>
                <td colspan='3' style='width: 100%'>
                    <div class="documentation-option-description property-content" style="display: none;">
                        <p>
                           Unlocks a row.</p>
                        List of parameters:
                        <ul>
                           <li>row index.</li>
                         </ul>
                        <h4>
                            Code example</h4>
                        <p>
                            Invoke the <code>unlockRow</code> method.
                        </p>
                        <pre><code>$("#dataTable").jqxDataTable('unlockRow', 0);</code></pre>
                              <div style="padding-bottom:5px;">
  <em>Try it:</em> <a target="_blank" href="http://jsfiddle.net/jqwidgets/3Q8cz/"> Invoke the unlockRow method of the  jqxDataTable.</a></div> 
                    </div>
                </td>
            </tr>
        </table>
        <br />
    </div>
</body>
</html>
